---
title: "Analysis 2: Unemployment index"
---

# 0. Preparation

-   Data retrieved from KOSIS (Korean Statistical Information Service).

-   Agenda1: examining seasonal and monthly disparities in unemployment index to estimate the variance using longitudinal data.

-   Agenda2: visualizing gender inequalities in unemployment status to identify the degree of change in unemployment index affected by seasonal and monthly disparities and to identify the degree of change in unemployment index affected by last three regimes.

-   Agenda3: predicting to figure out whethter the trends in seasonal and monthly disparities maintain by utilizing ARIMA algorithm.

## - Package Load

```{r, message=FALSE,results='hide'}
pacman::p_load("jsonlite",
               "tidyverse",
               "forecast",
               "ggfortify",
               "forecast",
               "httr",
               "sleekts",
               "lubridate",
               "stats",
               "smooth",
               "ghibli",
               "plyr",
               "scales",
               "formattable",
               "knitr",
               "showtext",
               "kableExtra",
               "IRdisplay",
               "glue",
               "echarts4r",
               "plotly",
               "magrittr")
```

## - Adding fonts for ggplot2

```{r}
font_add_google(name="Noto Serif")
showtext_auto()
```

# 1. Importing data and clensing

## - Importing data

```{r, message=FALSE,results='hide'}
# auto inporting function
total=fromJSON("https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/101/DT_1DA7001S/2/1/20211110114643_1&prdSe=M&newEstPrdCnt=142")
male=fromJSON("https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/101/DT_1DA7001S/2/1/20211110114643_2&prdSe=M&newEstPrdCnt=142")
female=fromJSON("https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/101/DT_1DA7001S/2/1/20211110114643_3&prdSe=M&newEstPrdCnt=142")

total %>% 
    full_join(male) %>% 
    full_join(female) -> unemployment_data
```

```{r}
unemployment_data %T>% 
    glimpse() %>% 
    head(5) %>% 
    kbl() %>% 
    kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))

```

## - Clensing data

```{r}
unemployment_data$C1_NM_ENG %>% table()
unemployment_data %>% 
    transmute(Month=PRD_DE,Gender=ordered(C1_NM_ENG,levels=c("Total","Male","Female")),                                          Unemployment_Rate=DT) %>% 
    tidyr::spread(key="Month",value="Unemployment_Rate") %>% 
    kbl() %>% 
    kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
```

# 2. Visualization

```{r}
unemp_total=ts(as.numeric(total$DT),frequency=12,start=c(2010,1))
unemp_male=ts(as.numeric(male$DT),frequency=12,start=c(2010,1))
unemp_female=ts(as.numeric(female$DT),frequency=12,start=c(2010,1))
```

## - Unemployment rate of total population

```{r, fig.align='center',fig.width=22,fig.height=20}
#| column: page
unemp_total %>% 
    autoplot() + 
    theme_classic()+
    theme(text=element_text(family="Noto Serif",size=12)) -> p

ggplotly(p) %>% 
    layout(title = list(text = paste0(
        'Unemployment rate of economically active population (2010~2022)',
        '<br>',
        '<sup>',
        'Korean Population and Housing Census (retrieved from KOSIS) (Jan, 2010 ~ June, 2022)','</sup>'),
        x = 0,
        font=list(size=16)))

```

### - Time-series smoothing

```{r}
# 3RSSH Twice. 4253H Twice smoothing
smooth_3RSSH=function(data){ 
  smooth3RSS=smooth(data, kind="3RSS") 
  n=length(data) 
  smooth3RSSH=smooth3RSS 
  
  for (i in 2:(n-1)) {
    smooth3RSSH[i] <- smooth3RSS[i-1]/4 + smooth3RSS[i]/2 + smooth3RSS[i+1]/4}
    
    smooth3RSSH[1] <- smooth3RSS[1]; 
    smooth3RSSH[n] <- smooth3RSS[n] 
    rough=data-smooth3RSSH 
    roughH=rough 
  
    smooth3RSS2=smooth(rough,kind="3RSS") 
  
  for (i in 2:(n-1)) {
    roughH[i] <- smooth3RSS2[i-1]/4 + smooth3RSS2[i]/2 + smooth3RSS2[i+1]/4}
  
    roughH[1] <- smooth3RSS2[1]; 
    roughH[n] <- smooth3RSS2[n] 
    out=smooth3RSSH+roughH 
    out=as.vector(out) 
    return(out)} 
```

```{r}
# Data clensing
smooth=tibble(
    ym(total$PRD_DE),as.numeric(total$DT),smooth_3RSSH(as.numeric(total$DT)),
    sleek(as.numeric(total$DT)))

names(smooth)=c("year","Default","3RSSH Twice","4253H Twice")

datebreaks <- seq(as.Date("2010-01-01"), as.Date("2022-12-01"), by="6 month")
```

```{r, fig.align='center',fig.width=22,fig.height=20}
#| column: page


smooth %>% 
    tidyr::gather("Default",
                  "3RSSH Twice",
                  "4253H Twice",
                  key = "variable",
                  value="value") %>%
    mutate(type=factor(variable,
                           levels=c("Default",
                                    "3RSSH Twice",
                                    "4253H Twice"))) %>% 
    ggplot(aes(x=year,y=value,color=type, group = 1,
               text=paste('Smoothing Type:', type,
                     '<br>Time: ', format(zoo::as.yearmon(year),"%Y/%m"),
                     '<br>Rate (%): ', formattable::percent(value/100)))) +
    geom_line(aes(x=year,y=value),size=1) +
    geom_point(size=2)+
    theme_classic() +
    labs(color="Smoothing Methods",
         y="Unimployment Index(%)")+
    scale_x_date(breaks=datebreaks,labels=date_format("%Y/%m"))+
    theme(text=element_text(family="Noto Serif",size=12),
          axis.text.x = element_text(angle=30, hjust=1),
          axis.title.x=element_blank()) -> p1

ggplotly(p1,tooltip="text") %>% 
    layout(title = list(text = paste0(
        'Unemployment Rate of economically active population with smoothing',
        '<br>',
        '<sup>',
        'Source: Korean Population and Housing Census (retrieved from KOSIS) (Jan, 2010 ~ June, 2022)','</sup>'),
        x = 0,
        font=list(size=16)))

```

## - Comparison of the unemployment rate among presidential regimes

```{r}
regime=data.frame(president=factor(c("Lee Myung-bak","Park Geun-hye","Hwang Kyo-ahn","Moon Jae-in","Yoon Suk-yeol"),
                              levels=c("Lee Myung-bak","Park Geun-hye","Hwang Kyo-ahn","Moon Jae-in","Yoon Suk-yeol")),
             start_date=ymd(c(20100101,20130201,20170301,20170510,20220510)), 
             end_date=ymd(c(20130131,20170228,20170509,20220509,20230701)))

regime %>% 
    kbl(col.names = gsub("[_]", " ", names(.)) %>% str_to_title()) %>% 
    kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
```

```{r, fig.align='center',fig.width=22,fig.height=20}
#| column: page

datebreaks <- seq(as.Date("2010-01-01"), as.Date("2022-12-01"), by="6 month")
smooth %>% 
    tidyr::gather("Default",
                  "3RSSH Twice",
                  "4253H Twice",
                  key = "variable",
                  value="value") %>% 
    dplyr::filter(variable=="Default") %>% 
    ggplot(aes(group=1,text=paste('Time: ', format(zoo::as.yearmon(year),"%Y/%m"),
                     '<br>Rate (%): ', formattable::percent(value/100))))+
    geom_rect(data=regime,aes(xmin=start_date,
                              xmax=end_date, 
                              ymin=2,
                              ymax=6, 
                              fill=president,text=""), alpha=0.2)+
    geom_line(aes(x=year,y=value),color="black",size=1)+
    geom_point(aes(x=year,y=value),color="black",size=1.5)+
    theme_classic() +
    labs(fill="Presidential Regime",
         y="Unimployment Index(%)")+
    scale_x_date(breaks=datebreaks,labels=date_format("%Y/%m"))+
    theme(text=element_text(family="Noto Serif",size=12),
          axis.text.x = element_text(angle=30, hjust=1),
          axis.title.x=element_blank())+
    geom_smooth(aes(x=year,y=value),
                method='loess',
                color="orange",
                linetype="dashed",
                fill = "orange",
                alpha=0.1) -> p2
    

ggplotly(p2,tooltip=c("text") )%>% 
    layout(title = list(text = paste0(
        'Unemployment Rate of economically active population with smoothing',
        '<br>',
        '<sup>',
        'Source: Korean Population and Housing Census (retrieved from KOSIS) (Jan, 2010 ~ June, 2022)','</sup>'),
        x = 0,
        font=list(size=16)))

 
```

## - Comparison of the unemployment rate between male and female

```{r, fig.align='center',fig.width=22,fig.height=20}
#| column: page
unemp=data.frame(year=ym(total$PRD_DE),
                 total_unemp=total$DT,
                 male_unemp=male$DT,
                 female_unemp=female$DT)

unemp %>% 
    mutate_if(is.character,as.numeric) %>%
    mutate(month=format(as.Date(year,format="%Y%m"), "%b")) -> unemp
unemp$month=ordered(month.abb[as.numeric(unemp$month)],levels=month.abb)


unemp %>% 
    select(-year) %>% 
    gather("variable","value",1:3) %>% 
    group_by(month,variable,.add = TRUE) %>% 
    mutate(Mean_value= mean(value),Min_value=min(value),Max_value=max(value))%>% 
    mutate(variable=factor(variable,
                           levels=c("total_unemp","male_unemp","female_unemp"))) %>%
    ggplot(aes(x=month,y=Mean_value,fill=variable))+ 
    facet_wrap(~variable,
               labeller = labeller(variable = c("total_unemp" = "Total Unemployment",   
                                                "male_unemp" = "Male Unemployment",
                                            "female_unemp" = "Female Unemployment")))+
    theme_classic()+
    geom_bar(stat = "identity", position = "dodge")+
    scale_fill_manual(labels=c("Total Unemployment", 
                               "Male Unemployment",
                               "Female Unemployment"),
                      name = "Genders",values =c("gray","#619CFF","#F8766D"))+
    labs(y="Unemployment Rate\n",
        x="\n")+
    geom_errorbar(aes(ymin = Min_value, 
                      ymax = Max_value), 
                      width = 0.05, position = position_dodge(0.9))+
    theme(text=element_text(family="Noto Serif",size=12),
          axis.text.x = element_text(angle=45, hjust=1),
          axis.title.x=element_blank())+
    coord_cartesian(ylim=c(1.5,7))+
    geom_text(aes(label= paste(sprintf("%2.2f", Mean_value),"%",sep="")),
              vjust=-0.4, size=3,position = position_dodge(width = 1)) -> p3
    

mrg <- list(l = 100, r = 50 ,
          b = 30, t = 150)

ggplotly(p3, tooltip="text")%>% 
    style(textposition = "top") %>% 
    layout(title = list(text = paste0(
        'Unemployment Rate of economically active population',
        '<br>',
        '<sup>',
        'Source: Korean Population and Housing Census (retrieved from KOSIS) (Jan, 2010 ~ June, 2022)<br>',
        'Error Bar: Min-Max Rate Per Month',
        '</sup>'),
        x = 0.05,
        font=list(size=16)),
        margin = mrg) 
        
        
        
        
    
  

```

```{r, fig.align='center',fig.width=22,fig.height=20}
#| column: page
unemp=data.frame(year=ym(total$PRD_DE),
                 total_unemp=total$DT,
                 male_unemp=male$DT,
                 female_unemp=female$DT)

unemp %>% 
    mutate_if(is.character,as.numeric) %>%
    mutate(month=format(as.Date(year,format="%Y%m"), "%b")) -> unemp
unemp$month=ordered(month.abb[as.numeric(unemp$month)],levels=month.abb)


unemp %>% 
    select(-year) %>% 
    gather("variable","value",1:3) %>% 
    group_by(month,variable,.add = TRUE) %>% 
    mutate(Mean_value= mean(value),Min_value=min(value),Max_value=max(value))%>% 
    mutate(variable=factor(variable,
                           levels=c("total_unemp","male_unemp","female_unemp"))) %>%
    ggplot(aes(x=month,y=Mean_value,fill=variable))+ 
    theme_classic()+
    geom_bar(stat = "identity", position = "dodge")+
    scale_fill_manual(labels=c("Total Unemployment", 
                               "Male Unemployment",
                               "Female Unemployment"),
                      name = "Genders",values =c("gray","#619CFF","#F8766D"))+
    labs(y="Unemployment Rate\n")+
    geom_errorbar(aes(ymin = Min_value, 
                      ymax = Max_value), 
                      width = 0.05, position = position_dodge(0.9))+
    theme(text=element_text(family="Noto Serif",size=12),
          axis.text.x = element_text(angle=45, hjust=1),
          axis.title.x=element_blank())+
    coord_cartesian(ylim=c(1.5,7)) -> p4
    

mrg <- list(l = 100, r = 50 ,
          b = 30, t = 150)

ggplotly(p4, tooltip=c("value","year"))%>% 
    style(textposition = "top") %>% 
    layout(title = list(text = paste0(
        'Unemployment Rate of economically active population',
        '<br>',
        '<sup>',
        'Source: Korean Population and Housing Census (retrieved from KOSIS) (Jan, 2010 ~ June, 2022)<br>',
        'Error Bar: Min-Max Rate Per Month',
        '</sup>'),
        x = 0.05,
        font=list(size=16)),
        margin = mrg)     
```

## - Seasonal decomposition of the unemployment rate

```{r}
unemp_total.decompose=decompose(unemp_total)
unemp_male.decompose=decompose(unemp_male)
unemp_female.decompose=decompose(unemp_female)
```

```{r, fig.align='center',fig.width=15,fig.height=8}
#| column: page
# Total
plot(unemp_total.decompose,cex.main=2, cex.lab=2, cex.axis=2)
# Male
plot(unemp_male.decompose,cex.main=2, cex.lab=2, cex.axis=2)
# Female
plot(unemp_female.decompose,cex.main=2, cex.lab=2, cex.axis=2)
```

```{r, fig.align='center',fig.width=15,fig.height=8}
#| column: page
plot(unemp_total.decompose$seasonal,main="The Plot of Seasoal Decomposition",cex.main=2, cex.lab=2, cex.axis=2)
```

```{r, fig.align='center',fig.width=15,fig.height=8}
#| column: page

# Box-Cox Transformation(To visualize seasonality and to improve normality)
lambda <- forecast::BoxCox.lambda(unemp_total)
unemp_total_bc <- forecast::BoxCox(unemp_total, lambda)

# Boxcox transforamtion is only applicable when data only contain positive value.
plot(unemp_total_bc, main = "Box-Cox : Unemployment Rate",,cex.main=2, cex.lab=2, cex.axis=2)
```

### - Visualize seasonality and comparing trends per year

```{r}
unemp %>%
    mutate(time=year,
        year=factor(format(as.Date(year), "%Y"))) -> unemp2
```

```{r, fig.align='center',fig.width=22,fig.height=20}
#| column: page


unemp2 %>% 
    select(time,month,year,total_unemp,male_unemp,female_unemp) %>%
    gather("variable","value", 4:6) %>% 
    mutate(variable=factor(variable,levels= c("total_unemp",
                                              "male_unemp",
                                          "female_unemp"))) %>% 
    ggplot(aes(x=as.factor(month),
               y=value,
               group=year,
               color=as.factor(year),
               text=paste('Time: ', format(zoo::as.yearmon(time),"%Y/%m"),
                     '<br>Rate (%): ', formattable::percent(value/100),
                     '<br>Gender: ',variable))) +
    geom_line() + 
    geom_point()+
    facet_wrap(~variable,
               labeller = labeller(variable = 
                                       c("total_unemp" = "Total Unemployment",   
                                         "male_unemp" = "Male Unemployment",
                                         "female_unemp" = "Female Unemployment")))+
    theme_classic()+
    scale_fill_manual(labels=c("Total Unemployment", 
                               "Male Unemployment",
                               "Female Unemployment"),
                      name = "Genders",values =c("gray","#619CFF","#F8766D"))+
    labs(y="Unemployment Rate\n",color = "Year")+
    theme(text=element_text(family="Noto Serif",size=12),
          axis.text.x = element_text(angle=45, hjust=1),
          axis.title.x=element_blank()) +
    coord_cartesian(ylim=c(1.5,7)) -> p5
    

mrg <- list(l = 100, r = 50 ,
          b = 30, t = 100)

gp<- ggplotly(p5, tooltip="text")%>% 
    style(textposition = "top") %>% 
    layout(title = list(text = paste0(
        'Unemployment Rate of economically active population',
        '<br>',
        '<sup>',
        'Source: Korean Population and Housing Census (retrieved from KOSIS) (Jan, 2010 ~ June, 2022)',
        '</sup>'),
        x = 0.05,
        font=list(size=16)),
        margin = mrg) 

for (i in seq_along(gp$x$data)) {
  # Is the layer the first entry of the group?
  is_first <- grepl("^\\(.*?,1\\)", gp$x$data[[i]]$name)
  # Extract the group identifier and assign it to the name and legendgroup arguments
  gp$x$data[[i]]$name <- gsub("^\\((.*?),\\d+\\)", "\\1", gp$x$data[[i]]$name)
  gp$x$data[[i]]$legendgroup <- gp$x$data[[i]]$name
  # Show the legend only for the first layer of the group 
  if (!is_first) gp$x$data[[i]]$showlegend <- FALSE
}

gp
```

```{r, fig.align='center',fig.width=22,fig.height=20}
#| column: page


unemp2 %>% 
    select(time,month,year,total_unemp,male_unemp,female_unemp) %>%
    gather("variable","value", 4:6) %>% 
    mutate(variable=factor(variable,levels= c("total_unemp",
                                              "male_unemp",
                                          "female_unemp"))) %>% 
    ggplot(aes(x=as.factor(month),
               y=sleek(value),
               group=year,
               color=as.factor(year),
               text=paste('Time: ', format(zoo::as.yearmon(time),"%Y/%m"),
                     '<br>Rate (%): ', formattable::percent(value/100),
                     '<br>Gender: ',variable))) +
    geom_line() + 
    geom_point()+
    facet_wrap(~variable,
               labeller = labeller(variable = 
                                       c("total_unemp" = "Total Unemployment",   
                                         "male_unemp" = "Male Unemployment",
                                         "female_unemp" = "Female Unemployment")))+
    theme_classic()+
    scale_fill_manual(labels=c("Total Unemployment", 
                               "Male Unemployment",
                               "Female Unemployment"),
                      name = "Genders",values =c("gray","#619CFF","#F8766D"))+
    labs(y="Unemployment Rate\n",color = "Year")+
    theme(text=element_text(family="Noto Serif",size=12),
          axis.text.x = element_text(angle=45, hjust=1),
          axis.title.x=element_blank()) +
    coord_cartesian(ylim=c(1.5,7)) -> p6
    

mrg <- list(l = 100, r = 50 ,
          b = 30, t = 100)

gp1<- ggplotly(p6, tooltip="text")%>% 
    style(textposition = "top") %>% 
    layout(title = list(text = paste0(
        'Unemployment Rate of economically active population with 4253H Twice smoothing',
        '<br>',
        '<sup>',
        'Source: Korean Population and Housing Census (retrieved from KOSIS) (Jan, 2010 ~ June, 2022)',
        '</sup>'),
        x = 0.05,
        font=list(size=16)),
        margin = mrg) 

for (i in seq_along(gp$x$data)) {
  # Is the layer the first entry of the group?
  is_first <- grepl("^\\(.*?,1\\)", gp$x$data[[i]]$name)
  # Extract the group identifier and assign it to the name and legendgroup arguments
  gp$x$data[[i]]$name <- gsub("^\\((.*?),\\d+\\)", "\\1", gp$x$data[[i]]$name)
  gp$x$data[[i]]$legendgroup <- gp$x$data[[i]]$name
  # Show the legend only for the first layer of the group 
  if (!is_first) gp$x$data[[i]]$showlegend <- FALSE
}

gp1
```

## - Predicting next year's unemployment rate using ARIMA algorithm.

```{r}
# ARIMA
aTSA::adf.test(unemp_total, nlag = NULL, output = TRUE) 
# p-value<=0.01 Reject null-hypothesis. (Stationary)

```

```{r}
fit=auto.arima(unemp_total,trace=T)
```

```{r, fig.align='center',fig.width=22,fig.height=20}
#| column: page
forecast::forecast(fit, level=c(75, 95), h=12) %>% 
    autoplot() + 
    theme_classic()+
    theme(text=element_text(family="Noto Serif",size=12)) -> p7

ggplotly(p7) %>% 
    layout(title = list(text = paste0(
        'Prediction of unemployment rate of economically active population (for next 12 months)',
        '<br>',
        '<sup>',
        'Korean Population and Housing Census (retrieved from KOSIS) (Jan, 2010 ~ June, 2022)','</sup>'),
        x = 0,
        font=list(size=16)))
```

# 3. Conclusion

-   Overall, February showed highest unemployment rate (4.42%), whereas November showed lowest unemployment rate (2.98%). Possible reason why winter season shows high unemployment rate and fall as opposite is due to the number of temporary jobs (such as construction or agriculture) decreases during the winter season. Additionally, as most Korean education ends at December, the entrants of college-graduate job seekers may have increased economically active population (as students are excluded in from the employment counts).

-   Female group showed higher unemployment rate during the winter, in contrast, male group showed higher unemployment showed higher unemployment rate during other seasons. However, this cannot be interpreted as women have more opportunities on acquiring job from spring to fall. Since in this analysis the quality of the job wasn't taken into account. Further analysis on quality of job (whether it is high-paying, temporary or ) is needed.

-   There was some discrepancies on employment rate for each presidential regimes. But, this figure only cannot be used as evaluating each presidencies. (unemployment rate can be affected by various factors such as international mechanics, climate change etc.)

-   Most important part in this analysis is how specific figures were calculated, how the definition of the 'unemployment' was constructed, and how the data were surveyed and acquired. For example, the database used in this analysis collected data from interviewing 20% of all population. 'Willingness to have a job' is a perception not based on firm or objective standard. Therefore, it is important to interpret unemployment data with discretion in order to avoid treating the data as a definite and absolute truth.
