[
  {
    "objectID": "data_analytics/FWA.html",
    "href": "data_analytics/FWA.html",
    "title": "Sangwon Ju's Personal Page",
    "section": "",
    "text": "%%capture\n!pip install nltk\n!pip install konlpy\n%%capture\n!pip install -U pandas-profiling\n%%capture\n!pip install seaborn\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotnine as pn\nfrom plotnine import *\n\n!pip install jsonlines\n\nRequirement already satisfied: jsonlines in /usr/local/lib/python3.7/dist-packages (3.0.0)\nRequirement already satisfied: attrs>=19.2.0 in /usr/local/lib/python3.7/dist-packages (from jsonlines) (21.2.0)\nRequirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from jsonlines) (3.10.0.2)\n\n\nimport requests\nimport json\nimport jsonlines\nimport re\nimport pprint\n%%capture\n!sudo apt-get install -y fonts-nanum\n!sudo fc-cache -fv\n!rm ~/.cache/matplotlib -rf\n\n# jupyter notebook 내 그래프를 바로 그리기 위한 설정\n%matplotlib inline\n\n# unicode minus를 사용하지 않기 위한 설정 (minus 깨짐현상 방지)\nplt.rcParams['axes.unicode_minus'] = False\nplt.rcParams['font.family'] = 'NanumGothic'\n%%capture\n!pip install dfply\nfrom dfply import *\nfrom google.colab import auth\nauth.authenticate_user()\n\nimport gspread\nfrom google.auth import default\ncreds, _ = default()\n\ngc = gspread.authorize(creds)\nfrom IPython.display import Image\n\nImage(filename='/1.png') \n\n\n\n\n\nImage(filename='/2.png') \n\n\n\n\n\nImage(filename='/3.png') \n\n\n\n\n\nImage(filename='/4.png') \n\n\n\n\n\nImage(filename='/5.png') \n\n\n\n\n\nImage(filename='/6.png') \n\n\n\n\n\nImage(filename='/7.png') \n\n\n\n\n\nImage(filename='/8.png') \n\n\n\n\n\nImage(filename='/9.png') \n\n\n\n\n\nImage(filename='/10.png')"
  },
  {
    "objectID": "data_analytics/FWA.html#analysis-1-text-mining-covid-19-이전과-이후-유연근무제에-대한-프레임은-어떻게-형성되어져-있는가",
    "href": "data_analytics/FWA.html#analysis-1-text-mining-covid-19-이전과-이후-유연근무제에-대한-프레임은-어떻게-형성되어져-있는가",
    "title": "Sangwon Ju's Personal Page",
    "section": "03/ Analysis 1 – Text Mining – COVID-19 이전과 이후 유연근무제에 대한 프레임은 어떻게 형성되어져 있는가?",
    "text": "03/ Analysis 1 – Text Mining – COVID-19 이전과 이후 유연근무제에 대한 프레임은 어떻게 형성되어져 있는가?\n유연근무제의 확산이 과연 사람들이 유연근무제에 대해서 가지는 인식을 긍정적으로 변화시켰는가? \nCOVID-19 이후 유연근무제에 대한 프레임 혹은 사회적 인식이 어떠한지 확인하기 위해서 빅카인즈(Big Kinds)를 활용하여 주요 신문들에 올라온 기사들에 대한 텍스트 분석을 진행하고 이를 통해 유의미한 인사이트를 도출 할 수 있는지를 확인해보고자 한다. 기사를 활용하여 전반적인 사회적인 인식을 확인하는데 한계가 존재하나 이후 통계청의 설문조사 데이터와 비교하여 어떤 차이가 존재하는지를 확인해보고자 한다.\n####- 텍스트 마이닝을 활용한 빅데이터 텍스트 분석\n\n기술통계 분석\n1. 빈도표 계산 및 말뭉치 등을 활용한 시각화 단어가 몇번 출현했는 지수(Count)를 기반으로 하여 텍스트를 표현 - BoW: 단어의 순서를 고려하지 않고 단어 출현 빈도에만 집중 - DTM (Document-Term Matrix): 문서단어행렬, 다수의 문서에서 등장하는 단어들의 빈도를 행렬로 표현하는 방식 - TF-IDF (Term Frequency - Inverse Document Frequency): 단어 빈도 - 역 문서 빈도  총 문서 수 대비 적게 등장한 단어가 중요한 단어  특정 문서 안에서 많이 등장한다고 해도 중요도가 올라가지는 않음  > TF: 특정 문서 D에서 특정 단어 T의 등장 횟수  DF: 특정 단어 T가 등장한 문서의 수  IDF: DF에 반비례 하는 수. ln(총문서수/(DF))  TF-IDF: TF * IDF 희귀하면서도 특정 텍스트에서 자주 사용된 단어 (TF)는 그 텍스트에서 중요함 2. 단어간 혹은 기사간 상관관계 - 동시 출현(Co-Occurrence) 단어 분석 문장 혹은 기사에 함께 사용된 단어는 어떤 단어일지 분석하는 것. 단어의 “맥락”을 파악하기 위하여 어떤 단어들이 함께 쓰였는지를 알아야 함. 의미를 가진 단어(명사, 동사, 형용사)등을 추출하여 어떤 단어들이 함께 빈번하게 쓰였는지 분석해보는게 필요함. 3. 연관 규칙 분석 (Association Rules) - 장바구니 분석 Apriori Algorithm(Agrawal et al., 1993): 어떤 단어가 다른 단어들과의 연관규칙을 가지는지를 추출 하는 방식\n\n\n토픽 모델링\n토픽 모델링은 문서와 단어로 구성된 행렬(DTM)을 기반으로 문서에 잠재되어 (Latent)있다고 가정된 토픽의 등장확률을 추정하는 일련의 통계적 텍스트 처리기법을 일컫는다. (Blei, 2014; Blei and Lafferty, 2007;Blei, Ng and Jordan, 2003) DTM을 활용하여 주제-확률 분포, 단어-확률 분포를 구한뒤 잠재 주제를 찾는 LDA나 Singular Value Decomposition을 통해 차원 축소를 하는 방법이 있다.\n\n\nLDA(Latent Dirichlet Allocation): 이 문서에서는 어떤 주제들이 오가고 있을까?  PLSA를 조건부 확률로 확장시킨 기법으로 잠재 주제의 확률적 분포에 대한 PLSA의 한계점을 보완한 모델이다. LDA모델은 무작위로 섞여있는 대량의 문서에서 단어들의 패턴을 추론하여 각 토픽의 특성을 도출하는데 용이하며, 텍스트 데이터의 의미구조를 파악하기에 적합한 방법 중 하나이다.  한 문서는 여러가지 토픽으로 이루어지고, 토픽은 여러 단어를 혼합하여 구성된다.   1개의 토픽은 여러 단어(서로 다른 확률을 가진)로 구성. 1개의 단어는 여러 토픽에서 서로 다른 확률을 가짐.  delta는 문장이 각 토픽에 등장할 확률, beta는 단어가 각 토픽에 등장할 확률\n\nfyi) 디리클레 분포(Dirichlet distribution):  베타분포를 다변량으로 확장한 것으로 다변량 베타분포라고 볼 수 있음. (K가 2일때 베타분포) LDA 토픽 모델링으로 예를 들면, 한 문서에 대한 토픽의 분포는 k개의 토픽의 확률 (\\(p_k\\))로 표현할 수 있음.  문서에서 각 단어에 대한 토픽을 샘플을 할때 이 토픽의 분포는 Multinomial 분포를 가정하게 됨. dirichlet 분포의 샘플링 된 k차원 벡터는 합이 1을 만족하기 때문에, multinomial 분포의 모수(\\(p_k\\))에 사용될 수 있음 -> 분포의 분포를 표현.\n\\[f(x_1, x_2, \\cdots, x_K) = \\frac{1}{\\mathrm{B}(\\boldsymbol\\alpha)} \\prod_{i=1}^K x_i^{\\alpha_i - 1} \\]\n\\[ \\mathrm{B}(\\boldsymbol\\alpha) = \\frac{\\prod_{i=1}^K \\Gamma(\\alpha_i)} {\\Gamma\\bigl(\\sum_{i=1}^K \\alpha_i\\bigr)}\\]\n제한조건: \\[ \\sum_{i=1}^{K} x_i = 1 \\]\nhttps://donghwa-kim.github.io/distributions.html (참고)\n\n자료수집 \n우리나라 COVID-19 최초 발생월인 2020년 2월부터 2021년 12월까지의 ‘유연근무’혹은 ’탄력근무’ 혹은 ’원격근무’를 포함하고 있는 정치부, 사회부 언론기사 제목 11,334건을 한국언론진흥재단(BIGKINDS)에서 수집. (경제부 기사들은 특정기업이 유연근무를 사용하기 시작하였음을 홍보하는 기사들이 많아 제외하였음)\n\na. 데이터 불러오기\nworksheet = gc.open('NewsResult_20200201-20211202 (1)').sheet1\nrows = worksheet.get_all_values()\nbigkinds=pd.DataFrame.from_records(rows)\nbigkinds.columns=bigkinds.iloc[0]\nbigkinds=bigkinds.drop(bigkinds.index[0])\n\nimport pandas_profiling\nbigkinds.profile_report()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nb. 기술 통계 분석\n\n시기 별 기사의 수\n\n\nfrom datetime import datetime \nnumber=bigkinds >> group_by(X.일자) >> summarize(count=n(X.일자))\nnumber.head(10)\n\n\n\n\n\n  \n    \n      \n      일자\n      count\n    \n  \n  \n    \n      0\n      20200201\n      1\n    \n    \n      1\n      20200202\n      1\n    \n    \n      2\n      20200203\n      5\n    \n    \n      3\n      20200204\n      8\n    \n    \n      4\n      20200205\n      7\n    \n    \n      5\n      20200206\n      48\n    \n    \n      6\n      20200207\n      15\n    \n    \n      7\n      20200208\n      2\n    \n    \n      8\n      20200209\n      3\n    \n    \n      9\n      20200210\n      3\n    \n  \n\n\n\n\n# list 내포\nkdate = [ datetime.strptime(d, '%Y%m%d') for d in number[\"일자\"] ]\n\nhead(kdate)\nnumber['date'] = kdate\nkdate1 = [datetime.strftime(d, '%Y%m') for d in number[\"date\"] ]\n\nnumber['date1'] = kdate1\nnumber.head(10)\nnumber2=number[number.일자.astype(\"int64\")<20211131] >> select([\"date1\",\"count\"])  >> rename(num=\"count\") >> group_by('date1') >> summarise(num=X.num.sum())\n\nfig=plt.figure(figsize = (10,7))\n\nplt.plot(number[\"date\"], number[\"count\"],color='blue', label=str(\"기사\"))\nplt.title(\"일별 유연근무제 관련 기사 수\",fontsize=20)\nplt.style.use(\"default\")\nplt.rc('font', family='NanumBarunGothic') \n\nplt.legend(fontsize=20)\nplt.xticks(rotation=75,fontsize=10)\nplt.yticks(fontsize=10)\n\nax = fig.add_subplot(1, 1, 1)\nax.set_xlabel(\"일별\", fontsize=\"15\")\nax.set_ylabel(\"기사 건수\", fontsize=\"15\")\nplt.show()\n\n/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:12: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.\n  if sys.path[0] == '':\n\n\n\n\n\n\nfig2=plt.figure(figsize = (10,7))\nax = fig2.add_subplot(1, 1, 1)\nax.set_xlabel(\"기사 건수\", fontsize=\"15\")\nax.set_ylabel(\"월별\", fontsize=\"15\")\n\nplt.plot(number2[\"date1\"], number2[\"num\"],color='red', label=str(\"기사\"))\nplt.title(\"월별 유연근무제 관련 기사 수\",fontsize=20)\nplt.style.use(\"default\")\nplt.rc('font', family='NanumBarunGothic') \n\nplt.legend(fontsize=20)\nplt.xticks(rotation=75,fontsize=10)\nplt.yticks(fontsize=10)\nplt.show()\n\n\n\n\n\n텍스트 전처리\n\n\n# 토큰화\narticle=bigkinds >> select(\"제목\") >> rename(title=\"제목\")\nprint(article[\"title\"].head(10))\narticle[\"title\"]=article[\"title\"].astype(str)\narticle.shape #11334개의 기사\n\n1                                     동화약품, 가족친화 기업 재인증\n2               집단감염 취약한 콜센터 찾은 안경덕 고용부 장관 \"방역수칙 준수\" 당부\n3                  환풍기 타고 확산? 전파력 5배 오미크론, 재택치료 빈틈 파고드나\n4                                 [팀장시각]서로 위로하는 코로나 분투기\n5                        새 판 짜는 완성차 노조 MZ세대 품을까 [비즈360]\n6                           “재택치료? 가족들 번갈아가며 확진되란 건가요?”\n7                    5000명대 확진에 자영업자들 “다시 거리두기 격상되나” 한숨\n8                   전면등교 후 인천 학생 자가격리자 5천명 폭등 돌봄공백 '비상'\n9     \"가구를 통해 건강한 세상 만들겠다\" 유해물질 소음 진동 걱정없는 책상 [환경표지 ...\n10               김인호 서울시의회 의장, 코로나 확산세 관련 서울시에 적극 대응 요청\nName: title, dtype: object\n\n\n(11334, 1)\n\n\ndef text_preprocess(text):\n    \"\"\"\n    텍스트 전처리\n    1. span tag 삭재\n    2. br tag 삭제\n    3. 영어, 한글, 숫자, 온점 제외 삭제\n    4. 온점을 구분으로 문장 구분\n    \"\"\"\n    text = re.sub(\"(<span class='quot[0-9]'>|</span>|<br/>|<br />|([^0-9가-힣A-Za-z. ]))\",\"\",text)\n    return [sen.strip() for sen in text.split('.') if sen.strip()]\ndf = pd.DataFrame(index=np.arange(1,article.shape[0]+1), columns=['title'])\n# 정규표현식으로 불필요한 부분 제거\nfor i in np.arange(1,article.shape[0]+1):\n  df[\"title\"][i]=text_preprocess(article[\"title\"][i])\n\ndf\n\n\n\n\n\n  \n    \n      \n      title\n    \n  \n  \n    \n      1\n      [동화약품 가족친화 기업 재인증]\n    \n    \n      2\n      [집단감염 취약한 콜센터 찾은 안경덕 고용부 장관 방역수칙 준수 당부]\n    \n    \n      3\n      [환풍기 타고 확산 전파력 5배 오미크론 재택치료 빈틈 파고드나]\n    \n    \n      4\n      [팀장시각서로 위로하는 코로나 분투기]\n    \n    \n      5\n      [새 판 짜는 완성차 노조 MZ세대 품을까 비즈360]\n    \n    \n      ...\n      ...\n    \n    \n      11330\n      [정부 신종코로나 사망자 치사율 축소 논란 글로벌 대유행 가능성도]\n    \n    \n      11331\n      [신종코로나 확산 사태로 가장 먼저 재택근무 시행하는 업계는]\n    \n    \n      11332\n      [지옥철서 신종코로나 옮길라 문지방 출퇴근 지시한 제약회사]\n    \n    \n      11333\n      [여주시 신종 코로나 선제적 대응위해 보건소 선별진료소 운영]\n    \n    \n      11334\n      [태안군 6번 확진자 접촉 관내 2인 음성 판정]\n    \n  \n\n11334 rows × 1 columns\n\n\n\nsentence_arr = []\nfor i in np.arange(1,article.shape[0]):\n    text=df.title[i][0] \n    sentence_arr.insert(0,text)\n\npprint.pprint(sentence_arr[1:10])\n\n['지옥철서 신종코로나 옮길라 문지방 출퇴근 지시한 제약회사',\n '신종코로나 확산 사태로 가장 먼저 재택근무 시행하는 업계는',\n '정부 신종코로나 사망자 치사율 축소 논란 글로벌 대유행 가능성도',\n '경찰인재개발원 필수 인력만 남고 근무 장소 변경 허용',\n '격리 시설 직원들 하소연 유치원서 자녀 보내지 말라네요',\n '오늘은 이런 경향2월4일 재탕 후퇴 미흡  20대 총선보다 부실한 주거공약',\n '신종 코로나 16번째 확진자 발생 태국 여행한 42세 한국인 여성',\n '신종 코로나 확진 1명 추가 태국 여행 뒤 증상 발현',\n '우한 폐렴 비상오락가락하는 정부 기준 자가격리도 잇단 혼선']\n\n\ncheck = ['탄력', '재택', '유연']\nmatching1 = [s for s in sentence_arr if \"유연\" in s] \nmatching2 = [s for s in sentence_arr if \"재택\" in s] \nmatching3 = [s for s in sentence_arr if \"탄력\" in s] \nmatching =matching1 + matching2 + matching3 \nmatching=list(set(matching))\n\nprint(len(matching))\ntype(matching)\n# 1226개의 기사 제목\n\n1226\n\n\nlist\n\n\n한국어 NLP에서 형태소 분석기를 사용한다는 것은 단어 토큰화가 아니라 정확히는 형태소(morpheme) 단위로 형태소 토큰화(morpheme tokenization)를 수행하게 됨을 뜻한다. 여기선 이 중에서 Okt와 꼬꼬마를 통해서 토큰화를 수행한다.  참고: https://wikidocs.net/21698\nfrom konlpy.tag import *\nkkma = Kkma()  \nokt = Okt()  \n\nOKT\n\nokt_list=[]\nfor title in matching:\n  tokenized3=okt.pos(title)\n  okt_list.insert(len(okt_list)+1,tokenized3)\n\nokt_list[:3]\n\n[[('코로나', 'Noun'),\n  ('19', 'Number'),\n  ('우려', 'Noun'),\n  ('에', 'Josa'),\n  ('유엔', 'Noun'),\n  ('본부', 'Noun'),\n  ('직원', 'Noun'),\n  ('3000', 'Number'),\n  ('명', 'Noun'),\n  ('3', 'Number'),\n  ('주간', 'Noun'),\n  ('재택근무', 'Noun'),\n  ('돌입', 'Noun')],\n [('재택근무', 'Noun'),\n  ('중', 'Noun'),\n  ('아이', 'Noun'),\n  ('도', 'Josa'),\n  ('보육', 'Noun'),\n  ('하', 'Suffix'),\n  ('라', 'Josa'),\n  ('고요', 'Noun'),\n  ('긴급', 'Noun'),\n  ('보육', 'Noun'),\n  ('청원', 'Noun'),\n  ('갑론', 'Noun'),\n  ('을', 'Josa'),\n  ('박', 'Noun')],\n [('KBS', 'Alpha'),\n  ('본관', 'Noun'),\n  ('3', 'Number'),\n  ('층', 'Noun'),\n  ('직원', 'Noun'),\n  ('1', 'Number'),\n  ('명', 'Noun'),\n  ('확진', 'Noun'),\n  ('필수', 'Noun'),\n  ('인력', 'Noun'),\n  ('제외', 'Noun'),\n  ('재택근무', 'Noun')]]\n\n\nokt_morphs_list=[]\nfor title in matching:\n  tokenized4=okt.morphs(title)\n  okt_morphs_list.insert(len(okt_morphs_list)+1,tokenized4)\n\nokt_morphs_list[:3]\n\n[['코로나',\n  '19',\n  '우려',\n  '에',\n  '유엔',\n  '본부',\n  '직원',\n  '3000',\n  '명',\n  '3',\n  '주간',\n  '재택근무',\n  '돌입'],\n ['재택근무',\n  '중',\n  '아이',\n  '도',\n  '보육',\n  '하',\n  '라',\n  '고요',\n  '긴급',\n  '보육',\n  '청원',\n  '갑론',\n  '을',\n  '박'],\n ['KBS', '본관', '3', '층', '직원', '1', '명', '확진', '필수', '인력', '제외', '재택근무']]\n\n\n\n꼬꼬마\n\nkkma_list=[]\nfor title in matching:\n  tokenized=kkma.pos(title)\n  kkma_list.insert(len(kkma_list)+1,tokenized)\n\nkkma_list[:5]\n\n[[('코로나', 'NNG'),\n  ('19', 'NR'),\n  ('우려', 'NNG'),\n  ('에', 'JKM'),\n  ('유엔', 'NNG'),\n  ('본부', 'NNG'),\n  ('직원', 'NNG'),\n  ('3000', 'NR'),\n  ('명', 'NNM'),\n  ('3', 'NR'),\n  ('주간', 'NNG'),\n  ('재택근무', 'NNG'),\n  ('돌입', 'NNG')],\n [('재택근무', 'NNG'),\n  ('중', 'NNB'),\n  ('아이', 'NNG'),\n  ('도', 'JX'),\n  ('보육', 'NNG'),\n  ('하', 'XSV'),\n  ('라', 'ECD'),\n  ('고요', 'NNG'),\n  ('긴급', 'NNG'),\n  ('보육', 'NNG'),\n  ('청원', 'NNG'),\n  ('갑론을박', 'NNG')],\n [('KBS', 'OL'),\n  ('본관', 'NNG'),\n  ('3', 'NR'),\n  ('층', 'NNG'),\n  ('직원', 'NNG'),\n  ('1', 'NR'),\n  ('명', 'NNM'),\n  ('확', 'MAG'),\n  ('질', 'VV'),\n  ('ㄴ', 'ETD'),\n  ('필수', 'NNG'),\n  ('인력', 'NNG'),\n  ('제외', 'NNG'),\n  ('재택근무', 'NNG')],\n [('서울', 'NNG'),\n  ('LS', 'OL'),\n  ('용', 'NNG'),\n  ('산', 'NNG'),\n  ('타워', 'NNG'),\n  ('직장인', 'NNG'),\n  ('확', 'MAG'),\n  ('진', 'NNG'),\n  ('판정', 'NNG'),\n  ('임직원', 'NNG'),\n  ('재택근무', 'NNG')],\n [('코로나', 'NNG'),\n  ('시대', 'NNG'),\n  ('재택근무', 'NNG'),\n  ('개인', 'NNG'),\n  ('시간', 'NNG'),\n  ('늘', 'VV'),\n  ('었', 'EPT'),\n  ('지만', 'ECE'),\n  ('일', 'NNG'),\n  ('생활', 'NNG'),\n  ('분리', 'NNG'),\n  ('어렵', 'VV'),\n  ('어', 'ECS')]]\n\n\nkkma_morphs_list=[]\nfor title in matching:\n  tokenized1=kkma.morphs(title)\n  kkma_morphs_list.insert(len(kkma_morphs_list)+1,tokenized1)\n\nkkma_morphs_list[:5]\n\n[['코로나',\n  '19',\n  '우려',\n  '에',\n  '유엔',\n  '본부',\n  '직원',\n  '3000',\n  '명',\n  '3',\n  '주간',\n  '재택근무',\n  '돌입'],\n ['재택근무', '중', '아이', '도', '보육', '하', '라', '고요', '긴급', '보육', '청원', '갑론을박'],\n ['KBS',\n  '본관',\n  '3',\n  '층',\n  '직원',\n  '1',\n  '명',\n  '확',\n  '질',\n  'ㄴ',\n  '필수',\n  '인력',\n  '제외',\n  '재택근무'],\n ['서울', 'LS', '용', '산', '타워', '직장인', '확', '진', '판정', '임직원', '재택근무'],\n ['코로나', '시대', '재택근무', '개인', '시간', '늘', '었', '지만', '일', '생활', '분리', '어렵', '어']]\n\n\n딱히 차이가 없으므로 OKT로만 분석 진행.|\n\n불용어 제거  불용어 리스트: https://www.ranks.nl/stopwords/korean\n\nworksheet2 = gc.open('stopwords').sheet1\nrows2 = worksheet2.get_all_values()\nstopwords=pd.DataFrame.from_records(rows2)\nstopwords=pd.Series.tolist(stopwords[0])\nokt_morphs_list_stop=[]\nfor words in okt_morphs_list:\n  tokenized=[]\n  for word in words:\n    if not word in stopwords:\n      tokenized.insert(len(tokenized)+1,word)\n  okt_morphs_list_stop.insert(len(okt_morphs_list_stop)+1,tokenized)\n\nokt_morphs_list_stop[:5]\n\n[['코로나', '19', '우려', '유엔', '본부', '직원', '3000', '명', '3', '주간', '재택근무', '돌입'],\n ['재택근무', '중', '도', '보육', '라', '고요', '긴급', '보육', '청원', '갑론', '박'],\n ['KBS', '본관', '3', '층', '직원', '1', '명', '확진', '필수', '인력', '제외', '재택근무'],\n ['서울', 'LS', '용산', '타워', '직장인', '확진', '판정', '임', '직원', '재택근무'],\n ['코로나', '시대', '재택근무', '개인', '늘었지만', '생활', '분리', '어려워']]\n\n\nkkma_morphs_list_stop=[]\nfor words in kkma_morphs_list:\n  tokenized=[]\n  for word in words:\n    if not word in stopwords:\n      tokenized.insert(len(tokenized)+1,word)\n  kkma_morphs_list_stop.insert(len(kkma_morphs_list_stop)+1,tokenized)\n\nkkma_morphs_list_stop[:5]\n\n[['코로나', '19', '우려', '유엔', '본부', '직원', '3000', '명', '3', '주간', '재택근무', '돌입'],\n ['재택근무', '중', '도', '보육', '라', '고요', '긴급', '보육', '청원', '갑론을박'],\n ['KBS',\n  '본관',\n  '3',\n  '층',\n  '직원',\n  '1',\n  '명',\n  '확',\n  '질',\n  'ㄴ',\n  '필수',\n  '인력',\n  '제외',\n  '재택근무'],\n ['서울', 'LS', '용', '산', '타워', '직장인', '확', '진', '판정', '임직원', '재택근무'],\n ['코로나', '시대', '재택근무', '개인', '늘', '었', '생활', '분리', '어렵']]\n\n\n\nWord Cloud\n\nfrom wordcloud import WordCloud, STOPWORDS\nimport nltk as nltk\ntotal_okt= []\nfor element in okt_morphs_list_stop:\n  total_okt+=element\ntotal_okt_over2=pd.Series(total_okt)[pd.Series(total_okt).str.len()>=2]\ncount_okt=pd.DataFrame(total_okt).value_counts().rename_axis('unique_values').reset_index(name='counts')\ncount_okt.columns=[\"word\",\"counts\"]\n\ncount_okt2=count_okt >> mask(X.word.str.len() >=2)\ncount_okt2=count_okt2.reset_index().iloc[:,1:]\ncount_okt2.head(60)\n\n\n\n\n\n  \n    \n      \n      word\n      counts\n    \n  \n  \n    \n      0\n      재택근무\n      968\n    \n    \n      1\n      코로나\n      365\n    \n    \n      2\n      19\n      191\n    \n    \n      3\n      재택\n      163\n    \n    \n      4\n      직원\n      148\n    \n    \n      5\n      확산\n      86\n    \n    \n      6\n      근무\n      85\n    \n    \n      7\n      기업\n      83\n    \n    \n      8\n      확진\n      75\n    \n    \n      9\n      출근\n      57\n    \n    \n      10\n      확대\n      53\n    \n    \n      11\n      시행\n      46\n    \n    \n      12\n      진자\n      41\n    \n    \n      13\n      유연근무제\n      41\n    \n    \n      14\n      유연\n      41\n    \n    \n      15\n      직장\n      40\n    \n    \n      16\n      콜센터\n      40\n    \n    \n      17\n      공무원\n      38\n    \n    \n      18\n      연장\n      38\n    \n    \n      19\n      실시\n      34\n    \n    \n      20\n      거리\n      33\n    \n    \n      21\n      감염\n      33\n    \n    \n      22\n      전환\n      33\n    \n    \n      23\n      정부\n      32\n    \n    \n      24\n      포스코\n      32\n    \n    \n      25\n      두기\n      31\n    \n    \n      26\n      공공기관\n      31\n    \n    \n      27\n      권고\n      30\n    \n    \n      28\n      도입\n      30\n    \n    \n      29\n      폐쇄\n      30\n    \n    \n      30\n      직장인\n      29\n    \n    \n      31\n      단계\n      28\n    \n    \n      32\n      회식\n      27\n    \n    \n      33\n      회사\n      27\n    \n    \n      34\n      삼성\n      27\n    \n    \n      35\n      출퇴근\n      27\n    \n    \n      36\n      돌입\n      26\n    \n    \n      37\n      해야\n      26\n    \n    \n      38\n      LG\n      26\n    \n    \n      39\n      사업\n      25\n    \n    \n      40\n      국회\n      25\n    \n    \n      41\n      하는\n      25\n    \n    \n      42\n      서울\n      24\n    \n    \n      43\n      대응\n      23\n    \n    \n      44\n      금지\n      23\n    \n    \n      45\n      비상\n      23\n    \n    \n      46\n      분산\n      22\n    \n    \n      47\n      그룹\n      21\n    \n    \n      48\n      방역\n      20\n    \n    \n      49\n      지원\n      20\n    \n    \n      50\n      에도\n      20\n    \n    \n      51\n      활용\n      20\n    \n    \n      52\n      전원\n      19\n    \n    \n      53\n      강화\n      19\n    \n    \n      54\n      업무\n      19\n    \n    \n      55\n      임산부\n      19\n    \n    \n      56\n      본사\n      19\n    \n    \n      57\n      KT\n      19\n    \n    \n      58\n      신청\n      18\n    \n    \n      59\n      비대\n      18\n    \n  \n\n\n\n\ntotal_okt_over2 # 9467개\ntotal_okt_over3=[]\nfor element in total_okt_over2:\n  if element not in [\"재택근무\",\"유연근무제\",\"19\",\"재택\",\"해야\",\"진자\",\"비대\"]:\n    total_okt_over3.insert(0,element)\n\noktplot=nltk.Text(total_okt_over3,name=\"Test\")\nfig=plt.figure(figsize = (10,5))\nax = fig.add_subplot(1, 1, 1)\nplt.title(\"키워드 빈도별 그래프\",fontsize=20)\noktplot.plot(50)\nplt.show(ax)\n\n\n\n\n\ndata=oktplot.vocab().most_common(50)\nplt.figure(figsize = (10,5))\npath=\"/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf\"\nwc=WordCloud(font_path=path,relative_scaling=0.2,background_color=\"white\",width=1200, height=800).generate_from_frequencies(dict(data))\n\nplt.imshow(wc, interpolation='bilinear')\nplt.axis(\"off\")\nplt.tight_layout(pad=0)\nplt.show()\n\n\n\n\n\n분석의 문제점  제목기반 분석이라 의미있는 내용을 뽑아낼 수 없었음. 맥락이 제거된 빈도기반 분석으로 어떤 맥락에서 사용되었는지 알수가 없었음. 의미있는 인사이트를 찾을수는 없었으나 공무원, 공공기관, 포스코, LG 등 공공영역이나 대기업 위주로 유연근무제가 시행된다는 사실을 확인할 수 있었음. 콜센터와 같은 밀집된 곳에서 시행하는 업무의 경우, 유연근무제를 통해 감염을 확산을 저지하려는 시도가 있었지 않았나 추측해 보았음.\nTF-IDF\n\nfrom collections import defaultdict\n\nvectorizer = TfidfVectorizer()\ntdm = vectorizer.fit_transform(sentence_arr)\n\nword_count = pd.DataFrame({\n    '단어': vectorizer.get_feature_names(),\n    '빈도': tdm.sum(axis=0).flat\n})\n\n/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n  warnings.warn(msg, category=FutureWarning)\n\n\n\nword_count.sort_values(\"빈도\",ascending=False).reset_index(drop=True).head(30)\n\n\n\n\n\n  \n    \n      \n      단어\n      빈도\n    \n  \n  \n    \n      0\n      코로나19\n      248.149943\n    \n    \n      1\n      코로나\n      225.877234\n    \n    \n      2\n      확진\n      189.862035\n    \n    \n      3\n      재택근무\n      166.912066\n    \n    \n      4\n      확진자\n      141.297835\n    \n    \n      5\n      거리두기\n      134.722720\n    \n    \n      6\n      직원\n      116.244045\n    \n    \n      7\n      폐쇄\n      82.505198\n    \n    \n      8\n      수도권\n      79.311515\n    \n    \n      9\n      사회적\n      77.250924\n    \n    \n      10\n      방역\n      64.115543\n    \n    \n      11\n      콜센터\n      63.758580\n    \n    \n      12\n      감염\n      60.624583\n    \n    \n      13\n      발생\n      59.834789\n    \n    \n      14\n      3단계\n      54.067897\n    \n    \n      15\n      정부\n      53.735398\n    \n    \n      16\n      확산\n      51.893703\n    \n    \n      17\n      서울\n      51.615911\n    \n    \n      18\n      비상\n      48.585535\n    \n    \n      19\n      1명\n      47.710836\n    \n    \n      20\n      국회\n      45.337426\n    \n    \n      21\n      백신\n      44.223253\n    \n    \n      22\n      신규\n      43.779173\n    \n    \n      23\n      추가\n      43.749493\n    \n    \n      24\n      집단감염\n      43.617216\n    \n    \n      25\n      검사\n      40.211961\n    \n    \n      26\n      마스크\n      38.943360\n    \n    \n      27\n      음성\n      37.046574\n    \n    \n      28\n      격상\n      35.974340\n    \n    \n      29\n      재택\n      35.499295\n    \n  \n\n\n\n\n\n\nc. 동시 출현(Co-Occurrence) \n참고: https://bab2min.tistory.com/598\n# 2글자 이상의 단어로 한정 / 의미없는 숫자 제거\ncooccur=[]\nfor elements in okt_morphs_list_stop:\n  new_elements=[]\n  for i in elements:\n    if i not in [\"재택근무\",\"유연\"]:\n      text = re.sub(r'[a-zA-Z0-9]',' ',i).strip()\n      if len(text)>=2:\n        new_elements.append(text)\n  cooccur.append(new_elements)\ncount = {}   #동시출현 빈도가 저장될 dict\nfor line in cooccur:\n    words = line \n    for i, a in enumerate(words):\n        for b in words[i+1:]:\n            if a == b: continue   #같은 단어의 경우는 세지 않음\n            if a > b: \n              a, b = b, a   #A, B와 B, A가 다르게 세어지는것을 막기 위해 항상 a < b로 순서 고정\n            count[a, b] = count.get((a, b), 0) + 1   #실제로 센다\ndef dict_to_df(df):\n        data_df = pd.DataFrame({'keys': df.keys(), 'features': df.values()})\n        data_df['word1'] = data_df['keys'].apply(lambda x: x[0])\n        data_df['word2'] = data_df['keys'].apply(lambda x: x[1])\n        return data_df[['word1','word2','features']]\n\ncooccur_df.sort_values(\"features\",ascending=False).head(10)\n\n\n\n\n\n  \n    \n      \n      word1\n      word2\n      features\n    \n  \n  \n    \n      884\n      거리\n      두기\n      89\n    \n    \n      98\n      코로나\n      확산\n      62\n    \n    \n      24\n      직원\n      확진\n      52\n    \n    \n      65\n      근무\n      재택\n      46\n    \n    \n      94\n      근무\n      유연\n      39\n    \n    \n      770\n      직원\n      코로나\n      36\n    \n    \n      174\n      코로나\n      확진\n      34\n    \n    \n      585\n      근무\n      분산\n      32\n    \n    \n      1238\n      건물\n      폐쇄\n      30\n    \n    \n      745\n      감염\n      직원\n      27\n    \n  \n\n\n\n\n\ncooccur_df=dict_to_df(count)\ncooccur_df.features.describe()\n\ncount    9559.000000\nmean        2.456219\nstd         2.635716\nmin         1.000000\n25%         1.000000\n50%         2.000000\n75%         3.000000\nmax        89.000000\nName: features, dtype: float64\n\n\n\n\nd. 네트워크 그래프\nimport networkx as nx\nimport operator\nimport matplotlib.colors as mcolors\nimport matplotlib.cm as cm\ncooccur_df_major=cooccur_df >> mask(X.features>=13)\n\n# generate sample graph\nplt.figure(figsize = (9,9),facecolor='k')\nplt.rcParams['font.sans-serif'] = ['NanumBarunGothic'] \ng = nx.from_pandas_edgelist(cooccur_df_major, 'word1', 'word2')\n\n\n# centrality\ndeg_centrality = nx.degree_centrality(g)\ncentrality = np.fromiter(deg_centrality.values(), float)\n# plot\npos = nx.kamada_kawai_layout(g,scale=3)\nnx.draw(g, pos, node_color=centrality,with_labels=True)\nplt.title(\"유연근무제 기사제목 분석\",size=15)\nplt.cool()\n\n\nsizes = centrality / np.max(centrality) * 200\nnormalize = mcolors.Normalize(vmin=centrality.min(), vmax=centrality.max())\ncolormap = cm.cool\n\nscalarmappaple = cm.ScalarMappable(norm=normalize, cmap=colormap)\nscalarmappaple.set_array(centrality)\n\nplt.colorbar(scalarmappaple,shrink=0.3)\n\nplt.show()\n\n\n\n\n\n\n\ndef dict_to_df_1(df):\n        data_df = pd.DataFrame({'keys': df.keys(), 'features': df.values()})\n        data_df['word1'] = data_df['keys']\n        return data_df[['word1','features']]\n\ndict_to_df_1(deg_centrality).sort_values(\"features\",ascending=False)[1:20]\n\n\n\n\n\n  \n    \n      \n      word1\n      features\n    \n  \n  \n    \n      5\n      코로나\n      0.101266\n    \n    \n      10\n      기업\n      0.088608\n    \n    \n      34\n      본사\n      0.075949\n    \n    \n      44\n      경력\n      0.075949\n    \n    \n      6\n      근무\n      0.075949\n    \n    \n      1\n      확진\n      0.050633\n    \n    \n      48\n      금지\n      0.050633\n    \n    \n      57\n      단계\n      0.037975\n    \n    \n      7\n      재택\n      0.037975\n    \n    \n      16\n      시행\n      0.037975\n    \n    \n      36\n      거리\n      0.037975\n    \n    \n      18\n      아기\n      0.037975\n    \n    \n      73\n      국회\n      0.037975\n    \n    \n      33\n      감염\n      0.037975\n    \n    \n      55\n      구로\n      0.025316\n    \n    \n      26\n      전환\n      0.025316\n    \n    \n      66\n      구글\n      0.025316\n    \n    \n      42\n      시차\n      0.025316\n    \n    \n      41\n      폐쇄\n      0.025316\n    \n  \n\n\n\n\n\n\n\n분석 실패 요인 및 느낀점\n\n(진행하더라도 유의미한 분석결과가 나오지 않을 것으로 예상되어) 토픽 모델링은 진행하지 않았음\n빈도기반 텍스트 마이닝 분석은 그러한 단어가 어떤 맥락에서 형성되었는지 알 수 없고 어떠한 의미를 가지는지를 이해하는데 있어서 어려움이 있다.\n신문 기사 제목들이 서로 응집성을 가지지 않고 산발적으로 나타나는 경우가 다수였기 때문에 적절한 분석이 진행되지 못한 것으로 보임.\n이후 보다 의미있는 분석을 위해서는 신문 기사 내용들을 활용을 하거나, 다른 텍스트 원천을 활용하는 것이 보다 효과적인 분석에 있어서 필요할 것으로 보임."
  },
  {
    "objectID": "data_analytics/FWA.html#analysis-2-descriptive-statistics-유연근무제도가-초기-정책의-목적을-어느정도-수행하고-있는가-공공영역-유연근무제에-대한-인식이-민간영역-근무제에-대한-인식과-큰-차이를-보이는가",
    "href": "data_analytics/FWA.html#analysis-2-descriptive-statistics-유연근무제도가-초기-정책의-목적을-어느정도-수행하고-있는가-공공영역-유연근무제에-대한-인식이-민간영역-근무제에-대한-인식과-큰-차이를-보이는가",
    "title": "Sangwon Ju's Personal Page",
    "section": "03/ Analysis 2 – Descriptive Statistics  유연근무제도가 초기 정책의 목적을 어느정도 수행하고 있는가?  공공영역 유연근무제에 대한 인식이 민간영역 근무제에 대한 인식과 큰 차이를 보이는가?",
    "text": "03/ Analysis 2 – Descriptive Statistics  유연근무제도가 초기 정책의 목적을 어느정도 수행하고 있는가?  공공영역 유연근무제에 대한 인식이 민간영역 근무제에 대한 인식과 큰 차이를 보이는가?\n\n1. 경제활동인구조사 (2015~2021) \n\n\n경제활동인구조사: 통계종류지정통계/조사통계 -계속여부: 계속통계 -작성목적: 국민의 경제활동(취업, 실업, 노동력 등) 특성을 조사함으로써 거시경제 -분석과 인력자원의 개발정책 수립에 필요한 기초 자료를 제공 -작성주기:월  -작성체계: 조사원(면접조사)→지방통계청(사무소)→통계청  -공표범위: 시도 -공표주기: 월 -특이점: 2017년 9월 조사부터 복수응답가능\n\n\nfrom mizani.breaks import date_breaks, minor_breaks\nfrom mizani.formatters import date_format\nimport matplotlib.font_manager as fm\npath = '/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf' \nfont = fm.FontProperties(fname=path, size=13)\n\na. 유연근무제 활용여부\nyes=pd.read_json(\"https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/101/DT_1DE7099S/2/1/20211204112805_1&prdSe=M&startPrdDe=201508&endPrdDe=202108\")\nno=pd.read_json(\"https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/101/DT_1DE7099S/2/1/20211204112931_1&prdSe=M&startPrdDe=201508&endPrdDe=202108\")\npj_usege=yes >> bind_rows(no, join='outer') >> select(X.PRD_DE,X.C1_NM,X.DT)\npj_usege=pj_usege.reset_index(drop=True)\n\nplt.figure()\npn.options.figure_size = (8,6)\n(ggplot(pj_usege, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\")) \n    + scale_y_continuous(limits=(0,22001),breaks= np.arange(0,22001,2000))\n    + geom_line() \n    + geom_point(pj_usege,aes(x='factor(PRD_DE)',y=\"DT\",group=\"C1_NM\",color=\"C1_NM\"))\n    + theme_classic() \n    + ylab(\"인원 (천 명)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"참여 여부\")\n    + scale_color_manual(values=(\"blue\",\"red\"))\n    + geom_text(aes(label=\"DT\"),nudge_x=0, nudge_y=1000,size=13,color=\"black\")\n    + ggtitle('임금 근로자 중 유연근무제 참여 인원 수\\n(자료 출처: 통계청 경제활동인구조사)'))\n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762697391465)>\n\n\n\n\nb. 성별 유연근무제 활용현황\nlink_list=[]\nlink=\"https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/101/DT_1DE7103S/2/1/20211204135633&prdSe=M&startPrdDe=\"\nfor i in range(201508,202109,100):\n  link_list.append(link+str(i))\npj_gender=pd.read_json(link_list[0])\nfor i in link_list[1:]:\n  pj_gender = pj_gender >> bind_rows(pd.read_json(i), join='outer')\npj_gender=pj_gender.reset_index(drop=True)\npj_gender2=pj_gender >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(~X.C1_NM==\"계\") >>  mask(~X.C2_NM==\"계\")\npj_gender2=pj_gender2.reset_index(drop=True)\npj_total=pj_gender >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT)  >> mask(~X.C1_NM==\"계\") >> mask(X.C2_NM==\"계\")\n\npj_total\n\n\n\n\n\n  \n    \n      \n      PRD_DE\n      C1_NM\n      C2_NM\n      DT\n    \n  \n  \n    \n      3\n      201508\n      남자\n      계\n      11006.6\n    \n    \n      6\n      201508\n      여자\n      계\n      8467.9\n    \n    \n      12\n      201608\n      남자\n      계\n      11085.6\n    \n    \n      15\n      201608\n      여자\n      계\n      8657.6\n    \n    \n      21\n      201708\n      남자\n      계\n      11188.2\n    \n    \n      24\n      201708\n      여자\n      계\n      8817.9\n    \n    \n      30\n      201808\n      남자\n      계\n      11171.3\n    \n    \n      33\n      201808\n      여자\n      계\n      8873.7\n    \n    \n      39\n      201908\n      남자\n      계\n      11395.7\n    \n    \n      42\n      201908\n      여자\n      계\n      9163.3\n    \n    \n      48\n      202008\n      남자\n      계\n      11361.3\n    \n    \n      51\n      202008\n      여자\n      계\n      9084.6\n    \n    \n      57\n      202108\n      남자\n      계\n      11516.6\n    \n    \n      60\n      202108\n      여자\n      계\n      9475.9\n    \n  \n\n\n\n\n\npj_total2=pj_total >> select(~X.C2_NM) >> spread(X.PRD_DE, X.DT) >> select(~X.C1_NM)\npj_total2.index=[\"남자\",\"여자\"]\npj_total2.transpose() >> mutate(ratio=np.round(X.남자/(X.남자+X.여자),2),배수 =np.round(X.남자/(X.여자),2) )\n# 총 경제활동 인원 대비 남성 비율 / 점차 줄어드는 중 \n\n\n\n\n\n  \n    \n      \n      남자\n      여자\n      ratio\n      배수\n    \n  \n  \n    \n      201508\n      11006.6\n      8467.9\n      0.57\n      1.30\n    \n    \n      201608\n      11085.6\n      8657.6\n      0.56\n      1.28\n    \n    \n      201708\n      11188.2\n      8817.9\n      0.56\n      1.27\n    \n    \n      201808\n      11171.3\n      8873.7\n      0.56\n      1.26\n    \n    \n      201908\n      11395.7\n      9163.3\n      0.55\n      1.24\n    \n    \n      202008\n      11361.3\n      9084.6\n      0.56\n      1.25\n    \n    \n      202108\n      11516.6\n      9475.9\n      0.55\n      1.22\n    \n  \n\n\n\n\n\nplt.figure()\npn.options.figure_size = (8,6)\n(ggplot(pj_total, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\")) \n    + scale_y_continuous(limits=(6000,15001),breaks= np.arange(0,22001,2000))\n    + geom_line() \n    + geom_point(pj_total,aes(x='factor(PRD_DE)',y=\"DT\",group=\"C1_NM\",color=\"C1_NM\"))\n    + theme_classic() \n    + ylab(\"인원 (천 명)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"성별\")\n    + scale_color_manual(values=(\"blue\",\"red\"))\n    + geom_text(aes(label=\"DT\"),nudge_x=0, nudge_y=500,size=13,color=\"black\")\n    + ggtitle('조사대상 성별 임금 근로자 수\\n(자료 출처: 통계청 경제활동인구조사)'))\n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762697419985)>\n\n\n\nplt.figure()\npn.options.figure_size = (14,6)\n(ggplot(pj_gender2, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C2_NM\",color=\"C2_NM\")) \n    + facet_wrap('C1_NM')\n    + scale_y_continuous(limits=(0,14001),breaks= np.arange(0,22001,2000))\n    + geom_line() \n    + geom_point(pj_gender2, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C2_NM\",color=\"C2_NM\"))\n    + theme_classic() \n    + ylab(\"인원 (천 명)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"참여 여부\")\n    + scale_color_manual(values=(\"blue\",\"red\"))\n    + geom_text(aes(label=\"DT\"),nudge_x=0, nudge_y=1000,size=13,color=\"black\")\n    + ggtitle('임금 근로자 중 성별 유연근무제 참여 인원 수\\n(자료 출처: 통계청 경제활동인구조사)'))\n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762697654101)>\n\n\n# 성별 경제활동 참여 인구 대비 유연근무제 참여자 비율 \nratio_total=(pj_gender >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"계\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,3)*100,ratio_notuse=np.round(X.notused/X.계,3)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_male=(pj_gender >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"남자\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,3)*100,ratio_notuse=np.round(X.notused/X.계,3)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_female=(pj_gender >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"여자\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,3)*100,ratio_notuse=np.round(X.notused/X.계,3)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio=pd.concat([ratio_total,ratio_male,ratio_female], keys=[\"전체\",\"남성\",\"여성\"]).reset_index() >> select(~X.level_1) >> rename(성별=\"level_0\") \n\nplt.figure()\npn.options.figure_size = (10,6)\n(ggplot(ratio, aes(x='factor(PRD_DE)', y=\"ratio_use\",group=\"성별\",color=\"성별\")) \n    + scale_y_continuous(limits=(0,20),breaks= np.arange(0,101,5))\n    + geom_line() \n    + geom_point(ratio, aes(x='factor(PRD_DE)', y=\"ratio_use\",group=\"성별\",color=\"성별\"))\n    + theme_classic() \n    + ylab(\"비율 (%)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"성별\")\n    + scale_color_manual(values=(\"#619CFF\",\"#F8766D\",\"gray\"))\n    + geom_text(aes(label=\"ratio_use\"),nudge_x=0, nudge_y=+0.5,size=10,color=\"black\",format_string='{}%')\n    + ggtitle('성별 총 임금근로자 대비 유연근무제 참여 인원 수\\n(자료 출처: 통계청 경제활동인구조사)'))    \n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762696383501)>\n\n\npj_age_2021=pj_age >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.PRD_DE==202108) >> mask(~X.C1_NM==\"계\") >>mask(~X.C2_NM==\"계\")\n# 2021년 기준 유연근무제 참여집단과 비참여집단 비교\npj_2021=pj_gender >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.PRD_DE==202108) \n\nplt.figure()\npn.options.figure_size = (10,6)\ndodge_text = position_dodge(width=0.9)\n(ggplot(pj_2021,aes(x='C1_NM',y=\"DT\",fill=\"C1_NM\",group=\"C1_NM\")) \n    + scale_y_continuous(limits=(0,22000),breaks= np.arange(0,22001,2000))\n    + geom_bar(stat='identity',position = position_dodge(width = 0.9)) \n    + theme_classic() \n    + ylab(\"인원 (천 명)\")\n    + xlab(\"유형 별\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(fill=\"성별\")\n    + facet_wrap('C2_NM')\n    + scale_fill_manual(values=(\"gray\",\"#619CFF\",\"#F8766D\"))\n    + geom_text(aes(label='DT'), position=dodge_text,size=10, va='bottom', format_string='{}')\n    + ggtitle('임금 근로자 중 성별 유연근무제 참여 인원 수 (2021)\\n(자료 출처: 통계청 경제활동인구조사)'))\n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762697263013)>\n\n\n\n\nc. 연령 별 유연근무제 사용 유형\nlink_list=[]\nlink=\"https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/101/DT_1DE7105S/2/1/20211204160618&prdSe=M&startPrdDe=\"\nfor i in range(201508,202109,100):\n  link_list.append(link+str(i))\npj_age=pd.read_json(link_list[0])\nfor i in link_list[1:]:\n  pj_age = pj_age >> bind_rows(pd.read_json(i), join='outer')\nratio_age_total=(pj_age >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"계\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,4)*100,ratio_notuse=np.round(X.notused/X.계,4)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_age_15=(pj_age >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"15 - 29세\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,4)*100,ratio_notuse=np.round(X.notused/X.계,4)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_age_30=(pj_age >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"30 - 39세\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,4)*100,ratio_notuse=np.round(X.notused/X.계,4)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_age_40=(pj_age >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"40 - 49세\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,4)*100,ratio_notuse=np.round(X.notused/X.계,4)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_age_50=(pj_age >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"50 - 59세\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,4)*100,ratio_notuse=np.round(X.notused/X.계,4)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_age_60=(pj_age >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"60세이상\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,4)*100,ratio_notuse=np.round(X.notused/X.계,4)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_age=pd.concat([ratio_age_total,ratio_age_15,ratio_age_30,ratio_age_40,ratio_age_50,ratio_age_60], keys=[\"전체\",\"15 - 29세\",\"30 - 39세\",\"40 - 49세\",\"50 - 59세\",\"60세이상\"]).reset_index() >> select(~X.level_1) >> rename(연령별=\"level_0\") \nratio_age[\"ratio_use\"]=np.round(ratio_age[\"ratio_use\"].astype(np.float64),2)\n\nplt.figure()\npn.options.figure_size = (10,6)\n(ggplot(ratio_age, aes(x='factor(PRD_DE)', y=\"ratio_use\",group=\"연령별\",color=\"연령별\")) \n    + scale_y_continuous(limits=(0,25),breaks= np.arange(0,101,5))\n    + geom_line() \n    + geom_point(ratio_age, aes(x='factor(PRD_DE)', y=\"ratio_use\",group=\"연령별\",color=\"연령별\"))\n    + theme_classic() \n    + ylab(\"비율 (%)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"연령 별\")\n    + geom_text(aes(label=\"ratio_use\"),nudge_x=0, nudge_y=+0.8,size=8,color=\"black\",format_string='{}%')\n    + ggtitle('연령별 총 임금근로자 대비 유연근무제 참여 인원 비율\\n(자료 출처: 통계청 경제활동인구조사)'))   \n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8731672718093)>\n\n\npj_age_2021=pj_age >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.PRD_DE==202108) >> mask(~X.C1_NM==\"계\") >>mask(~X.C2_NM==\"계\")\n\nplt.figure()\npn.options.figure_size = (12,6)\ndodge_text = position_dodge(width=0.9)\n(ggplot(pj_age_2021,aes(x='C1_NM',y=\"DT\",fill=\"C1_NM\",group=\"C1_NM\")) \n    + scale_y_continuous(limits=(0,6000),breaks= np.arange(0,22001,2000))\n    + geom_bar(stat='identity',position = position_dodge(width = 0.9)) \n    + theme_classic() \n    + ylab(\"인원 (천 명)\")\n    + xlab(\"유형 별\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(fill=\"연령별\")\n    + facet_wrap('C2_NM')\n    + geom_text(aes(label='DT'), position=dodge_text,size=10, va='bottom', format_string='{}') \n    + scale_fill_manual(values=(\"#4a4e4d\",\"#0e9aa7\" ,\"orange\",\"#f6cd61\",\"#f9caa7\"))\n    + ggtitle('임금 근로자 중 연령별 유연근무제 참여 인원 수 (2021)\\n(자료 출처: 통계청 경제활동인구조사)'))\n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762696667145)>\n\n\n\n\nd. 혼인상태별 유연근무제 활용현황\nlink_marriage_list=[]\nlink=\"https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/101/DT_1DE7104S/2/1/20211204164055&prdSe=M&startPrdDe=\"\nfor i in range(201508,202109,100):\n  link_marriage_list.append(link+str(i))\npj_marriage=pd.read_json(link_marriage_list[0])\nfor i in link_marriage_list[1:]:\n  pj_marriage = pj_marriage >> bind_rows(pd.read_json(i), join='outer')\nratio_marriage_total=(pj_marriage >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"계\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,4)*100,ratio_notuse=np.round(X.notused/X.계,4)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_marriage_no=(pj_marriage >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"미혼\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,4)*100,ratio_notuse=np.round(X.notused/X.계,4)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_marriage_yes=(pj_marriage >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"기혼\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,4)*100,ratio_notuse=np.round(X.notused/X.계,4)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_marriage=pd.concat([ratio_marriage_total,ratio_marriage_yes,ratio_marriage_no], keys=[\"전체\",\"기혼\",\"미혼\"]).reset_index() >> select(~X.level_1) >> rename(결혼=\"level_0\") \nratio_marriage[\"ratio_use\"]=np.round(ratio_marriage[\"ratio_use\"].astype(np.float64),2)\n\nplt.figure()\npn.options.figure_size = (10,6)\n(ggplot(ratio_marriage, aes(x='factor(PRD_DE)', y=\"ratio_use\",group=\"결혼\",color=\"결혼\")) \n    + scale_y_continuous(limits=(0,18),breaks= np.arange(0,101,3))\n    + geom_line() \n    + geom_point(ratio_marriage, aes(x='factor(PRD_DE)', y=\"ratio_use\",group=\"결혼\",color=\"결혼\"))\n    + theme_classic() \n    + ylab(\"비율 (%)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"혼인 여부\")\n    + scale_color_manual(values=(\"#619CFF\",\"#F8766D\",\"gray\"))\n    + annotate(\"text\", x=6.5, y=17.91, label=\"17.91%\", size=12,color=\"black\")\n    + annotate(\"text\", x=6.5, y=16.93, label=\"16.93%\", size=12,color=\"black\")\n    + annotate(\"text\", x=6.5, y=16, label=\"16.35%\", size=12,color=\"black\")\n    + ggtitle('혼인 유형 별 임금근로자 대비 유연근무제 참여 인원 수\\n(자료 출처: 통계청 경제활동인구조사)'))   \n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762696204773)>\n\n\npj_marriage_2021=pj_marriage >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.PRD_DE==202108) >> mask(~X.C1_NM==\"계\")\n\nplt.figure()\npn.options.figure_size = (10,6)\ndodge_text = position_dodge(width=0.9)\n(ggplot(pj_marriage_2021,aes(x='C1_NM',y=\"DT\",fill=\"C1_NM\",group=\"C1_NM\")) \n    + scale_y_continuous(limits=(0,15000),breaks= np.arange(0,22001,2000))\n    + geom_bar(stat='identity',position = position_dodge(width = 0.9)) \n    + theme_classic() \n    + ylab(\"인원 (천 명)\")\n    + xlab(\"유형 별\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(fill=\"연령별\")\n    + facet_wrap('C2_NM')\n    + geom_text(aes(label='DT'), position=dodge_text,size=10, va='bottom', format_string='{}')\n    + scale_fill_manual(values=(\"#619CFF\",\"#F8766D\"))\n    + ggtitle('임금 근로자 중 성별 유연근무제 참여 인원 수 (2021)\\n(자료 출처: 통계청 경제활동인구조사)'))\n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762696952981)>\n\n\n\n\ne. 유연근무제 활용형태(복수응답)\nlink_type_list=[]\nlink=\"https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/101/DT_1DE7100S/2/1/20211204170759&prdSe=M&startPrdDe=\"\nfor i in range(201508,202109,100):\n  link_type_list.append(link+str(i))\npj_type=pd.read_json(link_type_list[0])\nfor i in link_type_list[1:]:\n  pj_type = pj_type >> bind_rows(pd.read_json(i), join='outer')\nratio_type=pj_type >> mask(X.ITM_NM_ENG==\"ratio\") >> select(X.PRD_DE,X.C1_NM,X.DT)\nratio_type['C1_NM']=pd.Categorical(ratio_type['C1_NM'], ordered=True,categories=['근로시간단축근무제','시차출퇴근제','선택적 근무시간제','재택 및 원격근무제','탄력적 근무제','기타유형(재량근무 등)'])\n\nplt.figure()\npn.options.figure_size = (10,6)\n(ggplot(ratio_type,aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\")) \n    + geom_line() \n    + scale_y_continuous(limits=(-1,50),breaks= np.arange(0,101,10))\n    + geom_point(ratio_type, aes(x='factor(PRD_DE)', y=\"DT\",color=\"C1_NM\"))\n    + theme_classic() \n    + ylab(\"비율 (%)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"유연근무 유형\")\n    + scale_color_manual(values=(\"#4a4e4d\",\"#0e9aa7\" ,\"#f9caa7\",\"red\",\"#f6cd61\",\"green\"))\n    + geom_text(aes(label=\"DT\"),nudge_x=0, nudge_y=+1,size=8,color=\"black\",format_string='{}%')\n    + geom_vline(xintercept=5+(4/12),linetype=\"dashed\")\n    + ggtitle('유연근무제 참여 유형별 비율\\n(자료 출처: 통계청 경제활동인구조사)'))   \n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762696647101)>\n\n\n\n\n유연근무제의 사용 현황 정리 (통계청 경제활동인구조사)\n\nCOVID-19과 상관 없이 인식 개선으로 유연근무제 사용 인원 수는 지속적으로 증가하여 왔음.\n예상했던 것 과는 달리 남성들이 유연근무제를 사용하는 비율이 여성이 사용하는 비율보다 높았음. (2021년 8월 기준 남성이 18.2%, 여성이 15.2%)\n유연근무제를 가장 많이 사용하는 계층은 30대 였으며 그 다음으로 40대 20대 50대 순이다. 60세 이상 집단의 경우 거의 사용하지 않았는데 50대 이상 집단과 비교하였을 때 큰 차이가 나타나고 있는 것을 확인할 수 있다.\nCOVID-19 이전까지 기혼집단이 유연근무제를 많이 사용하였으나, 이후로는 미혼집단이 오히려 더 많이 사용하고 있는 것으로 보인다.(2020년 8월 기준 미혼집단이 17.91%, 기혼집단이 16.35%)\nCOVID-19까지는 재택 및 원격 근무제(공간적 유연) 선택 비율이 가장 낮고 시차출퇴근 선택자들의 비율이 가장 높았으나, 2021년 기준 재택 및 원격 근무제 선택 비중이 가장 높은 것으로 확인된다. \n유연근무제가 원래 일 가정 갈등 정책의 하위 정책으로 분류되어진 상황에서 여성들에 비해 남성들이 더 많이 사용하고 있다는 점, 미혼 집단의 사용율이 오히려 높다는 점에서 초기의 정책 목표를 달성하였다고 보기 어려운 부분이 있다.\n\n\n\n\n2. 공직생활실태조사 (2017~2020)\n\n지금부터의 분석은 2017~2020년 한국행정연구원이 (주)리서치앤리서치에 의뢰하여 실시한 5개년도의 ‘공직생활 실태조사’ 자료를 활용하여 분석한 것이다.  - 정부의 인적자원관리 현황과 공무원의 인식을 파악하기 위한 목적으로 조사시점기준 46개 중앙행정기관 및 17개 광역자치단체 소속 일반직 공무원을 대상으로 진행  층화 집락 추출 방식을 활용하여 부차모집단별 추출된 각 표본 과/팀에서 10명내외를 계통추출  - 표본의 크기는 각년도 말일 기준으로 모집단을 모비율 추정의 목표 오차(95% 신뢰수준 오차의 한계)인 2%∼3%를 만족하도록 구성  - 확률표본 수집 후 E-mail 웹 조사를 사용하였음.\n\n# 반복작업의 어려움으로 파이썬용 함수를 만들었음.\nlink=\"https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/417/DT_417002N_011/2/1/20211204203850&prdSe=Y&startPrdDe=\"\n\ndef kosis(link,a,b):\n  link_list=[]\n  for i in range(int(a),int(b)+1,1):\n    new_link=link+str(i)\n    link_list.append(new_link)\n  \n  df= pd.read_json(link_list[0])\n  if len(link_list)>=2:\n    for i in link_list[1:]:\n      df = df >> bind_rows(pd.read_json(i), join='outer')\n  result=df.reset_index(drop=True)    \n  return result  \npj_gov=kosis(link,2017,2020)\n\na. 성별 정부조직 유연근무제 사용 비율\npj_gov=pj_gov>>mask(X.C2_NM==\"있다\")\npj_gov_gender=pj_gov >> mask((X.C1_NM==\"남성\")|(X.C1_NM==\"여성\")|(X.C1_NM==\"전체\"))\n\nplt.figure()\npn.options.figure_size = (10,6)\n(ggplot(pj_gov_gender, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\")) \n    + scale_y_continuous(limits=(50,80),breaks= np.arange(0,101,5))\n    + geom_line() \n    + geom_point(pj_gov_gender, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\"))\n    + theme_classic() \n    + ylab(\"비율 (%)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"성별\")\n    + scale_color_manual(values=(\"#619CFF\",\"#F8766D\",\"gray\"))\n    + geom_text(aes(label=\"DT\"),nudge_x=.25, nudge_y=+.5,size=12,color=\"black\",format_string='{}%')\n    + ggtitle('성별 정부조직 공무원 유연근무제 참여 비율\\n(자료 출처: 한국행정연구원 공직생활실태조사)'))   \n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762697292525)>\n\n\n\n\nb. 연령 별 정부조직 유연근무제 사용 비율\npj_gov_age=pj_gov >> mask((X.C1_NM==\"20대\")|(X.C1_NM==\"30대\")|(X.C1_NM==\"40대\")|(X.C1_NM==\"50대 이상\")|(X.C1_NM==\"전체\"))\n\nplt.figure()\npn.options.figure_size = (10,6)\n(ggplot(pj_gov_age, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\")) \n    + scale_y_continuous(limits=(42,85),breaks= np.arange(0,101,5))\n    + geom_line() \n    + geom_point(pj_gov_age, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\"))\n    + theme_classic() \n    + ylab(\"비율 (%)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"연령대별\")\n    + geom_text(aes(label=\"DT\"),nudge_x=.25, nudge_y=+.5,size=12,color=\"black\",format_string='{}%')\n    + ggtitle('연령대별 정부조직 공무원 유연근무제 참여 비율\\n(자료 출처: 한국행정연구원 공직생활실태조사)'))   \n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762698177993)>\n\n\n\n\nc. 직급 별 정부조직 유연근무제 사용 비율\npj_gov_rank=pj_gov >> mask((X.C1_NM==\"1~4급\")|(X.C1_NM==\"5급\")|(X.C1_NM==\"6~7급\")|(X.C1_NM==\"8~9급\"))\n\nplt.figure()\npn.options.figure_size = (10,6)\n(ggplot(pj_gov_rank, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\")) \n    + scale_y_continuous(limits=(42,85),breaks= np.arange(0,101,5))\n    + geom_line() \n    + geom_point(pj_gov_rank, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\"))\n    + theme_classic() \n    + ylab(\"비율 (%)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"직급별\")\n    + geom_text(aes(label=\"DT\"),nudge_x=.25, nudge_y=+.5,size=12,color=\"black\",format_string='{}%')\n    + ggtitle('직급별 정부조직 공무원 유연근무제 참여 비율\\n(자료 출처: 한국행정연구원 공직생활실태조사)'))   \n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762697124449)>\n\n\n\n\nd. 소속조직 수준 별 정부조직 유연근무제 사용 비율\npj_gov_level=pj_gov >> mask((X.C1_NM==\"광역자치단체\")|(X.C1_NM==\"중앙행정기관\"))\n\nplt.figure()\npn.options.figure_size = (10,6)\n(ggplot(pj_gov_level, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\")) \n    + scale_y_continuous(limits=(42,85),breaks= np.arange(0,101,5))\n    + geom_line() \n    + geom_point(pj_gov_level, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\"))\n    + theme_classic() \n    + ylab(\"비율 (%)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"소속조직 수준별\")\n    + geom_text(aes(label=\"DT\"),nudge_x=.25, nudge_y=+.5,size=12,color=\"black\",format_string='{}%')\n    + ggtitle('소속조직 수준별 정부조직 공무원 유연근무제 참여 비율\\n(자료 출처: 한국행정연구원 공직생활실태조사)'))   \n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762696037269)>\n\n\n\n\ne. 재직기간별 유연근무제 사용 비율\npj_gov_length=pj_gov >> mask((X.C1_NM==\"5년 이하\")|(X.C1_NM==\"6~10년\")|(X.C1_NM==\"11~15년\")|(X.C1_NM==\"16~20년\")|(X.C1_NM==\"21~25년\")|(X.C1_NM==\"26년 이상\")  )\npj_gov_length[\"C1_NM\"]=pd.Categorical(pj_gov_length[\"C1_NM\"], ordered=True,categories=[\"5년 이하\",\"6~10년\",\"11~15년\",\"16~20년\",\"21~25년\",\"26년 이상\"])\n\nplt.figure()\npn.options.figure_size = (10,6)\n(ggplot(pj_gov_length, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\")) \n    + scale_y_continuous(limits=(42,80),breaks= np.arange(0,101,5))\n    + geom_line() \n    + geom_point(pj_gov_length, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\"))\n    + theme_classic() \n    + ylab(\"비율 (%)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"재직기간별\")\n    + geom_text(aes(label=\"DT\"),nudge_x=.25, nudge_y=+.5,size=12,color=\"black\",format_string='{}%')\n    + ggtitle('재직기간별 정부조직 공무원 유연근무제 참여 비율\\n(자료 출처: 한국행정연구원 공직생활실태조사)'))   \n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762696138673)>\n\n\n\n\n정부조직 유연근무제의 특징 정리 (한국행정연구원 공직생활실태조사)\n\nCOVID-19이전까지 유연근무제의 사용이 꾸준히 감소하던 추세였다가, 발생 이후 급증함.\n전체기간에서 민간 및 공공기관 인구를 모두 포함해서 조사한 경제활동인구조사와 비교 시 정부조직 공무원들은 유연근무제를 더욱 약 2배 정도 많이 사용하고 있는 것으로 확인되었음.\n\n정부조직에서는 경제활동인구조사와는 달리 남성들이 유연근무제를 사용하는 비율이 여성이 사용하는 비율보다 낮았음. (2020년 기준 남성이 72.4%, 여성이 75.5%) 20대의 경우 정부조직에서 COVID-19 이전까지 유연근무제를 가장 적게 사용하던 연령대였으나, COVID-19이후 가장 많이 사용하는 연령대로 변화하였음. (2019년 47.5% 2020년 79.6%) 낮은 연령대의 공무원들이 유연근무제를 사용하지 못했던 원인에 대해서 깊이 있게 고찰해볼 필요가 존재함.(눈치가 보여서, 사용 못하였음… or 2015년 자체부서평가의 시행으로 잠시 올라갔다가 다시 떨어지는 추세)\n이러한 경향성은 직급별, 재직기간별 분석 자료를 통해 분석하였을 때 더욱 뚜렷하게 드러나는데, COVID-19이전까지는 하더라도 유연근무제가 재직기간이 길수록 직급이 높을 수록 훨씬 더 많이 사용하는 경향성이 있는 것으로 보였는데, 2020년 데이터에서는 직급 별 유연근무제 사용 비율이 큰 차이가 없었고, 재직기간이 5년 미만인 공무원들이 79%로 다른 세대에 비해서 월등하게 높은 유연근무제 사용율을 보이고 있는 것을 확인할 수 있었음.\n공공영역 유연근무제의 확산을 위해서는 유연근무제를 사용할 수 있는 조직적, 관리자적 지원이 필수적(Choi, 2017)이라는 이전 연구결과를 통해 미루어 보았을 때 유연근무제의 확산을 위해서 이후 소위 조직 내 입지가 적은 구성원들이 자유롭게 사용할 수 있는 분위기를 형성하기 위한 정책적 노력이 필요할 것으로 보인다."
  },
  {
    "objectID": "data_analytics/FWA.html#analysis-3-decision-tree-random-forest-정부조직-유연근무제의-참여-요인은-무엇인가-그러한-참여-요인들을-활용해서-유연근무제를-더-사용가능한-집단들을-예측하는-것이-가능한가",
    "href": "data_analytics/FWA.html#analysis-3-decision-tree-random-forest-정부조직-유연근무제의-참여-요인은-무엇인가-그러한-참여-요인들을-활용해서-유연근무제를-더-사용가능한-집단들을-예측하는-것이-가능한가",
    "title": "Sangwon Ju's Personal Page",
    "section": "03/ Analysis 3 – Decision Tree / Random Forest  정부조직 유연근무제의 참여 요인은 무엇인가?  그러한 참여 요인들을 활용해서 유연근무제를 더 사용가능한 집단들을 예측하는 것이 가능한가?",
    "text": "03/ Analysis 3 – Decision Tree / Random Forest  정부조직 유연근무제의 참여 요인은 무엇인가?  그러한 참여 요인들을 활용해서 유연근무제를 더 사용가능한 집단들을 예측하는 것이 가능한가?\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\n\n공직생활실태조사 (2017년~2020년) 데이터 활용하여 병합함\n\ngc = gspread.authorize(GoogleCredentials.get_application_default())\n\nworksheet3 = gc.open('kipa_pre').sheet1\nrows1 = worksheet3.get_all_values()\nkipa_pre=pd.DataFrame.from_records(rows1)\nkipa_pre.columns=kipa_pre.iloc[0,:]\nkipa_pre=kipa_pre.iloc[1:,1:]\n\nkipa_pre\n\n\n\n\n\n  \n    \n      \n      year\n      fwa\n      smartwork\n      gender\n      age\n      work_year\n      rank\n      marriage\n      children\n      workamount\n      extrawork\n      orglevel\n      promotion_1\n      promotion_2\n      promotion_3\n      transform_1\n      transform_2\n      tranform_3\n      culture_per_1\n      culture_per_2\n      culture_tra_1\n      culture_tra_2\n      culture_sta_1\n      culture_sta_2\n      culture_par_1\n      culture_par_2\n      mng_support_1\n      mng_support_2\n      mng_support_3\n    \n  \n  \n    \n      1\n      2017\n      0\n      1\n      1\n      4\n      6\n      2\n      1\n      0\n      4\n      30\n      2\n      4\n      4\n      3\n      4\n      3\n      4\n      4\n      4\n      4\n      4\n      3\n      4\n      4\n      4\n      4\n      5\n      5\n    \n    \n      2\n      2017\n      1\n      0\n      1\n      2\n      3\n      3\n      1\n      1\n      4\n      25\n      2\n      2\n      2\n      2\n      4\n      3\n      3\n      5\n      5\n      5\n      5\n      5\n      5\n      5\n      5\n      3\n      2\n      2\n    \n    \n      3\n      2017\n      1\n      0\n      2\n      3\n      6\n      3\n      1\n      1\n      4\n      8\n      2\n      4\n      3\n      4\n      4\n      3\n      4\n      4\n      4\n      4\n      4\n      4\n      5\n      4\n      5\n      4\n      4\n      4\n    \n    \n      4\n      2017\n      1\n      1\n      1\n      2\n      2\n      2\n      1\n      1\n      5\n      20\n      1\n      2\n      3\n      3\n      2\n      2\n      2\n      2\n      2\n      2\n      2\n      2\n      2\n      2\n      3\n      2\n      2\n      2\n    \n    \n      5\n      2017\n      0\n      1\n      1\n      4\n      6\n      1\n      1\n      0\n      4\n      18\n      2\n      3\n      3\n      3\n      3\n      2\n      2\n      4\n      4\n      4\n      4\n      4\n      4\n      4\n      3\n      2\n      3\n      3\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      15563\n      2020\n      1\n      1\n      1\n      3\n      2\n      4\n      0\n      0\n      4\n      3\n      1\n      4\n      4\n      4\n      4\n      3\n      4\n      4\n      4\n      4\n      4\n      3\n      3\n      4\n      3\n      5\n      4\n      4\n    \n    \n      15564\n      2020\n      1\n      1\n      1\n      3\n      4\n      1\n      0\n      1\n      3\n      3\n      1\n      4\n      4\n      4\n      5\n      4\n      5\n      5\n      5\n      5\n      5\n      4\n      5\n      5\n      4\n      4\n      5\n      5\n    \n    \n      15565\n      2020\n      1\n      1\n      1\n      2\n      1\n      4\n      0\n      1\n      5\n      2\n      1\n      1\n      1\n      1\n      5\n      5\n      5\n      3\n      3\n      3\n      3\n      3\n      3\n      3\n      3\n      5\n      1\n      1\n    \n    \n      15566\n      2020\n      1\n      1\n      1\n      3\n      3\n      1\n      0\n      1\n      4\n      4\n      1\n      4\n      4\n      4\n      2\n      1\n      1\n      4\n      4\n      2\n      4\n      2\n      2\n      4\n      4\n      4\n      4\n      4\n    \n    \n      15567\n      2020\n      0\n      1\n      1\n      4\n      5\n      2\n      0\n      1\n      4\n      4\n      1\n      3\n      3\n      4\n      3\n      3\n      3\n      4\n      4\n      4\n      4\n      4\n      4\n      4\n      4\n      3\n      3\n      3\n    \n  \n\n15567 rows × 29 columns\n\n\n\n\n결측치 확인\n\n\nkipa_pre.isnull().sum() # 없음\n\n0\nyear             0\nfwa              0\nsmartwork        0\ngender           0\nage              0\nwork_year        0\nrank             0\nmarriage         0\nchildren         0\nworkamount       0\nextrawork        0\norglevel         0\npromotion_1      0\npromotion_2      0\npromotion_3      0\ntransform_1      0\ntransform_2      0\ntranform_3       0\nculture_per_1    0\nculture_per_2    0\nculture_tra_1    0\nculture_tra_2    0\nculture_sta_1    0\nculture_sta_2    0\nculture_par_1    0\nculture_par_2    0\nmng_support_1    0\nmng_support_2    0\nmng_support_3    0\ndtype: int64\n\n\ngender=pd.DataFrame(kipa_pre['gender'].value_counts())\ngender[\"성별\"]=[\"남자\",\"여자\"]\ngender.columns=[\"value\",\"gender\"]\n\nplt.figure()\npn.options.figure_size = (4,6)\n(ggplot(gender,aes(x='gender',y=\"value\",fill=\"gender\"))\n    + geom_bar(stat='identity',position = position_dodge(width = 0.9)) \n    + theme_classic() \n    + ylab(\"인원 (명)\")\n    + xlab(\"성별\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(fill=\"성별\")\n    + scale_fill_manual(values=(\"#619CFF\",\"#F8766D\"))\n    + geom_text(aes(label='value'),size=10, va='bottom', format_string='{:,}')\n    + ggtitle('조사대상 공무원 성별 인원\\n(자료 출처: 2017~2020 한국행정연구원 공직생활실태조사)'))\n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8753139113205)>\n\n\nkipa_pre['gender']=pd.Categorical(kipa_pre['gender'].str.replace(\"1\",\"0\").str.replace(\"2\",\"1\"))\n\n형 변환\n\nfor i in [\"year\",\"fwa\",\"smartwork\",\"age\",\"work_year\",\"rank\",\"marriage\",\"children\",\"orglevel\"]:\n  kipa_pre[i]=pd.Categorical(kipa_pre[i])\nkipa_pre[\"extrawork\"]=kipa_pre[\"extrawork\"].astype(np.float)\n\n# 초과근무 시간별 인원\nplt.figure(figsize = (10,5))\nplt.hist(kipa_pre[\"extrawork\"],bins=20)\nplt.title(\"초과 근무 시간별 공무원 (수)\")\nplt.show()\n\n\n\n\nfor i in kipa_pre.columns:\n  if i not in [\"year\",\"fwa\",\"smartwork\",\"gender\",\"age\",\"work_year\",\"rank\",\"marriage\",\"children\",\"orglevel\",\"extrawork\"]:\n    kipa_pre[i]=pd.Categorical(kipa_pre[i], ordered=True)\n\n기술통계 요약\n\nimport pandas_profiling\nkipa_pre.profile_report()\n\n변수들 간 연관성 확인: Correlation Matrix and Plot 범주형 변수간 연관성 확인을 진행하기 위해 Cramer’s V correlation 분석 진행. 참고: 크래머 V계수(Cramér’s V)는 카이 제곱 독립성 검정의 효과 크기 측정. 두 카테고리형 필드가 얼마나 강력하게 연관되는지를 측정. 0에서 1까지의 값을 가짐. 0.6 이상시 강력하게 연관 0.2~0.6까지 다소 연관되어 있음.  –> 전반적으로 유연근무제와 밀접하게 연관되어 있지는 않은 것으로 보인다.\n\n #연속형 변수의 제외\ndata=kipa_pre >> select(~X.extrawork,   ~X.work_year)\nfrom sklearn import preprocessing\n\nlabel = preprocessing.LabelEncoder()\ndata_encoded = pd.DataFrame() \n\nfor i in data.columns :\n  data_encoded[i]=label.fit_transform(data[i])\n# Building of the Cramer's V function\nfrom scipy.stats import chi2_contingency\n\ndef cramers_V(var1,var2) :\n  crosstab =np.array(pd.crosstab(var1,var2, rownames=None, colnames=None)) # Cross table building\n  stat = chi2_contingency(crosstab)[0] # Keeping of the test statistic of the Chi2 test\n  obs = np.sum(crosstab) # Number of observations\n  mini = min(crosstab.shape)-1 # Take the minimum value between the columns and the rows of the cross table\n  return (stat/(obs*mini))\nrows= []\nfor var1 in data_encoded:\n  col = []\n  for var2 in data_encoded :\n    cramers =cramers_V(data_encoded[var1], data_encoded[var2]) # Cramer's V test\n    col.append(round(cramers,3)) # Keeping of the rounded value of the Cramer's V  \n  rows.append(col)\ncramers_results = np.array(rows)\ndf = pd.DataFrame(cramers_results, columns = data_encoded.columns, index =data_encoded.columns)\n\ndf\n\nplt.figure(figsize = (13,13))\nwith sns.axes_style(\"white\"):\n  ax = sns.heatmap(df,vmin=0., vmax=1, square=True,cbar_kws={\"shrink\": .5},cmap=\"BuPu\",annot=True, annot_kws={\"size\": 6})\nplt.show()\n\n\n\n\n\n유연근무제 참여여부에 대한 예측모형 (Decision Tree, Random Forest)\n\n\n!pip install graphviz\n\nRequirement already satisfied: graphviz in /usr/local/lib/python3.7/dist-packages (0.10.1)\n\n\nfrom sklearn.model_selection import train_test_split\nimport sklearn.metrics as mt\n\n# sklearn 모듈의 tree import\nfrom sklearn import tree\ndata2=kipa_pre[kipa_pre[\"year\"]<=2019]\ndata2=data2 >> select(~X.year)\n\ndata2.iloc[:,2:]\n\n\n\n\n\n  \n    \n      \n      gender\n      age\n      work_year\n      rank\n      marriage\n      children\n      workamount\n      extrawork\n      orglevel\n      promotion_1\n      promotion_2\n      promotion_3\n      transform_1\n      transform_2\n      tranform_3\n      culture_per_1\n      culture_per_2\n      culture_tra_1\n      culture_tra_2\n      culture_sta_1\n      culture_sta_2\n      culture_par_1\n      culture_par_2\n      mng_support_1\n      mng_support_2\n      mng_support_3\n    \n  \n  \n    \n      1\n      0\n      4\n      6\n      2\n      1\n      0\n      4\n      30.0\n      2\n      4\n      4\n      3\n      4\n      3\n      4\n      4\n      4\n      4\n      4\n      3\n      4\n      4\n      4\n      4\n      5\n      5\n    \n    \n      2\n      0\n      2\n      3\n      3\n      1\n      1\n      4\n      25.0\n      2\n      2\n      2\n      2\n      4\n      3\n      3\n      5\n      5\n      5\n      5\n      5\n      5\n      5\n      5\n      3\n      2\n      2\n    \n    \n      3\n      1\n      3\n      6\n      3\n      1\n      1\n      4\n      8.0\n      2\n      4\n      3\n      4\n      4\n      3\n      4\n      4\n      4\n      4\n      4\n      4\n      5\n      4\n      5\n      4\n      4\n      4\n    \n    \n      4\n      0\n      2\n      2\n      2\n      1\n      1\n      5\n      20.0\n      1\n      2\n      3\n      3\n      2\n      2\n      2\n      2\n      2\n      2\n      2\n      2\n      2\n      2\n      3\n      2\n      2\n      2\n    \n    \n      5\n      0\n      4\n      6\n      1\n      1\n      0\n      4\n      18.0\n      2\n      3\n      3\n      3\n      3\n      2\n      2\n      4\n      4\n      4\n      4\n      4\n      4\n      4\n      3\n      2\n      3\n      3\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      11224\n      0\n      4\n      6\n      1\n      1\n      0\n      5\n      2.0\n      2\n      4\n      4\n      4\n      3\n      3\n      3\n      4\n      3\n      4\n      3\n      3\n      3\n      3\n      3\n      3\n      3\n      3\n    \n    \n      11225\n      0\n      4\n      6\n      1\n      1\n      1\n      3\n      3.0\n      2\n      4\n      4\n      4\n      4\n      4\n      4\n      4\n      4\n      4\n      4\n      4\n      4\n      4\n      3\n      3\n      3\n      3\n    \n    \n      11226\n      0\n      4\n      6\n      1\n      1\n      0\n      3\n      3.0\n      2\n      4\n      4\n      4\n      4\n      4\n      4\n      4\n      4\n      4\n      4\n      4\n      4\n      4\n      4\n      4\n      5\n      5\n    \n    \n      11227\n      0\n      4\n      6\n      1\n      1\n      0\n      3\n      2.0\n      2\n      3\n      3\n      3\n      3\n      3\n      3\n      4\n      4\n      4\n      3\n      4\n      4\n      4\n      4\n      3\n      3\n      4\n    \n    \n      11228\n      0\n      4\n      6\n      1\n      1\n      0\n      3\n      2.0\n      2\n      4\n      4\n      4\n      3\n      3\n      3\n      3\n      2\n      2\n      2\n      3\n      3\n      3\n      3\n      3\n      3\n      3\n    \n  \n\n11228 rows × 26 columns\n\n\n\nDT_label=data2 >> select(X.fwa)\nDT_data=data2.iloc[:,2:]\ntrain_data,test_data,train_label,test_label=train_test_split(DT_data,DT_label,test_size=0.2, random_state=41)\n# DT 객체 생성 및 훈련\ndt_clf = tree.DecisionTreeClassifier()\ndt_clf.fit(train_data,train_label)\n\n# 예측값 저장\npred_label = dt_clf.predict(test_data)\n\n# Train 데이터 대상 학습결과 평가 - 확인용\nprint('Train_Accuracy: ', np.round(dt_clf.score(train_data, train_label)),'\\n')\n\nTrain_Accuracy:  1.0 \n\n\n\n\n# Test 데이터 데상 학습결과 평가 \naccuracy = mt.accuracy_score(test_label, pred_label)\naccuracy\n#전반적으로 정확도가 높지는 않은 것으로 보인다. \n\n0.5894924309884239\n\n\n전반적으로 정확도가 높지는 않은 것으로 보인다.  원인: 파이썬의 사이킷런은 범주형 변수를 예측변수로 사용할 수 있으나 순서형 범주 변수들을 인식하지 못해 이를 각각 따로 따로 반영하는 문제가 있다. 원핫코딩을 통해서 해결할 수 있다는 의견도 있으나 완벽한 해결책은 아니다.\n따라서, 지금부터의 분석은 범주형, 순서형, 연속형 예측변수를 활용할 수 있는 R의 패키지를 활용해서 분석을 진행하였다.\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\n\n\n\nimage.png"
  },
  {
    "objectID": "data_analytics/index.html",
    "href": "data_analytics/index.html",
    "title": "Exploratory Data Analysis (2021-1) [in Korean]",
    "section": "",
    "text": "“Exploratory Data Analysis (2021-1) [in Korean]”"
  },
  {
    "objectID": "data_analytics/unemployment_index.html",
    "href": "data_analytics/unemployment_index.html",
    "title": "Analysis 2: Unemployment index",
    "section": "",
    "text": "Data retrieved from KOSIS (Korean Statistical Information Service).\nAgenda1: examining seasonal and monthly disparities in unemployment index to estimate the variance using longitudinal data.\nAgenda2: visualizing gender inequalities in unemployment status to identify the degree of change in unemployment index affected by seasonal and monthly disparities and to identify the degree of change in unemployment index affected by last three regimes.\nAgenda3: predicting to figure out whethter the trends in seasonal and monthly disparities maintain by utilizing ARIMA algorithm.\n\n\n\n\npacman::p_load(\"jsonlite\",\n               \"tidyverse\",\n               \"forecast\",\n               \"ggfortify\",\n               \"forecast\",\n               \"httr\",\n               \"sleekts\",\n               \"lubridate\",\n               \"stats\",\n               \"smooth\",\n               \"ghibli\",\n               \"plyr\",\n               \"scales\",\n               \"formattable\",\n               \"knitr\",\n               \"showtext\",\n               \"kableExtra\",\n               \"IRdisplay\",\n               \"glue\",\n               \"echarts4r\",\n               \"plotly\",\n               \"magrittr\")\n\n\n\n\n\nfont_add_google(name=\"Noto Serif\")\nshowtext_auto()"
  },
  {
    "objectID": "data_analytics/unemployment_index.html#importing-data",
    "href": "data_analytics/unemployment_index.html#importing-data",
    "title": "Analysis 2: Unemployment index",
    "section": "- Importing data",
    "text": "- Importing data\n\n# auto inporting function\ntotal=fromJSON(\"https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/101/DT_1DA7001S/2/1/20211110114643_1&prdSe=M&newEstPrdCnt=142\")\nmale=fromJSON(\"https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/101/DT_1DA7001S/2/1/20211110114643_2&prdSe=M&newEstPrdCnt=142\")\nfemale=fromJSON(\"https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/101/DT_1DA7001S/2/1/20211110114643_3&prdSe=M&newEstPrdCnt=142\")\n\ntotal %>% \n    full_join(male) %>% \n    full_join(female) -> unemployment_data\n\n\nunemployment_data %T>% \n    glimpse() %>% \n    head(5) %>% \n    kbl() %>% \n    kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"))\n\nRows: 426\nColumns: 16\n$ TBL_NM        <chr> \"성별 경제활동인구 총괄\", \"성별 경제활동인구 총괄\", \"성…\n$ PRD_DE        <chr> \"201009\", \"201010\", \"201011\", \"201012\", \"201101\", \"20110…\n$ TBL_ID        <chr> \"DT_1DA7001S\", \"DT_1DA7001S\", \"DT_1DA7001S\", \"DT_1DA7001…\n$ ITM_NM        <chr> \"실업률\", \"실업률\", \"실업률\", \"실업률\", \"실업률\", \"실업…\n$ ITM_NM_ENG    <chr> \"Unemployment rate\", \"Unemployment rate\", \"Unemployment …\n$ ITM_ID        <chr> \"T80\", \"T80\", \"T80\", \"T80\", \"T80\", \"T80\", \"T80\", \"T80\", …\n$ UNIT_NM       <chr> \"%\", \"%\", \"%\", \"%\", \"%\", \"%\", \"%\", \"%\", \"%\", \"%\", \"%\", \"…\n$ ORG_ID        <chr> \"101\", \"101\", \"101\", \"101\", \"101\", \"101\", \"101\", \"101\", …\n$ UNIT_NM_ENG   <chr> \"%\", \"%\", \"%\", \"%\", \"%\", \"%\", \"%\", \"%\", \"%\", \"%\", \"%\", \"…\n$ C1_OBJ_NM     <chr> \"성별\", \"성별\", \"성별\", \"성별\", \"성별\", \"성별\", \"성별\", …\n$ C1_OBJ_NM_ENG <chr> \"By gender\", \"By gender\", \"By gender\", \"By gender\", \"By …\n$ DT            <chr> \"3.4\", \"3.3\", \"3\", \"3.5\", \"3.8\", \"4.5\", \"4.3\", \"3.7\", \"3…\n$ PRD_SE        <chr> \"M\", \"M\", \"M\", \"M\", \"M\", \"M\", \"M\", \"M\", \"M\", \"M\", \"M\", \"…\n$ C1            <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"…\n$ C1_NM         <chr> \"계\", \"계\", \"계\", \"계\", \"계\", \"계\", \"계\", \"계\", \"계\", \"…\n$ C1_NM_ENG     <chr> \"Total\", \"Total\", \"Total\", \"Total\", \"Total\", \"Total\", \"T…\n\n\n\n\n \n  \n    TBL_NM \n    PRD_DE \n    TBL_ID \n    ITM_NM \n    ITM_NM_ENG \n    ITM_ID \n    UNIT_NM \n    ORG_ID \n    UNIT_NM_ENG \n    C1_OBJ_NM \n    C1_OBJ_NM_ENG \n    DT \n    PRD_SE \n    C1 \n    C1_NM \n    C1_NM_ENG \n  \n \n\n  \n    성별 경제활동인구 총괄 \n    201009 \n    DT_1DA7001S \n    실업률 \n    Unemployment rate \n    T80 \n    % \n    101 \n    % \n    성별 \n    By gender \n    3.4 \n    M \n    0 \n    계 \n    Total \n  \n  \n    성별 경제활동인구 총괄 \n    201010 \n    DT_1DA7001S \n    실업률 \n    Unemployment rate \n    T80 \n    % \n    101 \n    % \n    성별 \n    By gender \n    3.3 \n    M \n    0 \n    계 \n    Total \n  \n  \n    성별 경제활동인구 총괄 \n    201011 \n    DT_1DA7001S \n    실업률 \n    Unemployment rate \n    T80 \n    % \n    101 \n    % \n    성별 \n    By gender \n    3 \n    M \n    0 \n    계 \n    Total \n  \n  \n    성별 경제활동인구 총괄 \n    201012 \n    DT_1DA7001S \n    실업률 \n    Unemployment rate \n    T80 \n    % \n    101 \n    % \n    성별 \n    By gender \n    3.5 \n    M \n    0 \n    계 \n    Total \n  \n  \n    성별 경제활동인구 총괄 \n    201101 \n    DT_1DA7001S \n    실업률 \n    Unemployment rate \n    T80 \n    % \n    101 \n    % \n    성별 \n    By gender \n    3.8 \n    M \n    0 \n    계 \n    Total"
  },
  {
    "objectID": "data_analytics/unemployment_index.html#clensing-data",
    "href": "data_analytics/unemployment_index.html#clensing-data",
    "title": "Analysis 2: Unemployment index",
    "section": "- Clensing data",
    "text": "- Clensing data\n\nunemployment_data$C1_NM_ENG %>% table()\n\n.\nFemale   Male  Total \n   142    142    142 \n\nunemployment_data %>% \n    transmute(Month=PRD_DE,Gender=ordered(C1_NM_ENG,levels=c(\"Total\",\"Male\",\"Female\")),                                          Unemployment_Rate=DT) %>% \n    tidyr::spread(key=\"Month\",value=\"Unemployment_Rate\") %>% \n    kbl() %>% \n    kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"))\n\n\n\n \n  \n    Gender \n    201009 \n    201010 \n    201011 \n    201012 \n    201101 \n    201102 \n    201103 \n    201104 \n    201105 \n    201106 \n    201107 \n    201108 \n    201109 \n    201110 \n    201111 \n    201112 \n    201201 \n    201202 \n    201203 \n    201204 \n    201205 \n    201206 \n    201207 \n    201208 \n    201209 \n    201210 \n    201211 \n    201212 \n    201301 \n    201302 \n    201303 \n    201304 \n    201305 \n    201306 \n    201307 \n    201308 \n    201309 \n    201310 \n    201311 \n    201312 \n    201401 \n    201402 \n    201403 \n    201404 \n    201405 \n    201406 \n    201407 \n    201408 \n    201409 \n    201410 \n    201411 \n    201412 \n    201501 \n    201502 \n    201503 \n    201504 \n    201505 \n    201506 \n    201507 \n    201508 \n    201509 \n    201510 \n    201511 \n    201512 \n    201601 \n    201602 \n    201603 \n    201604 \n    201605 \n    201606 \n    201607 \n    201608 \n    201609 \n    201610 \n    201611 \n    201612 \n    201701 \n    201702 \n    201703 \n    201704 \n    201705 \n    201706 \n    201707 \n    201708 \n    201709 \n    201710 \n    201711 \n    201712 \n    201801 \n    201802 \n    201803 \n    201804 \n    201805 \n    201806 \n    201807 \n    201808 \n    201809 \n    201810 \n    201811 \n    201812 \n    201901 \n    201902 \n    201903 \n    201904 \n    201905 \n    201906 \n    201907 \n    201908 \n    201909 \n    201910 \n    201911 \n    201912 \n    202001 \n    202002 \n    202003 \n    202004 \n    202005 \n    202006 \n    202007 \n    202008 \n    202009 \n    202010 \n    202011 \n    202012 \n    202101 \n    202102 \n    202103 \n    202104 \n    202105 \n    202106 \n    202107 \n    202108 \n    202109 \n    202110 \n    202111 \n    202112 \n    202201 \n    202202 \n    202203 \n    202204 \n    202205 \n    202206 \n  \n \n\n  \n    Total \n    3.4 \n    3.3 \n    3 \n    3.5 \n    3.8 \n    4.5 \n    4.3 \n    3.7 \n    3.2 \n    3.3 \n    3.3 \n    3 \n    3 \n    2.9 \n    2.9 \n    3 \n    3.5 \n    4.2 \n    3.7 \n    3.5 \n    3.1 \n    3.2 \n    3.1 \n    3 \n    2.9 \n    2.8 \n    2.8 \n    2.9 \n    3.4 \n    3.9 \n    3.5 \n    3.2 \n    3 \n    3.1 \n    3.1 \n    3 \n    2.7 \n    2.7 \n    2.6 \n    3 \n    3.4 \n    4.5 \n    3.9 \n    3.8 \n    3.5 \n    3.5 \n    3.4 \n    3.3 \n    3.1 \n    3.2 \n    3 \n    3.3 \n    3.7 \n    4.5 \n    4 \n    3.9 \n    3.7 \n    3.8 \n    3.6 \n    3.4 \n    3.2 \n    3.1 \n    3 \n    3.2 \n    3.7 \n    4.9 \n    4.2 \n    3.9 \n    3.6 \n    3.6 \n    3.5 \n    3.6 \n    3.5 \n    3.3 \n    3.1 \n    3.2 \n    3.7 \n    4.9 \n    4.1 \n    4.2 \n    3.6 \n    3.8 \n    3.4 \n    3.6 \n    3.3 \n    3.2 \n    3.1 \n    3.3 \n    3.7 \n    4.6 \n    4.5 \n    4.1 \n    4 \n    3.7 \n    3.7 \n    4 \n    3.6 \n    3.5 \n    3.2 \n    3.4 \n    4.5 \n    4.7 \n    4.3 \n    4.4 \n    4 \n    4 \n    3.9 \n    3 \n    3.1 \n    3 \n    3.1 \n    3.4 \n    4.1 \n    4.1 \n    4.2 \n    4.2 \n    4.5 \n    4.3 \n    4 \n    3.1 \n    3.6 \n    3.7 \n    3.4 \n    4.1 \n    5.7 \n    4.9 \n    4.3 \n    4 \n    4 \n    3.8 \n    3.2 \n    2.6 \n    2.7 \n    2.8 \n    2.6 \n    3.5 \n    4.1 \n    3.4 \n    3 \n    3 \n    3 \n    3 \n  \n  \n    Male \n    3.6 \n    3.5 \n    3.3 \n    3.7 \n    3.9 \n    4.5 \n    4.4 \n    4 \n    3.4 \n    3.4 \n    3.6 \n    3.3 \n    3.3 \n    3.2 \n    3.1 \n    3.2 \n    3.6 \n    4.1 \n    3.9 \n    3.6 \n    3.2 \n    3.4 \n    3.3 \n    3.2 \n    3.1 \n    2.9 \n    3 \n    3.3 \n    3.6 \n    4.1 \n    3.6 \n    3.3 \n    3.1 \n    3.2 \n    3.4 \n    3.3 \n    2.9 \n    2.9 \n    2.8 \n    3.1 \n    3.5 \n    4.2 \n    3.9 \n    3.8 \n    3.4 \n    3.5 \n    3.3 \n    3.5 \n    3.3 \n    3.3 \n    3.1 \n    3.4 \n    3.8 \n    4.3 \n    4 \n    3.8 \n    3.7 \n    3.9 \n    3.8 \n    3.5 \n    3.4 \n    3.1 \n    3.2 \n    3.3 \n    3.7 \n    4.7 \n    4.4 \n    4 \n    3.7 \n    3.8 \n    3.7 \n    3.8 \n    3.7 \n    3.3 \n    3.1 \n    3.1 \n    3.7 \n    4.7 \n    4.1 \n    4.3 \n    3.7 \n    3.9 \n    3.6 \n    3.8 \n    3.6 \n    3.4 \n    3.3 \n    3.5 \n    3.7 \n    4.3 \n    4.6 \n    4.2 \n    4.2 \n    3.8 \n    3.8 \n    4.2 \n    3.8 \n    3.6 \n    3.4 \n    3.7 \n    4.4 \n    4.5 \n    4.4 \n    4.6 \n    4.3 \n    4.2 \n    3.9 \n    3.2 \n    3.4 \n    3.2 \n    3.3 \n    3.3 \n    3.9 \n    4 \n    4.2 \n    4.2 \n    4.6 \n    4.3 \n    4 \n    3 \n    3.7 \n    3.8 \n    3.4 \n    3.7 \n    5 \n    4.7 \n    4.2 \n    4 \n    4 \n    3.8 \n    3.3 \n    2.7 \n    2.8 \n    2.8 \n    2.6 \n    3.1 \n    3.5 \n    3.2 \n    2.9 \n    2.8 \n    2.9 \n    2.9 \n  \n  \n    Female \n    3.3 \n    3 \n    2.5 \n    3.2 \n    3.6 \n    4.5 \n    4.1 \n    3.3 \n    2.9 \n    3.1 \n    2.9 \n    2.6 \n    2.7 \n    2.5 \n    2.5 \n    2.8 \n    3.3 \n    4.3 \n    3.5 \n    3.2 \n    2.9 \n    2.9 \n    2.7 \n    2.7 \n    2.6 \n    2.6 \n    2.4 \n    2.4 \n    3.1 \n    3.6 \n    3.3 \n    3 \n    2.9 \n    2.8 \n    2.7 \n    2.6 \n    2.4 \n    2.4 \n    2.4 \n    2.8 \n    3.4 \n    4.8 \n    3.8 \n    3.8 \n    3.7 \n    3.6 \n    3.4 \n    3.1 \n    2.9 \n    3 \n    2.9 \n    3.3 \n    3.7 \n    4.8 \n    4.1 \n    4 \n    3.8 \n    3.7 \n    3.4 \n    3.2 \n    2.9 \n    3 \n    2.8 \n    3.1 \n    3.6 \n    5 \n    4 \n    3.9 \n    3.5 \n    3.4 \n    3.2 \n    3.3 \n    3.4 \n    3.3 \n    3.1 \n    3.3 \n    3.8 \n    5.2 \n    4.2 \n    4 \n    3.4 \n    3.6 \n    3.2 \n    3.3 \n    2.9 \n    2.9 \n    2.9 \n    3 \n    3.8 \n    5 \n    4.4 \n    4 \n    3.7 \n    3.6 \n    3.6 \n    3.8 \n    3.5 \n    3.3 \n    3 \n    3.1 \n    4.5 \n    5 \n    4.1 \n    4.1 \n    3.7 \n    3.7 \n    3.7 \n    2.8 \n    2.8 \n    2.8 \n    2.7 \n    3.4 \n    4.4 \n    4.2 \n    4.4 \n    4.2 \n    4.5 \n    4.4 \n    4.1 \n    3.2 \n    3.4 \n    3.5 \n    3.5 \n    4.6 \n    6.7 \n    5.2 \n    4.4 \n    4.1 \n    4 \n    3.9 \n    3.1 \n    2.5 \n    2.5 \n    2.7 \n    2.6 \n    4 \n    4.9 \n    3.6 \n    3.2 \n    3.2 \n    3.2 \n    3.2"
  },
  {
    "objectID": "data_analytics/unemployment_index.html#unemployment-rate-of-total-population",
    "href": "data_analytics/unemployment_index.html#unemployment-rate-of-total-population",
    "title": "Analysis 2: Unemployment index",
    "section": "- Unemployment rate of total population",
    "text": "- Unemployment rate of total population\n\nunemp_total %>% \n    autoplot() + \n    theme_classic()+\n    theme(text=element_text(family=\"Noto Serif\",size=12)) -> p\n\nggplotly(p) %>% \n    layout(title = list(text = paste0(\n        'Unemployment rate of economically active population (2010~2022)',\n        '<br>',\n        '<sup>',\n        'Korean Population and Housing Census (retrieved from KOSIS) (Jan, 2010 ~ June, 2022)','</sup>'),\n        x = 0,\n        font=list(size=16)))\n\n\n\n\n\n\n- Time-series smoothing\n\n# 3RSSH Twice. 4253H Twice smoothing\nsmooth_3RSSH=function(data){ \n  smooth3RSS=smooth(data, kind=\"3RSS\") \n  n=length(data) \n  smooth3RSSH=smooth3RSS \n  \n  for (i in 2:(n-1)) {\n    smooth3RSSH[i] <- smooth3RSS[i-1]/4 + smooth3RSS[i]/2 + smooth3RSS[i+1]/4}\n    \n    smooth3RSSH[1] <- smooth3RSS[1]; \n    smooth3RSSH[n] <- smooth3RSS[n] \n    rough=data-smooth3RSSH \n    roughH=rough \n  \n    smooth3RSS2=smooth(rough,kind=\"3RSS\") \n  \n  for (i in 2:(n-1)) {\n    roughH[i] <- smooth3RSS2[i-1]/4 + smooth3RSS2[i]/2 + smooth3RSS2[i+1]/4}\n  \n    roughH[1] <- smooth3RSS2[1]; \n    roughH[n] <- smooth3RSS2[n] \n    out=smooth3RSSH+roughH \n    out=as.vector(out) \n    return(out)} \n\n\n# Data clensing\nsmooth=tibble(\n    ym(total$PRD_DE),as.numeric(total$DT),smooth_3RSSH(as.numeric(total$DT)),\n    sleek(as.numeric(total$DT)))\n\nnames(smooth)=c(\"year\",\"Default\",\"3RSSH Twice\",\"4253H Twice\")\n\ndatebreaks <- seq(as.Date(\"2010-01-01\"), as.Date(\"2022-12-01\"), by=\"6 month\")\n\n\nsmooth %>% \n    tidyr::gather(\"Default\",\n                  \"3RSSH Twice\",\n                  \"4253H Twice\",\n                  key = \"variable\",\n                  value=\"value\") %>%\n    mutate(type=factor(variable,\n                           levels=c(\"Default\",\n                                    \"3RSSH Twice\",\n                                    \"4253H Twice\"))) %>% \n    ggplot(aes(x=year,y=value,color=type, group = 1,\n               text=paste('Smoothing Type:', type,\n                     '<br>Time: ', format(zoo::as.yearmon(year),\"%Y/%m\"),\n                     '<br>Rate (%): ', formattable::percent(value/100)))) +\n    geom_line(aes(x=year,y=value),size=1) +\n    geom_point(size=2)+\n    theme_classic() +\n    labs(color=\"Smoothing Methods\",\n         y=\"Unimployment Index(%)\")+\n    scale_x_date(breaks=datebreaks,labels=date_format(\"%Y/%m\"))+\n    theme(text=element_text(family=\"Noto Serif\",size=12),\n          axis.text.x = element_text(angle=30, hjust=1),\n          axis.title.x=element_blank()) -> p1\n\nggplotly(p1,tooltip=\"text\") %>% \n    layout(title = list(text = paste0(\n        'Unemployment Rate of economically active population with smoothing',\n        '<br>',\n        '<sup>',\n        'Source: Korean Population and Housing Census (retrieved from KOSIS) (Jan, 2010 ~ June, 2022)','</sup>'),\n        x = 0,\n        font=list(size=16)))"
  },
  {
    "objectID": "data_analytics/unemployment_index.html#comparison-of-the-unemployment-rate-among-presidential-regimes",
    "href": "data_analytics/unemployment_index.html#comparison-of-the-unemployment-rate-among-presidential-regimes",
    "title": "Analysis 2: Unemployment index",
    "section": "- Comparison of the unemployment rate among presidential regimes",
    "text": "- Comparison of the unemployment rate among presidential regimes\n\nregime=data.frame(president=factor(c(\"Lee Myung-bak\",\"Park Geun-hye\",\"Hwang Kyo-ahn\",\"Moon Jae-in\",\"Yoon Suk-yeol\"),\n                              levels=c(\"Lee Myung-bak\",\"Park Geun-hye\",\"Hwang Kyo-ahn\",\"Moon Jae-in\",\"Yoon Suk-yeol\")),\n             start_date=ymd(c(20100101,20130201,20170301,20170510,20220510)), \n             end_date=ymd(c(20130131,20170228,20170509,20220509,20230701)))\n\nregime %>% \n    kbl(col.names = gsub(\"[_]\", \" \", names(.)) %>% str_to_title()) %>% \n    kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"))\n\n\n\n \n  \n    President \n    Start Date \n    End Date \n  \n \n\n  \n    Lee Myung-bak \n    2010-01-01 \n    2013-01-31 \n  \n  \n    Park Geun-hye \n    2013-02-01 \n    2017-02-28 \n  \n  \n    Hwang Kyo-ahn \n    2017-03-01 \n    2017-05-09 \n  \n  \n    Moon Jae-in \n    2017-05-10 \n    2022-05-09 \n  \n  \n    Yoon Suk-yeol \n    2022-05-10 \n    2023-07-01 \n  \n\n\n\n\n\n\ndatebreaks <- seq(as.Date(\"2010-01-01\"), as.Date(\"2022-12-01\"), by=\"6 month\")\nsmooth %>% \n    tidyr::gather(\"Default\",\n                  \"3RSSH Twice\",\n                  \"4253H Twice\",\n                  key = \"variable\",\n                  value=\"value\") %>% \n    dplyr::filter(variable==\"Default\") %>% \n    ggplot(aes(group=1,text=paste('Time: ', format(zoo::as.yearmon(year),\"%Y/%m\"),\n                     '<br>Rate (%): ', formattable::percent(value/100))))+\n    geom_rect(data=regime,aes(xmin=start_date,\n                              xmax=end_date, \n                              ymin=2,\n                              ymax=6, \n                              fill=president,text=\"\"), alpha=0.2)+\n    geom_line(aes(x=year,y=value),color=\"black\",size=1)+\n    geom_point(aes(x=year,y=value),color=\"black\",size=1.5)+\n    theme_classic() +\n    labs(fill=\"Presidential Regime\",\n         y=\"Unimployment Index(%)\")+\n    scale_x_date(breaks=datebreaks,labels=date_format(\"%Y/%m\"))+\n    theme(text=element_text(family=\"Noto Serif\",size=12),\n          axis.text.x = element_text(angle=30, hjust=1),\n          axis.title.x=element_blank())+\n    geom_smooth(aes(x=year,y=value),\n                method='loess',\n                color=\"orange\",\n                linetype=\"dashed\",\n                fill = \"orange\",\n                alpha=0.1) -> p2\n\nWarning: Ignoring unknown aesthetics: text\n\nggplotly(p2,tooltip=c(\"text\") )%>% \n    layout(title = list(text = paste0(\n        'Unemployment Rate of economically active population with smoothing',\n        '<br>',\n        '<sup>',\n        'Source: Korean Population and Housing Census (retrieved from KOSIS) (Jan, 2010 ~ June, 2022)','</sup>'),\n        x = 0,\n        font=list(size=16)))\n\n`geom_smooth()` using formula 'y ~ x'"
  },
  {
    "objectID": "data_analytics/unemployment_index.html#comparison-of-the-unemployment-rate-between-male-and-female",
    "href": "data_analytics/unemployment_index.html#comparison-of-the-unemployment-rate-between-male-and-female",
    "title": "Analysis 2: Unemployment index",
    "section": "- Comparison of the unemployment rate between male and female",
    "text": "- Comparison of the unemployment rate between male and female\n\nunemp=data.frame(year=ym(total$PRD_DE),\n                 total_unemp=total$DT,\n                 male_unemp=male$DT,\n                 female_unemp=female$DT)\n\nunemp %>% \n    mutate_if(is.character,as.numeric) %>%\n    mutate(month=format(as.Date(year,format=\"%Y%m\"), \"%b\")) -> unemp\nunemp$month=ordered(month.abb[as.numeric(unemp$month)],levels=month.abb)\n\n\nunemp %>% \n    select(-year) %>% \n    gather(\"variable\",\"value\",1:3) %>% \n    group_by(month,variable,.add = TRUE) %>% \n    mutate(Mean_value= mean(value),Min_value=min(value),Max_value=max(value))%>% \n    mutate(variable=factor(variable,\n                           levels=c(\"total_unemp\",\"male_unemp\",\"female_unemp\"))) %>%\n    ggplot(aes(x=month,y=Mean_value,fill=variable))+ \n    facet_wrap(~variable,\n               labeller = labeller(variable = c(\"total_unemp\" = \"Total Unemployment\",   \n                                                \"male_unemp\" = \"Male Unemployment\",\n                                            \"female_unemp\" = \"Female Unemployment\")))+\n    theme_classic()+\n    geom_bar(stat = \"identity\", position = \"dodge\")+\n    scale_fill_manual(labels=c(\"Total Unemployment\", \n                               \"Male Unemployment\",\n                               \"Female Unemployment\"),\n                      name = \"Genders\",values =c(\"gray\",\"#619CFF\",\"#F8766D\"))+\n    labs(y=\"Unemployment Rate\\n\",\n        x=\"\\n\")+\n    geom_errorbar(aes(ymin = Min_value, \n                      ymax = Max_value), \n                      width = 0.05, position = position_dodge(0.9))+\n    theme(text=element_text(family=\"Noto Serif\",size=12),\n          axis.text.x = element_text(angle=45, hjust=1),\n          axis.title.x=element_blank())+\n    coord_cartesian(ylim=c(1.5,7))+\n    geom_text(aes(label= paste(sprintf(\"%2.2f\", Mean_value),\"%\",sep=\"\")),\n              vjust=-0.4, size=3,position = position_dodge(width = 1)) -> p3\n    \n\nmrg <- list(l = 100, r = 50 ,\n          b = 30, t = 150)\n\nggplotly(p3, tooltip=\"text\")%>% \n    style(textposition = \"top\") %>% \n    layout(title = list(text = paste0(\n        'Unemployment Rate of economically active population',\n        '<br>',\n        '<sup>',\n        'Source: Korean Population and Housing Census (retrieved from KOSIS) (Jan, 2010 ~ June, 2022)<br>',\n        'Error Bar: Min-Max Rate Per Month',\n        '</sup>'),\n        x = 0.05,\n        font=list(size=16)),\n        margin = mrg) \n\n\n\n\n\n\nunemp=data.frame(year=ym(total$PRD_DE),\n                 total_unemp=total$DT,\n                 male_unemp=male$DT,\n                 female_unemp=female$DT)\n\nunemp %>% \n    mutate_if(is.character,as.numeric) %>%\n    mutate(month=format(as.Date(year,format=\"%Y%m\"), \"%b\")) -> unemp\nunemp$month=ordered(month.abb[as.numeric(unemp$month)],levels=month.abb)\n\n\nunemp %>% \n    select(-year) %>% \n    gather(\"variable\",\"value\",1:3) %>% \n    group_by(month,variable,.add = TRUE) %>% \n    mutate(Mean_value= mean(value),Min_value=min(value),Max_value=max(value))%>% \n    mutate(variable=factor(variable,\n                           levels=c(\"total_unemp\",\"male_unemp\",\"female_unemp\"))) %>%\n    ggplot(aes(x=month,y=Mean_value,fill=variable))+ \n    theme_classic()+\n    geom_bar(stat = \"identity\", position = \"dodge\")+\n    scale_fill_manual(labels=c(\"Total Unemployment\", \n                               \"Male Unemployment\",\n                               \"Female Unemployment\"),\n                      name = \"Genders\",values =c(\"gray\",\"#619CFF\",\"#F8766D\"))+\n    labs(y=\"Unemployment Rate\\n\")+\n    geom_errorbar(aes(ymin = Min_value, \n                      ymax = Max_value), \n                      width = 0.05, position = position_dodge(0.9))+\n    theme(text=element_text(family=\"Noto Serif\",size=12),\n          axis.text.x = element_text(angle=45, hjust=1),\n          axis.title.x=element_blank())+\n    coord_cartesian(ylim=c(1.5,7)) -> p4\n    \n\nmrg <- list(l = 100, r = 50 ,\n          b = 30, t = 150)\n\nggplotly(p4, tooltip=c(\"value\",\"year\"))%>% \n    style(textposition = \"top\") %>% \n    layout(title = list(text = paste0(\n        'Unemployment Rate of economically active population',\n        '<br>',\n        '<sup>',\n        'Source: Korean Population and Housing Census (retrieved from KOSIS) (Jan, 2010 ~ June, 2022)<br>',\n        'Error Bar: Min-Max Rate Per Month',\n        '</sup>'),\n        x = 0.05,\n        font=list(size=16)),\n        margin = mrg)"
  },
  {
    "objectID": "data_analytics/unemployment_index.html#seasonal-decomposition-of-the-unemployment-rate",
    "href": "data_analytics/unemployment_index.html#seasonal-decomposition-of-the-unemployment-rate",
    "title": "Analysis 2: Unemployment index",
    "section": "- Seasonal decomposition of the unemployment rate",
    "text": "- Seasonal decomposition of the unemployment rate\n\nunemp_total.decompose=decompose(unemp_total)\nunemp_male.decompose=decompose(unemp_male)\nunemp_female.decompose=decompose(unemp_female)\n\n\n# Total\nplot(unemp_total.decompose,cex.main=2, cex.lab=2, cex.axis=2)\n\n\n\n\n\n\n\n# Male\nplot(unemp_male.decompose,cex.main=2, cex.lab=2, cex.axis=2)\n\n\n\n\n\n\n\n# Female\nplot(unemp_female.decompose,cex.main=2, cex.lab=2, cex.axis=2)\n\n\n\n\n\n\n\n\n\nplot(unemp_total.decompose$seasonal,main=\"The Plot of Seasoal Decomposition\",cex.main=2, cex.lab=2, cex.axis=2)\n\n\n\n\n\n\n\n\n\n# Box-Cox Transformation(To visualize seasonality and to improve normality)\nlambda <- forecast::BoxCox.lambda(unemp_total)\nunemp_total_bc <- forecast::BoxCox(unemp_total, lambda)\n\n# Boxcox transforamtion is only applicable when data only contain positive value.\nplot(unemp_total_bc, main = \"Box-Cox : Unemployment Rate\",,cex.main=2, cex.lab=2, cex.axis=2)\n\n\n\n\n\n\n\n\n\n- Visualize seasonality and comparing trends per year\n\nunemp %>%\n    mutate(time=year,\n        year=factor(format(as.Date(year), \"%Y\"))) -> unemp2\n\n\nunemp2 %>% \n    select(time,month,year,total_unemp,male_unemp,female_unemp) %>%\n    gather(\"variable\",\"value\", 4:6) %>% \n    mutate(variable=factor(variable,levels= c(\"total_unemp\",\n                                              \"male_unemp\",\n                                          \"female_unemp\"))) %>% \n    ggplot(aes(x=as.factor(month),\n               y=value,\n               group=year,\n               color=as.factor(year),\n               text=paste('Time: ', format(zoo::as.yearmon(time),\"%Y/%m\"),\n                     '<br>Rate (%): ', formattable::percent(value/100),\n                     '<br>Gender: ',variable))) +\n    geom_line() + \n    geom_point()+\n    facet_wrap(~variable,\n               labeller = labeller(variable = \n                                       c(\"total_unemp\" = \"Total Unemployment\",   \n                                         \"male_unemp\" = \"Male Unemployment\",\n                                         \"female_unemp\" = \"Female Unemployment\")))+\n    theme_classic()+\n    scale_fill_manual(labels=c(\"Total Unemployment\", \n                               \"Male Unemployment\",\n                               \"Female Unemployment\"),\n                      name = \"Genders\",values =c(\"gray\",\"#619CFF\",\"#F8766D\"))+\n    labs(y=\"Unemployment Rate\\n\",color = \"Year\")+\n    theme(text=element_text(family=\"Noto Serif\",size=12),\n          axis.text.x = element_text(angle=45, hjust=1),\n          axis.title.x=element_blank()) +\n    coord_cartesian(ylim=c(1.5,7)) -> p5\n    \n\nmrg <- list(l = 100, r = 50 ,\n          b = 30, t = 100)\n\ngp<- ggplotly(p5, tooltip=\"text\")%>% \n    style(textposition = \"top\") %>% \n    layout(title = list(text = paste0(\n        'Unemployment Rate of economically active population',\n        '<br>',\n        '<sup>',\n        'Source: Korean Population and Housing Census (retrieved from KOSIS) (Jan, 2010 ~ June, 2022)',\n        '</sup>'),\n        x = 0.05,\n        font=list(size=16)),\n        margin = mrg) \n\nfor (i in seq_along(gp$x$data)) {\n  # Is the layer the first entry of the group?\n  is_first <- grepl(\"^\\\\(.*?,1\\\\)\", gp$x$data[[i]]$name)\n  # Extract the group identifier and assign it to the name and legendgroup arguments\n  gp$x$data[[i]]$name <- gsub(\"^\\\\((.*?),\\\\d+\\\\)\", \"\\\\1\", gp$x$data[[i]]$name)\n  gp$x$data[[i]]$legendgroup <- gp$x$data[[i]]$name\n  # Show the legend only for the first layer of the group \n  if (!is_first) gp$x$data[[i]]$showlegend <- FALSE\n}\n\ngp\n\n\n\n\n\n\nunemp2 %>% \n    select(time,month,year,total_unemp,male_unemp,female_unemp) %>%\n    gather(\"variable\",\"value\", 4:6) %>% \n    mutate(variable=factor(variable,levels= c(\"total_unemp\",\n                                              \"male_unemp\",\n                                          \"female_unemp\"))) %>% \n    ggplot(aes(x=as.factor(month),\n               y=sleek(value),\n               group=year,\n               color=as.factor(year),\n               text=paste('Time: ', format(zoo::as.yearmon(time),\"%Y/%m\"),\n                     '<br>Rate (%): ', formattable::percent(value/100),\n                     '<br>Gender: ',variable))) +\n    geom_line() + \n    geom_point()+\n    facet_wrap(~variable,\n               labeller = labeller(variable = \n                                       c(\"total_unemp\" = \"Total Unemployment\",   \n                                         \"male_unemp\" = \"Male Unemployment\",\n                                         \"female_unemp\" = \"Female Unemployment\")))+\n    theme_classic()+\n    scale_fill_manual(labels=c(\"Total Unemployment\", \n                               \"Male Unemployment\",\n                               \"Female Unemployment\"),\n                      name = \"Genders\",values =c(\"gray\",\"#619CFF\",\"#F8766D\"))+\n    labs(y=\"Unemployment Rate\\n\",color = \"Year\")+\n    theme(text=element_text(family=\"Noto Serif\",size=12),\n          axis.text.x = element_text(angle=45, hjust=1),\n          axis.title.x=element_blank()) +\n    coord_cartesian(ylim=c(1.5,7)) -> p6\n    \n\nmrg <- list(l = 100, r = 50 ,\n          b = 30, t = 100)\n\ngp1<- ggplotly(p6, tooltip=\"text\")%>% \n    style(textposition = \"top\") %>% \n    layout(title = list(text = paste0(\n        'Unemployment Rate of economically active population with 4253H Twice smoothing',\n        '<br>',\n        '<sup>',\n        'Source: Korean Population and Housing Census (retrieved from KOSIS) (Jan, 2010 ~ June, 2022)',\n        '</sup>'),\n        x = 0.05,\n        font=list(size=16)),\n        margin = mrg) \n\nfor (i in seq_along(gp1$x$data)) {\n  # Is the layer the first entry of the group?\n  is_first <- grepl(\"^\\\\(.*?,1\\\\)\", gp$x$data[[i]]$name)\n  # Extract the group identifier and assign it to the name and legendgroup arguments\n  gp1$x$data[[i]]$name <- gsub(\"^\\\\((.*?),\\\\d+\\\\)\", \"\\\\1\", gp1$x$data[[i]]$name)\n  gp1$x$data[[i]]$legendgroup <- gp1$x$data[[i]]$name\n  # Show the legend only for the first layer of the group \n  if (!is_first) gp1$x$data[[i]]$showlegend <- FALSE\n}\n\ngp1"
  },
  {
    "objectID": "data_analytics/unemployment_index.html#predicting-next-years-unemployment-rate-using-arima-algorithm.",
    "href": "data_analytics/unemployment_index.html#predicting-next-years-unemployment-rate-using-arima-algorithm.",
    "title": "Analysis 2: Unemployment index",
    "section": "- Predicting next year’s unemployment rate using ARIMA algorithm.",
    "text": "- Predicting next year’s unemployment rate using ARIMA algorithm.\n\n# ARIMA\naTSA::adf.test(unemp_total, nlag = NULL, output = TRUE) \n\nAugmented Dickey-Fuller Test \nalternative: stationary \n \nType 1: no drift no trend \n     lag    ADF p.value\n[1,]   0 -0.772   0.402\n[2,]   1 -0.805   0.390\n[3,]   2 -0.667   0.440\n[4,]   3 -0.649   0.446\n[5,]   4 -0.676   0.437\nType 2: with drift no trend \n     lag   ADF p.value\n[1,]   0 -4.78    0.01\n[2,]   1 -5.77    0.01\n[3,]   2 -5.65    0.01\n[4,]   3 -4.89    0.01\n[5,]   4 -5.19    0.01\nType 3: with drift and trend \n     lag   ADF p.value\n[1,]   0 -4.86    0.01\n[2,]   1 -5.95    0.01\n[3,]   2 -5.85    0.01\n[4,]   3 -5.16    0.01\n[5,]   4 -5.64    0.01\n---- \nNote: in fact, p.value = 0.01 means p.value <= 0.01 \n\n# p-value<=0.01 Reject null-hypothesis. (Stationary)\n\n\nfit=auto.arima(unemp_total,trace=T)\n\n\n ARIMA(2,1,2)(1,1,1)[12]                    : 36.50482\n ARIMA(0,1,0)(0,1,0)[12]                    : 68.4576\n ARIMA(1,1,0)(1,1,0)[12]                    : 37.8781\n ARIMA(0,1,1)(0,1,1)[12]                    : 39.43664\n ARIMA(2,1,2)(0,1,1)[12]                    : 42.49405\n ARIMA(2,1,2)(1,1,0)[12]                    : 36.07573\n ARIMA(2,1,2)(0,1,0)[12]                    : 60.73393\n ARIMA(2,1,2)(2,1,0)[12]                    : 36.37945\n ARIMA(2,1,2)(2,1,1)[12]                    : 38.59869\n ARIMA(1,1,2)(1,1,0)[12]                    : 35.92575\n ARIMA(1,1,2)(0,1,0)[12]                    : 58.66389\n ARIMA(1,1,2)(2,1,0)[12]                    : 36.1904\n ARIMA(1,1,2)(1,1,1)[12]                    : 36.2949\n ARIMA(1,1,2)(0,1,1)[12]                    : 41.57701\n ARIMA(1,1,2)(2,1,1)[12]                    : 38.35171\n ARIMA(0,1,2)(1,1,0)[12]                    : 34.33111\n ARIMA(0,1,2)(0,1,0)[12]                    : 56.7069\n ARIMA(0,1,2)(2,1,0)[12]                    : 34.64578\n ARIMA(0,1,2)(1,1,1)[12]                    : 34.77616\n ARIMA(0,1,2)(0,1,1)[12]                    : 39.77648\n ARIMA(0,1,2)(2,1,1)[12]                    : 36.78503\n ARIMA(0,1,1)(1,1,0)[12]                    : 33.73023\n ARIMA(0,1,1)(0,1,0)[12]                    : 55.59995\n ARIMA(0,1,1)(2,1,0)[12]                    : 33.42099\n ARIMA(0,1,1)(2,1,1)[12]                    : 35.52775\n ARIMA(0,1,1)(1,1,1)[12]                    : 33.70222\n ARIMA(0,1,0)(2,1,0)[12]                    : 49.02686\n ARIMA(1,1,1)(2,1,0)[12]                    : 34.1495\n ARIMA(1,1,0)(2,1,0)[12]                    : 36.97406\n\n Best model: ARIMA(0,1,1)(2,1,0)[12]                    \n\n\n\nforecast::forecast(fit, level=c(75, 95), h=12) %>% \n    autoplot() + \n    theme_classic()+\n    theme(text=element_text(family=\"Noto Serif\",size=12)) -> p7\n\nggplotly(p7) %>% \n    layout(title = list(text = paste0(\n        'Prediction of unemployment rate of economically active population (for next 12 months)',\n        '<br>',\n        '<sup>',\n        'Korean Population and Housing Census (retrieved from KOSIS) (Jan, 2010 ~ June, 2022)','</sup>'),\n        x = 0,\n        font=list(size=16)))"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sangwon Ju (주상원)",
    "section": "",
    "text": "Hi. I'm a Master's student in  Graduate School of Public Administration at Seoul National University, Seoul, South Korea. \n\nI'm currently studying public policy and management. Generally, my works seeks to understand interaction between information systems and public policy process, quantify impact of information systems on acquiring public value, and figure out how researchers can contribute to improving organizational decision-making by adequately utilizing information systems and evidence-based practices.   \n\n\n\n\nSeoul National University, GSPA | Seoul, KR\nM.P.A in Public Policy | Sep 2021 - Aug 2023\nYonsei University, CSS | Seoul, KR\nB.A in Public Policy and Management\nB.A in Business Administration\nMinor in Applied Statistics | Mar 2015 - Aug 2021\n\n\n\n\n\nKorea Research Institute for Local Administration\nResearch Assistant | May 2022 - Present\nEvidence-Based Research Lab, GSPA, SNU\nResearch Assistant | Sep 2021 - Present"
  },
  {
    "objectID": "publication.html",
    "href": "publication.html",
    "title": "Publications / Working Papers",
    "section": "",
    "text": "To be updated"
  },
  {
    "objectID": "publication.html#working-papers",
    "href": "publication.html#working-papers",
    "title": "Publications / Working Papers",
    "section": "Working Papers",
    "text": "Working Papers\n\nSocietal Impacts of Information Systems\n\nJu, S. (2023), How does public information systems affects improving internet accessibility of students (Literature Review)\n\nEvidence-Based Policy and Management\n\nJu, S. & Lee, J., Kim, B.J. (2022), Evidence-Based Policy in Asian Countries: Applying Model of Evidence-Based Practice Implementation for Maturation Stage Analysis [in Korean]. (Analysis / Writing Finished, Target Journal: Korean Public Administration Review)\n\nOrganizational Decision-making\n\nJu, S. (2023), Blame Avoidance and Research Utilization: Evidence From Korean Public Enterprises (Literature Review)"
  },
  {
    "objectID": "publication.html#academic-presentations",
    "href": "publication.html#academic-presentations",
    "title": "Publications / Working Papers",
    "section": "Academic Presentations",
    "text": "Academic Presentations\n\nJu, S. & Lee, J. (2022), Evidence-Based Policy in Asian Countries: Applying Model of Evidence-Based Practice Implementation for Maturation Stage Analysis [in Korean, Poster Session], 2022 Korean Public Administration Summer Conference and Annual KAPA International Conference, Yeosu, Korea, June 2022."
  },
  {
    "objectID": "research_interests.html",
    "href": "research_interests.html",
    "title": "Research Interests",
    "section": "",
    "text": "(0) policy analysis and program evaluation\n(1) management information systems\n\nquantifying societal impact of information systems\n\n(2) evidence-based public policy and management (EBPPM)\n\nbeing evidence-based is being data-driven?\nwhat is the difference between evidence-based approach and contemporary policy analysis? (such as discourse policy analysis)\nPositivist vs. Constructivist\n\n(3) organization theory and behavior\n\nStrategic decision-making\nhuman-machine cooperation in organization decision-making.\n\n\nMethodologically, I’m interested in applied econometrics for quasi-experimental approach, machine-learning as well as other computational methods for both business and public data analytics, and applied psychology survey analysis. Also I have prior experience in policy analysis techniques (such as Cost-Benefit Analysis, Analytic Hierarchy Process etc.)"
  },
  {
    "objectID": "data_analytics/FWA.html#텍스트-마이닝을-활용한-빅데이터-텍스트-분석",
    "href": "data_analytics/FWA.html#텍스트-마이닝을-활용한-빅데이터-텍스트-분석",
    "title": "Sangwon Ju's Personal Page",
    "section": "- 텍스트 마이닝을 활용한 빅데이터 텍스트 분석",
    "text": "- 텍스트 마이닝을 활용한 빅데이터 텍스트 분석\n\n기술통계 분석\n1. 빈도표 계산 및 말뭉치 등을 활용한 시각화 단어가 몇번 출현했는 지수(Count)를 기반으로 하여 텍스트를 표현 - BoW: 단어의 순서를 고려하지 않고 단어 출현 빈도에만 집중 - DTM (Document-Term Matrix): 문서단어행렬, 다수의 문서에서 등장하는 단어들의 빈도를 행렬로 표현하는 방식 - TF-IDF (Term Frequency - Inverse Document Frequency): 단어 빈도 - 역 문서 빈도  총 문서 수 대비 적게 등장한 단어가 중요한 단어  특정 문서 안에서 많이 등장한다고 해도 중요도가 올라가지는 않음  > TF: 특정 문서 D에서 특정 단어 T의 등장 횟수  DF: 특정 단어 T가 등장한 문서의 수  IDF: DF에 반비례 하는 수. ln(총문서수/(DF))  TF-IDF: TF * IDF 희귀하면서도 특정 텍스트에서 자주 사용된 단어 (TF)는 그 텍스트에서 중요함 2. 단어간 혹은 기사간 상관관계 - 동시 출현(Co-Occurrence) 단어 분석 문장 혹은 기사에 함께 사용된 단어는 어떤 단어일지 분석하는 것. 단어의 “맥락”을 파악하기 위하여 어떤 단어들이 함께 쓰였는지를 알아야 함. 의미를 가진 단어(명사, 동사, 형용사)등을 추출하여 어떤 단어들이 함께 빈번하게 쓰였는지 분석해보는게 필요함. 3. 연관 규칙 분석 (Association Rules) - 장바구니 분석 Apriori Algorithm(Agrawal et al., 1993): 어떤 단어가 다른 단어들과의 연관규칙을 가지는지를 추출 하는 방식\n\n\n토픽 모델링\n토픽 모델링은 문서와 단어로 구성된 행렬(DTM)을 기반으로 문서에 잠재되어 (Latent)있다고 가정된 토픽의 등장확률을 추정하는 일련의 통계적 텍스트 처리기법을 일컫는다. (Blei, 2014; Blei and Lafferty, 2007;Blei, Ng and Jordan, 2003) DTM을 활용하여 주제-확률 분포, 단어-확률 분포를 구한뒤 잠재 주제를 찾는 LDA나 Singular Value Decomposition을 통해 차원 축소를 하는 방법이 있다.\n\n\nLDA(Latent Dirichlet Allocation): 이 문서에서는 어떤 주제들이 오가고 있을까?  PLSA를 조건부 확률로 확장시킨 기법으로 잠재 주제의 확률적 분포에 대한 PLSA의 한계점을 보완한 모델이다. LDA모델은 무작위로 섞여있는 대량의 문서에서 단어들의 패턴을 추론하여 각 토픽의 특성을 도출하는데 용이하며, 텍스트 데이터의 의미구조를 파악하기에 적합한 방법 중 하나이다.  한 문서는 여러가지 토픽으로 이루어지고, 토픽은 여러 단어를 혼합하여 구성된다.   1개의 토픽은 여러 단어(서로 다른 확률을 가진)로 구성. 1개의 단어는 여러 토픽에서 서로 다른 확률을 가짐.  delta는 문장이 각 토픽에 등장할 확률, beta는 단어가 각 토픽에 등장할 확률\n\nfyi) 디리클레 분포(Dirichlet distribution):  베타분포를 다변량으로 확장한 것으로 다변량 베타분포라고 볼 수 있음. (K가 2일때 베타분포) LDA 토픽 모델링으로 예를 들면, 한 문서에 대한 토픽의 분포는 k개의 토픽의 확률 (\\(p_k\\))로 표현할 수 있음.  문서에서 각 단어에 대한 토픽을 샘플을 할때 이 토픽의 분포는 Multinomial 분포를 가정하게 됨. dirichlet 분포의 샘플링 된 k차원 벡터는 합이 1을 만족하기 때문에, multinomial 분포의 모수(\\(p_k\\))에 사용될 수 있음 -> 분포의 분포를 표현.\n\\[f(x_1, x_2, \\cdots, x_K) = \\frac{1}{\\mathrm{B}(\\boldsymbol\\alpha)} \\prod_{i=1}^K x_i^{\\alpha_i - 1} \\]\n\\[ \\mathrm{B}(\\boldsymbol\\alpha) = \\frac{\\prod_{i=1}^K \\Gamma(\\alpha_i)} {\\Gamma\\bigl(\\sum_{i=1}^K \\alpha_i\\bigr)}\\]\n제한조건: \\[ \\sum_{i=1}^{K} x_i = 1 \\]\nhttps://donghwa-kim.github.io/distributions.html (참고)"
  },
  {
    "objectID": "data_analytics/FWA.html#자료수집",
    "href": "data_analytics/FWA.html#자료수집",
    "title": "Sangwon Ju's Personal Page",
    "section": "자료수집 ",
    "text": "자료수집 \n우리나라 COVID-19 최초 발생월인 2020년 2월부터 2021년 12월까지의 ‘유연근무’혹은 ’탄력근무’ 혹은 ’원격근무’를 포함하고 있는 정치부, 사회부 언론기사 제목 11,334건을 한국언론진흥재단(BIGKINDS)에서 수집. (경제부 기사들은 특정기업이 유연근무를 사용하기 시작하였음을 홍보하는 기사들이 많아 제외하였음)\n\na. 데이터 불러오기\nworksheet = gc.open('NewsResult_20200201-20211202 (1)').sheet1\nrows = worksheet.get_all_values()\nbigkinds=pd.DataFrame.from_records(rows)\nbigkinds.columns=bigkinds.iloc[0]\nbigkinds=bigkinds.drop(bigkinds.index[0])\n\nimport pandas_profiling\nbigkinds.profile_report()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nb. 기술 통계 분석\n\n시기 별 기사의 수\n\n\nfrom datetime import datetime \nnumber=bigkinds >> group_by(X.일자) >> summarize(count=n(X.일자))\nnumber.head(10)\n\n\n\n\n\n  \n    \n      \n      일자\n      count\n    \n  \n  \n    \n      0\n      20200201\n      1\n    \n    \n      1\n      20200202\n      1\n    \n    \n      2\n      20200203\n      5\n    \n    \n      3\n      20200204\n      8\n    \n    \n      4\n      20200205\n      7\n    \n    \n      5\n      20200206\n      48\n    \n    \n      6\n      20200207\n      15\n    \n    \n      7\n      20200208\n      2\n    \n    \n      8\n      20200209\n      3\n    \n    \n      9\n      20200210\n      3\n    \n  \n\n\n\n\n# list 내포\nkdate = [ datetime.strptime(d, '%Y%m%d') for d in number[\"일자\"] ]\n\nhead(kdate)\nnumber['date'] = kdate\nkdate1 = [datetime.strftime(d, '%Y%m') for d in number[\"date\"] ]\n\nnumber['date1'] = kdate1\nnumber.head(10)\nnumber2=number[number.일자.astype(\"int64\")<20211131] >> select([\"date1\",\"count\"])  >> rename(num=\"count\") >> group_by('date1') >> summarise(num=X.num.sum())\n\nfig=plt.figure(figsize = (10,7))\n\nplt.plot(number[\"date\"], number[\"count\"],color='blue', label=str(\"기사\"))\nplt.title(\"일별 유연근무제 관련 기사 수\",fontsize=20)\nplt.style.use(\"default\")\nplt.rc('font', family='NanumBarunGothic') \n\nplt.legend(fontsize=20)\nplt.xticks(rotation=75,fontsize=10)\nplt.yticks(fontsize=10)\n\nax = fig.add_subplot(1, 1, 1)\nax.set_xlabel(\"일별\", fontsize=\"15\")\nax.set_ylabel(\"기사 건수\", fontsize=\"15\")\nplt.show()\n\n/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:12: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.\n  if sys.path[0] == '':\n\n\n\n\n\n\nfig2=plt.figure(figsize = (10,7))\nax = fig2.add_subplot(1, 1, 1)\nax.set_xlabel(\"기사 건수\", fontsize=\"15\")\nax.set_ylabel(\"월별\", fontsize=\"15\")\n\nplt.plot(number2[\"date1\"], number2[\"num\"],color='red', label=str(\"기사\"))\nplt.title(\"월별 유연근무제 관련 기사 수\",fontsize=20)\nplt.style.use(\"default\")\nplt.rc('font', family='NanumBarunGothic') \n\nplt.legend(fontsize=20)\nplt.xticks(rotation=75,fontsize=10)\nplt.yticks(fontsize=10)\nplt.show()\n\n\n\n\n\n텍스트 전처리\n\n\n# 토큰화\narticle=bigkinds >> select(\"제목\") >> rename(title=\"제목\")\nprint(article[\"title\"].head(10))\narticle[\"title\"]=article[\"title\"].astype(str)\narticle.shape #11334개의 기사\n\n1                                     동화약품, 가족친화 기업 재인증\n2               집단감염 취약한 콜센터 찾은 안경덕 고용부 장관 \"방역수칙 준수\" 당부\n3                  환풍기 타고 확산? 전파력 5배 오미크론, 재택치료 빈틈 파고드나\n4                                 [팀장시각]서로 위로하는 코로나 분투기\n5                        새 판 짜는 완성차 노조 MZ세대 품을까 [비즈360]\n6                           “재택치료? 가족들 번갈아가며 확진되란 건가요?”\n7                    5000명대 확진에 자영업자들 “다시 거리두기 격상되나” 한숨\n8                   전면등교 후 인천 학생 자가격리자 5천명 폭등 돌봄공백 '비상'\n9     \"가구를 통해 건강한 세상 만들겠다\" 유해물질 소음 진동 걱정없는 책상 [환경표지 ...\n10               김인호 서울시의회 의장, 코로나 확산세 관련 서울시에 적극 대응 요청\nName: title, dtype: object\n\n\n(11334, 1)\n\n\ndef text_preprocess(text):\n    \"\"\"\n    텍스트 전처리\n    1. span tag 삭재\n    2. br tag 삭제\n    3. 영어, 한글, 숫자, 온점 제외 삭제\n    4. 온점을 구분으로 문장 구분\n    \"\"\"\n    text = re.sub(\"(<span class='quot[0-9]'>|</span>|<br/>|<br />|([^0-9가-힣A-Za-z. ]))\",\"\",text)\n    return [sen.strip() for sen in text.split('.') if sen.strip()]\ndf = pd.DataFrame(index=np.arange(1,article.shape[0]+1), columns=['title'])\n# 정규표현식으로 불필요한 부분 제거\nfor i in np.arange(1,article.shape[0]+1):\n  df[\"title\"][i]=text_preprocess(article[\"title\"][i])\n\ndf\n\n\n\n\n\n  \n    \n      \n      title\n    \n  \n  \n    \n      1\n      [동화약품 가족친화 기업 재인증]\n    \n    \n      2\n      [집단감염 취약한 콜센터 찾은 안경덕 고용부 장관 방역수칙 준수 당부]\n    \n    \n      3\n      [환풍기 타고 확산 전파력 5배 오미크론 재택치료 빈틈 파고드나]\n    \n    \n      4\n      [팀장시각서로 위로하는 코로나 분투기]\n    \n    \n      5\n      [새 판 짜는 완성차 노조 MZ세대 품을까 비즈360]\n    \n    \n      ...\n      ...\n    \n    \n      11330\n      [정부 신종코로나 사망자 치사율 축소 논란 글로벌 대유행 가능성도]\n    \n    \n      11331\n      [신종코로나 확산 사태로 가장 먼저 재택근무 시행하는 업계는]\n    \n    \n      11332\n      [지옥철서 신종코로나 옮길라 문지방 출퇴근 지시한 제약회사]\n    \n    \n      11333\n      [여주시 신종 코로나 선제적 대응위해 보건소 선별진료소 운영]\n    \n    \n      11334\n      [태안군 6번 확진자 접촉 관내 2인 음성 판정]\n    \n  \n\n11334 rows × 1 columns\n\n\n\nsentence_arr = []\nfor i in np.arange(1,article.shape[0]):\n    text=df.title[i][0] \n    sentence_arr.insert(0,text)\n\npprint.pprint(sentence_arr[1:10])\n\n['지옥철서 신종코로나 옮길라 문지방 출퇴근 지시한 제약회사',\n '신종코로나 확산 사태로 가장 먼저 재택근무 시행하는 업계는',\n '정부 신종코로나 사망자 치사율 축소 논란 글로벌 대유행 가능성도',\n '경찰인재개발원 필수 인력만 남고 근무 장소 변경 허용',\n '격리 시설 직원들 하소연 유치원서 자녀 보내지 말라네요',\n '오늘은 이런 경향2월4일 재탕 후퇴 미흡  20대 총선보다 부실한 주거공약',\n '신종 코로나 16번째 확진자 발생 태국 여행한 42세 한국인 여성',\n '신종 코로나 확진 1명 추가 태국 여행 뒤 증상 발현',\n '우한 폐렴 비상오락가락하는 정부 기준 자가격리도 잇단 혼선']\n\n\ncheck = ['탄력', '재택', '유연']\nmatching1 = [s for s in sentence_arr if \"유연\" in s] \nmatching2 = [s for s in sentence_arr if \"재택\" in s] \nmatching3 = [s for s in sentence_arr if \"탄력\" in s] \nmatching =matching1 + matching2 + matching3 \nmatching=list(set(matching))\n\nprint(len(matching))\ntype(matching)\n# 1226개의 기사 제목\n\n1226\n\n\nlist\n\n\n한국어 NLP에서 형태소 분석기를 사용한다는 것은 단어 토큰화가 아니라 정확히는 형태소(morpheme) 단위로 형태소 토큰화(morpheme tokenization)를 수행하게 됨을 뜻한다. 여기선 이 중에서 Okt와 꼬꼬마를 통해서 토큰화를 수행한다.  참고: https://wikidocs.net/21698\nfrom konlpy.tag import *\nkkma = Kkma()  \nokt = Okt()  \n\nOKT\n\nokt_list=[]\nfor title in matching:\n  tokenized3=okt.pos(title)\n  okt_list.insert(len(okt_list)+1,tokenized3)\n\nokt_list[:3]\n\n[[('코로나', 'Noun'),\n  ('19', 'Number'),\n  ('우려', 'Noun'),\n  ('에', 'Josa'),\n  ('유엔', 'Noun'),\n  ('본부', 'Noun'),\n  ('직원', 'Noun'),\n  ('3000', 'Number'),\n  ('명', 'Noun'),\n  ('3', 'Number'),\n  ('주간', 'Noun'),\n  ('재택근무', 'Noun'),\n  ('돌입', 'Noun')],\n [('재택근무', 'Noun'),\n  ('중', 'Noun'),\n  ('아이', 'Noun'),\n  ('도', 'Josa'),\n  ('보육', 'Noun'),\n  ('하', 'Suffix'),\n  ('라', 'Josa'),\n  ('고요', 'Noun'),\n  ('긴급', 'Noun'),\n  ('보육', 'Noun'),\n  ('청원', 'Noun'),\n  ('갑론', 'Noun'),\n  ('을', 'Josa'),\n  ('박', 'Noun')],\n [('KBS', 'Alpha'),\n  ('본관', 'Noun'),\n  ('3', 'Number'),\n  ('층', 'Noun'),\n  ('직원', 'Noun'),\n  ('1', 'Number'),\n  ('명', 'Noun'),\n  ('확진', 'Noun'),\n  ('필수', 'Noun'),\n  ('인력', 'Noun'),\n  ('제외', 'Noun'),\n  ('재택근무', 'Noun')]]\n\n\nokt_morphs_list=[]\nfor title in matching:\n  tokenized4=okt.morphs(title)\n  okt_morphs_list.insert(len(okt_morphs_list)+1,tokenized4)\n\nokt_morphs_list[:3]\n\n[['코로나',\n  '19',\n  '우려',\n  '에',\n  '유엔',\n  '본부',\n  '직원',\n  '3000',\n  '명',\n  '3',\n  '주간',\n  '재택근무',\n  '돌입'],\n ['재택근무',\n  '중',\n  '아이',\n  '도',\n  '보육',\n  '하',\n  '라',\n  '고요',\n  '긴급',\n  '보육',\n  '청원',\n  '갑론',\n  '을',\n  '박'],\n ['KBS', '본관', '3', '층', '직원', '1', '명', '확진', '필수', '인력', '제외', '재택근무']]\n\n\n\n꼬꼬마\n\nkkma_list=[]\nfor title in matching:\n  tokenized=kkma.pos(title)\n  kkma_list.insert(len(kkma_list)+1,tokenized)\n\nkkma_list[:5]\n\n[[('코로나', 'NNG'),\n  ('19', 'NR'),\n  ('우려', 'NNG'),\n  ('에', 'JKM'),\n  ('유엔', 'NNG'),\n  ('본부', 'NNG'),\n  ('직원', 'NNG'),\n  ('3000', 'NR'),\n  ('명', 'NNM'),\n  ('3', 'NR'),\n  ('주간', 'NNG'),\n  ('재택근무', 'NNG'),\n  ('돌입', 'NNG')],\n [('재택근무', 'NNG'),\n  ('중', 'NNB'),\n  ('아이', 'NNG'),\n  ('도', 'JX'),\n  ('보육', 'NNG'),\n  ('하', 'XSV'),\n  ('라', 'ECD'),\n  ('고요', 'NNG'),\n  ('긴급', 'NNG'),\n  ('보육', 'NNG'),\n  ('청원', 'NNG'),\n  ('갑론을박', 'NNG')],\n [('KBS', 'OL'),\n  ('본관', 'NNG'),\n  ('3', 'NR'),\n  ('층', 'NNG'),\n  ('직원', 'NNG'),\n  ('1', 'NR'),\n  ('명', 'NNM'),\n  ('확', 'MAG'),\n  ('질', 'VV'),\n  ('ㄴ', 'ETD'),\n  ('필수', 'NNG'),\n  ('인력', 'NNG'),\n  ('제외', 'NNG'),\n  ('재택근무', 'NNG')],\n [('서울', 'NNG'),\n  ('LS', 'OL'),\n  ('용', 'NNG'),\n  ('산', 'NNG'),\n  ('타워', 'NNG'),\n  ('직장인', 'NNG'),\n  ('확', 'MAG'),\n  ('진', 'NNG'),\n  ('판정', 'NNG'),\n  ('임직원', 'NNG'),\n  ('재택근무', 'NNG')],\n [('코로나', 'NNG'),\n  ('시대', 'NNG'),\n  ('재택근무', 'NNG'),\n  ('개인', 'NNG'),\n  ('시간', 'NNG'),\n  ('늘', 'VV'),\n  ('었', 'EPT'),\n  ('지만', 'ECE'),\n  ('일', 'NNG'),\n  ('생활', 'NNG'),\n  ('분리', 'NNG'),\n  ('어렵', 'VV'),\n  ('어', 'ECS')]]\n\n\nkkma_morphs_list=[]\nfor title in matching:\n  tokenized1=kkma.morphs(title)\n  kkma_morphs_list.insert(len(kkma_morphs_list)+1,tokenized1)\n\nkkma_morphs_list[:5]\n\n[['코로나',\n  '19',\n  '우려',\n  '에',\n  '유엔',\n  '본부',\n  '직원',\n  '3000',\n  '명',\n  '3',\n  '주간',\n  '재택근무',\n  '돌입'],\n ['재택근무', '중', '아이', '도', '보육', '하', '라', '고요', '긴급', '보육', '청원', '갑론을박'],\n ['KBS',\n  '본관',\n  '3',\n  '층',\n  '직원',\n  '1',\n  '명',\n  '확',\n  '질',\n  'ㄴ',\n  '필수',\n  '인력',\n  '제외',\n  '재택근무'],\n ['서울', 'LS', '용', '산', '타워', '직장인', '확', '진', '판정', '임직원', '재택근무'],\n ['코로나', '시대', '재택근무', '개인', '시간', '늘', '었', '지만', '일', '생활', '분리', '어렵', '어']]\n\n\n딱히 차이가 없으므로 OKT로만 분석 진행.|\n\n불용어 제거  불용어 리스트: https://www.ranks.nl/stopwords/korean\n\nworksheet2 = gc.open('stopwords').sheet1\nrows2 = worksheet2.get_all_values()\nstopwords=pd.DataFrame.from_records(rows2)\nstopwords=pd.Series.tolist(stopwords[0])\nokt_morphs_list_stop=[]\nfor words in okt_morphs_list:\n  tokenized=[]\n  for word in words:\n    if not word in stopwords:\n      tokenized.insert(len(tokenized)+1,word)\n  okt_morphs_list_stop.insert(len(okt_morphs_list_stop)+1,tokenized)\n\nokt_morphs_list_stop[:5]\n\n[['코로나', '19', '우려', '유엔', '본부', '직원', '3000', '명', '3', '주간', '재택근무', '돌입'],\n ['재택근무', '중', '도', '보육', '라', '고요', '긴급', '보육', '청원', '갑론', '박'],\n ['KBS', '본관', '3', '층', '직원', '1', '명', '확진', '필수', '인력', '제외', '재택근무'],\n ['서울', 'LS', '용산', '타워', '직장인', '확진', '판정', '임', '직원', '재택근무'],\n ['코로나', '시대', '재택근무', '개인', '늘었지만', '생활', '분리', '어려워']]\n\n\nkkma_morphs_list_stop=[]\nfor words in kkma_morphs_list:\n  tokenized=[]\n  for word in words:\n    if not word in stopwords:\n      tokenized.insert(len(tokenized)+1,word)\n  kkma_morphs_list_stop.insert(len(kkma_morphs_list_stop)+1,tokenized)\n\nkkma_morphs_list_stop[:5]\n\n[['코로나', '19', '우려', '유엔', '본부', '직원', '3000', '명', '3', '주간', '재택근무', '돌입'],\n ['재택근무', '중', '도', '보육', '라', '고요', '긴급', '보육', '청원', '갑론을박'],\n ['KBS',\n  '본관',\n  '3',\n  '층',\n  '직원',\n  '1',\n  '명',\n  '확',\n  '질',\n  'ㄴ',\n  '필수',\n  '인력',\n  '제외',\n  '재택근무'],\n ['서울', 'LS', '용', '산', '타워', '직장인', '확', '진', '판정', '임직원', '재택근무'],\n ['코로나', '시대', '재택근무', '개인', '늘', '었', '생활', '분리', '어렵']]\n\n\n\nWord Cloud\n\nfrom wordcloud import WordCloud, STOPWORDS\nimport nltk as nltk\ntotal_okt= []\nfor element in okt_morphs_list_stop:\n  total_okt+=element\ntotal_okt_over2=pd.Series(total_okt)[pd.Series(total_okt).str.len()>=2]\ncount_okt=pd.DataFrame(total_okt).value_counts().rename_axis('unique_values').reset_index(name='counts')\ncount_okt.columns=[\"word\",\"counts\"]\n\ncount_okt2=count_okt >> mask(X.word.str.len() >=2)\ncount_okt2=count_okt2.reset_index().iloc[:,1:]\ncount_okt2.head(60)\n\n\n\n\n\n  \n    \n      \n      word\n      counts\n    \n  \n  \n    \n      0\n      재택근무\n      968\n    \n    \n      1\n      코로나\n      365\n    \n    \n      2\n      19\n      191\n    \n    \n      3\n      재택\n      163\n    \n    \n      4\n      직원\n      148\n    \n    \n      5\n      확산\n      86\n    \n    \n      6\n      근무\n      85\n    \n    \n      7\n      기업\n      83\n    \n    \n      8\n      확진\n      75\n    \n    \n      9\n      출근\n      57\n    \n    \n      10\n      확대\n      53\n    \n    \n      11\n      시행\n      46\n    \n    \n      12\n      진자\n      41\n    \n    \n      13\n      유연근무제\n      41\n    \n    \n      14\n      유연\n      41\n    \n    \n      15\n      직장\n      40\n    \n    \n      16\n      콜센터\n      40\n    \n    \n      17\n      공무원\n      38\n    \n    \n      18\n      연장\n      38\n    \n    \n      19\n      실시\n      34\n    \n    \n      20\n      거리\n      33\n    \n    \n      21\n      감염\n      33\n    \n    \n      22\n      전환\n      33\n    \n    \n      23\n      정부\n      32\n    \n    \n      24\n      포스코\n      32\n    \n    \n      25\n      두기\n      31\n    \n    \n      26\n      공공기관\n      31\n    \n    \n      27\n      권고\n      30\n    \n    \n      28\n      도입\n      30\n    \n    \n      29\n      폐쇄\n      30\n    \n    \n      30\n      직장인\n      29\n    \n    \n      31\n      단계\n      28\n    \n    \n      32\n      회식\n      27\n    \n    \n      33\n      회사\n      27\n    \n    \n      34\n      삼성\n      27\n    \n    \n      35\n      출퇴근\n      27\n    \n    \n      36\n      돌입\n      26\n    \n    \n      37\n      해야\n      26\n    \n    \n      38\n      LG\n      26\n    \n    \n      39\n      사업\n      25\n    \n    \n      40\n      국회\n      25\n    \n    \n      41\n      하는\n      25\n    \n    \n      42\n      서울\n      24\n    \n    \n      43\n      대응\n      23\n    \n    \n      44\n      금지\n      23\n    \n    \n      45\n      비상\n      23\n    \n    \n      46\n      분산\n      22\n    \n    \n      47\n      그룹\n      21\n    \n    \n      48\n      방역\n      20\n    \n    \n      49\n      지원\n      20\n    \n    \n      50\n      에도\n      20\n    \n    \n      51\n      활용\n      20\n    \n    \n      52\n      전원\n      19\n    \n    \n      53\n      강화\n      19\n    \n    \n      54\n      업무\n      19\n    \n    \n      55\n      임산부\n      19\n    \n    \n      56\n      본사\n      19\n    \n    \n      57\n      KT\n      19\n    \n    \n      58\n      신청\n      18\n    \n    \n      59\n      비대\n      18\n    \n  \n\n\n\n\ntotal_okt_over2 # 9467개\ntotal_okt_over3=[]\nfor element in total_okt_over2:\n  if element not in [\"재택근무\",\"유연근무제\",\"19\",\"재택\",\"해야\",\"진자\",\"비대\"]:\n    total_okt_over3.insert(0,element)\n\noktplot=nltk.Text(total_okt_over3,name=\"Test\")\nfig=plt.figure(figsize = (10,5))\nax = fig.add_subplot(1, 1, 1)\nplt.title(\"키워드 빈도별 그래프\",fontsize=20)\noktplot.plot(50)\nplt.show(ax)\n\n\n\n\n\ndata=oktplot.vocab().most_common(50)\nplt.figure(figsize = (10,5))\npath=\"/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf\"\nwc=WordCloud(font_path=path,relative_scaling=0.2,background_color=\"white\",width=1200, height=800).generate_from_frequencies(dict(data))\n\nplt.imshow(wc, interpolation='bilinear')\nplt.axis(\"off\")\nplt.tight_layout(pad=0)\nplt.show()\n\n\n\n\n\n분석의 문제점  제목기반 분석이라 의미있는 내용을 뽑아낼 수 없었음. 맥락이 제거된 빈도기반 분석으로 어떤 맥락에서 사용되었는지 알수가 없었음. 의미있는 인사이트를 찾을수는 없었으나 공무원, 공공기관, 포스코, LG 등 공공영역이나 대기업 위주로 유연근무제가 시행된다는 사실을 확인할 수 있었음. 콜센터와 같은 밀집된 곳에서 시행하는 업무의 경우, 유연근무제를 통해 감염을 확산을 저지하려는 시도가 있었지 않았나 추측해 보았음.\nTF-IDF\n\nfrom collections import defaultdict\n\nvectorizer = TfidfVectorizer()\ntdm = vectorizer.fit_transform(sentence_arr)\n\nword_count = pd.DataFrame({\n    '단어': vectorizer.get_feature_names(),\n    '빈도': tdm.sum(axis=0).flat\n})\n\n/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n  warnings.warn(msg, category=FutureWarning)\n\n\n\nword_count.sort_values(\"빈도\",ascending=False).reset_index(drop=True).head(30)\n\n\n\n\n\n  \n    \n      \n      단어\n      빈도\n    \n  \n  \n    \n      0\n      코로나19\n      248.149943\n    \n    \n      1\n      코로나\n      225.877234\n    \n    \n      2\n      확진\n      189.862035\n    \n    \n      3\n      재택근무\n      166.912066\n    \n    \n      4\n      확진자\n      141.297835\n    \n    \n      5\n      거리두기\n      134.722720\n    \n    \n      6\n      직원\n      116.244045\n    \n    \n      7\n      폐쇄\n      82.505198\n    \n    \n      8\n      수도권\n      79.311515\n    \n    \n      9\n      사회적\n      77.250924\n    \n    \n      10\n      방역\n      64.115543\n    \n    \n      11\n      콜센터\n      63.758580\n    \n    \n      12\n      감염\n      60.624583\n    \n    \n      13\n      발생\n      59.834789\n    \n    \n      14\n      3단계\n      54.067897\n    \n    \n      15\n      정부\n      53.735398\n    \n    \n      16\n      확산\n      51.893703\n    \n    \n      17\n      서울\n      51.615911\n    \n    \n      18\n      비상\n      48.585535\n    \n    \n      19\n      1명\n      47.710836\n    \n    \n      20\n      국회\n      45.337426\n    \n    \n      21\n      백신\n      44.223253\n    \n    \n      22\n      신규\n      43.779173\n    \n    \n      23\n      추가\n      43.749493\n    \n    \n      24\n      집단감염\n      43.617216\n    \n    \n      25\n      검사\n      40.211961\n    \n    \n      26\n      마스크\n      38.943360\n    \n    \n      27\n      음성\n      37.046574\n    \n    \n      28\n      격상\n      35.974340\n    \n    \n      29\n      재택\n      35.499295\n    \n  \n\n\n\n\n\n\nc. 동시 출현(Co-Occurrence) \n참고: https://bab2min.tistory.com/598\n# 2글자 이상의 단어로 한정 / 의미없는 숫자 제거\ncooccur=[]\nfor elements in okt_morphs_list_stop:\n  new_elements=[]\n  for i in elements:\n    if i not in [\"재택근무\",\"유연\"]:\n      text = re.sub(r'[a-zA-Z0-9]',' ',i).strip()\n      if len(text)>=2:\n        new_elements.append(text)\n  cooccur.append(new_elements)\ncount = {}   #동시출현 빈도가 저장될 dict\nfor line in cooccur:\n    words = line \n    for i, a in enumerate(words):\n        for b in words[i+1:]:\n            if a == b: continue   #같은 단어의 경우는 세지 않음\n            if a > b: \n              a, b = b, a   #A, B와 B, A가 다르게 세어지는것을 막기 위해 항상 a < b로 순서 고정\n            count[a, b] = count.get((a, b), 0) + 1   #실제로 센다\ndef dict_to_df(df):\n        data_df = pd.DataFrame({'keys': df.keys(), 'features': df.values()})\n        data_df['word1'] = data_df['keys'].apply(lambda x: x[0])\n        data_df['word2'] = data_df['keys'].apply(lambda x: x[1])\n        return data_df[['word1','word2','features']]\n\ncooccur_df.sort_values(\"features\",ascending=False).head(10)\n\n\n\n\n\n  \n    \n      \n      word1\n      word2\n      features\n    \n  \n  \n    \n      884\n      거리\n      두기\n      89\n    \n    \n      98\n      코로나\n      확산\n      62\n    \n    \n      24\n      직원\n      확진\n      52\n    \n    \n      65\n      근무\n      재택\n      46\n    \n    \n      94\n      근무\n      유연\n      39\n    \n    \n      770\n      직원\n      코로나\n      36\n    \n    \n      174\n      코로나\n      확진\n      34\n    \n    \n      585\n      근무\n      분산\n      32\n    \n    \n      1238\n      건물\n      폐쇄\n      30\n    \n    \n      745\n      감염\n      직원\n      27\n    \n  \n\n\n\n\n\ncooccur_df=dict_to_df(count)\ncooccur_df.features.describe()\n\ncount    9559.000000\nmean        2.456219\nstd         2.635716\nmin         1.000000\n25%         1.000000\n50%         2.000000\n75%         3.000000\nmax        89.000000\nName: features, dtype: float64\n\n\n\n\nd. 네트워크 그래프\nimport networkx as nx\nimport operator\nimport matplotlib.colors as mcolors\nimport matplotlib.cm as cm\ncooccur_df_major=cooccur_df >> mask(X.features>=13)\n\n# generate sample graph\nplt.figure(figsize = (9,9),facecolor='k')\nplt.rcParams['font.sans-serif'] = ['NanumBarunGothic'] \ng = nx.from_pandas_edgelist(cooccur_df_major, 'word1', 'word2')\n\n\n# centrality\ndeg_centrality = nx.degree_centrality(g)\ncentrality = np.fromiter(deg_centrality.values(), float)\n# plot\npos = nx.kamada_kawai_layout(g,scale=3)\nnx.draw(g, pos, node_color=centrality,with_labels=True)\nplt.title(\"유연근무제 기사제목 분석\",size=15)\nplt.cool()\n\n\nsizes = centrality / np.max(centrality) * 200\nnormalize = mcolors.Normalize(vmin=centrality.min(), vmax=centrality.max())\ncolormap = cm.cool\n\nscalarmappaple = cm.ScalarMappable(norm=normalize, cmap=colormap)\nscalarmappaple.set_array(centrality)\n\nplt.colorbar(scalarmappaple,shrink=0.3)\n\nplt.show()\n\n\n\n\n\n\n\ndef dict_to_df_1(df):\n        data_df = pd.DataFrame({'keys': df.keys(), 'features': df.values()})\n        data_df['word1'] = data_df['keys']\n        return data_df[['word1','features']]\n\ndict_to_df_1(deg_centrality).sort_values(\"features\",ascending=False)[1:20]\n\n\n\n\n\n  \n    \n      \n      word1\n      features\n    \n  \n  \n    \n      5\n      코로나\n      0.101266\n    \n    \n      10\n      기업\n      0.088608\n    \n    \n      34\n      본사\n      0.075949\n    \n    \n      44\n      경력\n      0.075949\n    \n    \n      6\n      근무\n      0.075949\n    \n    \n      1\n      확진\n      0.050633\n    \n    \n      48\n      금지\n      0.050633\n    \n    \n      57\n      단계\n      0.037975\n    \n    \n      7\n      재택\n      0.037975\n    \n    \n      16\n      시행\n      0.037975\n    \n    \n      36\n      거리\n      0.037975\n    \n    \n      18\n      아기\n      0.037975\n    \n    \n      73\n      국회\n      0.037975\n    \n    \n      33\n      감염\n      0.037975\n    \n    \n      55\n      구로\n      0.025316\n    \n    \n      26\n      전환\n      0.025316\n    \n    \n      66\n      구글\n      0.025316\n    \n    \n      42\n      시차\n      0.025316\n    \n    \n      41\n      폐쇄\n      0.025316"
  },
  {
    "objectID": "data_analytics/FWA.html#분석-실패-요인-및-느낀점",
    "href": "data_analytics/FWA.html#분석-실패-요인-및-느낀점",
    "title": "Sangwon Ju's Personal Page",
    "section": "분석 실패 요인 및 느낀점",
    "text": "분석 실패 요인 및 느낀점\n\n(진행하더라도 유의미한 분석결과가 나오지 않을 것으로 예상되어) 토픽 모델링은 진행하지 않았음\n빈도기반 텍스트 마이닝 분석은 그러한 단어가 어떤 맥락에서 형성되었는지 알 수 없고 어떠한 의미를 가지는지를 이해하는데 있어서 어려움이 있다.\n신문 기사 제목들이 서로 응집성을 가지지 않고 산발적으로 나타나는 경우가 다수였기 때문에 적절한 분석이 진행되지 못한 것으로 보임.\n이후 보다 의미있는 분석을 위해서는 신문 기사 내용들을 활용을 하거나, 다른 텍스트 원천을 활용하는 것이 보다 효과적인 분석에 있어서 필요할 것으로 보임."
  },
  {
    "objectID": "data_analytics/FWA.html#경제활동인구조사-20152021",
    "href": "data_analytics/FWA.html#경제활동인구조사-20152021",
    "title": "Sangwon Ju's Personal Page",
    "section": "1. 경제활동인구조사 (2015~2021) ",
    "text": "1. 경제활동인구조사 (2015~2021) \n\n\n경제활동인구조사: 통계종류지정통계/조사통계 -계속여부: 계속통계 -작성목적: 국민의 경제활동(취업, 실업, 노동력 등) 특성을 조사함으로써 거시경제 -분석과 인력자원의 개발정책 수립에 필요한 기초 자료를 제공 -작성주기:월  -작성체계: 조사원(면접조사)→지방통계청(사무소)→통계청  -공표범위: 시도 -공표주기: 월 -특이점: 2017년 9월 조사부터 복수응답가능\n\n\nfrom mizani.breaks import date_breaks, minor_breaks\nfrom mizani.formatters import date_format\nimport matplotlib.font_manager as fm\npath = '/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf' \nfont = fm.FontProperties(fname=path, size=13)\n\na. 유연근무제 활용여부\nyes=pd.read_json(\"https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/101/DT_1DE7099S/2/1/20211204112805_1&prdSe=M&startPrdDe=201508&endPrdDe=202108\")\nno=pd.read_json(\"https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/101/DT_1DE7099S/2/1/20211204112931_1&prdSe=M&startPrdDe=201508&endPrdDe=202108\")\npj_usege=yes >> bind_rows(no, join='outer') >> select(X.PRD_DE,X.C1_NM,X.DT)\npj_usege=pj_usege.reset_index(drop=True)\n\nplt.figure()\npn.options.figure_size = (8,6)\n(ggplot(pj_usege, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\")) \n    + scale_y_continuous(limits=(0,22001),breaks= np.arange(0,22001,2000))\n    + geom_line() \n    + geom_point(pj_usege,aes(x='factor(PRD_DE)',y=\"DT\",group=\"C1_NM\",color=\"C1_NM\"))\n    + theme_classic() \n    + ylab(\"인원 (천 명)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"참여 여부\")\n    + scale_color_manual(values=(\"blue\",\"red\"))\n    + geom_text(aes(label=\"DT\"),nudge_x=0, nudge_y=1000,size=13,color=\"black\")\n    + ggtitle('임금 근로자 중 유연근무제 참여 인원 수\\n(자료 출처: 통계청 경제활동인구조사)'))\n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762697391465)>\n\n\n\n\nb. 성별 유연근무제 활용현황\nlink_list=[]\nlink=\"https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/101/DT_1DE7103S/2/1/20211204135633&prdSe=M&startPrdDe=\"\nfor i in range(201508,202109,100):\n  link_list.append(link+str(i))\npj_gender=pd.read_json(link_list[0])\nfor i in link_list[1:]:\n  pj_gender = pj_gender >> bind_rows(pd.read_json(i), join='outer')\npj_gender=pj_gender.reset_index(drop=True)\npj_gender2=pj_gender >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(~X.C1_NM==\"계\") >>  mask(~X.C2_NM==\"계\")\npj_gender2=pj_gender2.reset_index(drop=True)\npj_total=pj_gender >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT)  >> mask(~X.C1_NM==\"계\") >> mask(X.C2_NM==\"계\")\n\npj_total\n\n\n\n\n\n  \n    \n      \n      PRD_DE\n      C1_NM\n      C2_NM\n      DT\n    \n  \n  \n    \n      3\n      201508\n      남자\n      계\n      11006.6\n    \n    \n      6\n      201508\n      여자\n      계\n      8467.9\n    \n    \n      12\n      201608\n      남자\n      계\n      11085.6\n    \n    \n      15\n      201608\n      여자\n      계\n      8657.6\n    \n    \n      21\n      201708\n      남자\n      계\n      11188.2\n    \n    \n      24\n      201708\n      여자\n      계\n      8817.9\n    \n    \n      30\n      201808\n      남자\n      계\n      11171.3\n    \n    \n      33\n      201808\n      여자\n      계\n      8873.7\n    \n    \n      39\n      201908\n      남자\n      계\n      11395.7\n    \n    \n      42\n      201908\n      여자\n      계\n      9163.3\n    \n    \n      48\n      202008\n      남자\n      계\n      11361.3\n    \n    \n      51\n      202008\n      여자\n      계\n      9084.6\n    \n    \n      57\n      202108\n      남자\n      계\n      11516.6\n    \n    \n      60\n      202108\n      여자\n      계\n      9475.9\n    \n  \n\n\n\n\n\npj_total2=pj_total >> select(~X.C2_NM) >> spread(X.PRD_DE, X.DT) >> select(~X.C1_NM)\npj_total2.index=[\"남자\",\"여자\"]\npj_total2.transpose() >> mutate(ratio=np.round(X.남자/(X.남자+X.여자),2),배수 =np.round(X.남자/(X.여자),2) )\n# 총 경제활동 인원 대비 남성 비율 / 점차 줄어드는 중 \n\n\n\n\n\n  \n    \n      \n      남자\n      여자\n      ratio\n      배수\n    \n  \n  \n    \n      201508\n      11006.6\n      8467.9\n      0.57\n      1.30\n    \n    \n      201608\n      11085.6\n      8657.6\n      0.56\n      1.28\n    \n    \n      201708\n      11188.2\n      8817.9\n      0.56\n      1.27\n    \n    \n      201808\n      11171.3\n      8873.7\n      0.56\n      1.26\n    \n    \n      201908\n      11395.7\n      9163.3\n      0.55\n      1.24\n    \n    \n      202008\n      11361.3\n      9084.6\n      0.56\n      1.25\n    \n    \n      202108\n      11516.6\n      9475.9\n      0.55\n      1.22\n    \n  \n\n\n\n\n\nplt.figure()\npn.options.figure_size = (8,6)\n(ggplot(pj_total, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\")) \n    + scale_y_continuous(limits=(6000,15001),breaks= np.arange(0,22001,2000))\n    + geom_line() \n    + geom_point(pj_total,aes(x='factor(PRD_DE)',y=\"DT\",group=\"C1_NM\",color=\"C1_NM\"))\n    + theme_classic() \n    + ylab(\"인원 (천 명)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"성별\")\n    + scale_color_manual(values=(\"blue\",\"red\"))\n    + geom_text(aes(label=\"DT\"),nudge_x=0, nudge_y=500,size=13,color=\"black\")\n    + ggtitle('조사대상 성별 임금 근로자 수\\n(자료 출처: 통계청 경제활동인구조사)'))\n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762697419985)>\n\n\n\nplt.figure()\npn.options.figure_size = (14,6)\n(ggplot(pj_gender2, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C2_NM\",color=\"C2_NM\")) \n    + facet_wrap('C1_NM')\n    + scale_y_continuous(limits=(0,14001),breaks= np.arange(0,22001,2000))\n    + geom_line() \n    + geom_point(pj_gender2, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C2_NM\",color=\"C2_NM\"))\n    + theme_classic() \n    + ylab(\"인원 (천 명)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"참여 여부\")\n    + scale_color_manual(values=(\"blue\",\"red\"))\n    + geom_text(aes(label=\"DT\"),nudge_x=0, nudge_y=1000,size=13,color=\"black\")\n    + ggtitle('임금 근로자 중 성별 유연근무제 참여 인원 수\\n(자료 출처: 통계청 경제활동인구조사)'))\n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762697654101)>\n\n\n# 성별 경제활동 참여 인구 대비 유연근무제 참여자 비율 \nratio_total=(pj_gender >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"계\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,3)*100,ratio_notuse=np.round(X.notused/X.계,3)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_male=(pj_gender >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"남자\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,3)*100,ratio_notuse=np.round(X.notused/X.계,3)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_female=(pj_gender >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"여자\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,3)*100,ratio_notuse=np.round(X.notused/X.계,3)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio=pd.concat([ratio_total,ratio_male,ratio_female], keys=[\"전체\",\"남성\",\"여성\"]).reset_index() >> select(~X.level_1) >> rename(성별=\"level_0\") \n\nplt.figure()\npn.options.figure_size = (10,6)\n(ggplot(ratio, aes(x='factor(PRD_DE)', y=\"ratio_use\",group=\"성별\",color=\"성별\")) \n    + scale_y_continuous(limits=(0,20),breaks= np.arange(0,101,5))\n    + geom_line() \n    + geom_point(ratio, aes(x='factor(PRD_DE)', y=\"ratio_use\",group=\"성별\",color=\"성별\"))\n    + theme_classic() \n    + ylab(\"비율 (%)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"성별\")\n    + scale_color_manual(values=(\"#619CFF\",\"#F8766D\",\"gray\"))\n    + geom_text(aes(label=\"ratio_use\"),nudge_x=0, nudge_y=+0.5,size=10,color=\"black\",format_string='{}%')\n    + ggtitle('성별 총 임금근로자 대비 유연근무제 참여 인원 수\\n(자료 출처: 통계청 경제활동인구조사)'))    \n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762696383501)>\n\n\npj_age_2021=pj_age >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.PRD_DE==202108) >> mask(~X.C1_NM==\"계\") >>mask(~X.C2_NM==\"계\")\n# 2021년 기준 유연근무제 참여집단과 비참여집단 비교\npj_2021=pj_gender >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.PRD_DE==202108) \n\nplt.figure()\npn.options.figure_size = (10,6)\ndodge_text = position_dodge(width=0.9)\n(ggplot(pj_2021,aes(x='C1_NM',y=\"DT\",fill=\"C1_NM\",group=\"C1_NM\")) \n    + scale_y_continuous(limits=(0,22000),breaks= np.arange(0,22001,2000))\n    + geom_bar(stat='identity',position = position_dodge(width = 0.9)) \n    + theme_classic() \n    + ylab(\"인원 (천 명)\")\n    + xlab(\"유형 별\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(fill=\"성별\")\n    + facet_wrap('C2_NM')\n    + scale_fill_manual(values=(\"gray\",\"#619CFF\",\"#F8766D\"))\n    + geom_text(aes(label='DT'), position=dodge_text,size=10, va='bottom', format_string='{}')\n    + ggtitle('임금 근로자 중 성별 유연근무제 참여 인원 수 (2021)\\n(자료 출처: 통계청 경제활동인구조사)'))\n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762697263013)>\n\n\n\n\nc. 연령 별 유연근무제 사용 유형\nlink_list=[]\nlink=\"https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/101/DT_1DE7105S/2/1/20211204160618&prdSe=M&startPrdDe=\"\nfor i in range(201508,202109,100):\n  link_list.append(link+str(i))\npj_age=pd.read_json(link_list[0])\nfor i in link_list[1:]:\n  pj_age = pj_age >> bind_rows(pd.read_json(i), join='outer')\nratio_age_total=(pj_age >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"계\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,4)*100,ratio_notuse=np.round(X.notused/X.계,4)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_age_15=(pj_age >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"15 - 29세\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,4)*100,ratio_notuse=np.round(X.notused/X.계,4)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_age_30=(pj_age >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"30 - 39세\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,4)*100,ratio_notuse=np.round(X.notused/X.계,4)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_age_40=(pj_age >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"40 - 49세\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,4)*100,ratio_notuse=np.round(X.notused/X.계,4)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_age_50=(pj_age >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"50 - 59세\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,4)*100,ratio_notuse=np.round(X.notused/X.계,4)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_age_60=(pj_age >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"60세이상\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,4)*100,ratio_notuse=np.round(X.notused/X.계,4)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_age=pd.concat([ratio_age_total,ratio_age_15,ratio_age_30,ratio_age_40,ratio_age_50,ratio_age_60], keys=[\"전체\",\"15 - 29세\",\"30 - 39세\",\"40 - 49세\",\"50 - 59세\",\"60세이상\"]).reset_index() >> select(~X.level_1) >> rename(연령별=\"level_0\") \nratio_age[\"ratio_use\"]=np.round(ratio_age[\"ratio_use\"].astype(np.float64),2)\n\nplt.figure()\npn.options.figure_size = (10,6)\n(ggplot(ratio_age, aes(x='factor(PRD_DE)', y=\"ratio_use\",group=\"연령별\",color=\"연령별\")) \n    + scale_y_continuous(limits=(0,25),breaks= np.arange(0,101,5))\n    + geom_line() \n    + geom_point(ratio_age, aes(x='factor(PRD_DE)', y=\"ratio_use\",group=\"연령별\",color=\"연령별\"))\n    + theme_classic() \n    + ylab(\"비율 (%)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"연령 별\")\n    + geom_text(aes(label=\"ratio_use\"),nudge_x=0, nudge_y=+0.8,size=8,color=\"black\",format_string='{}%')\n    + ggtitle('연령별 총 임금근로자 대비 유연근무제 참여 인원 비율\\n(자료 출처: 통계청 경제활동인구조사)'))   \n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8731672718093)>\n\n\npj_age_2021=pj_age >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.PRD_DE==202108) >> mask(~X.C1_NM==\"계\") >>mask(~X.C2_NM==\"계\")\n\nplt.figure()\npn.options.figure_size = (12,6)\ndodge_text = position_dodge(width=0.9)\n(ggplot(pj_age_2021,aes(x='C1_NM',y=\"DT\",fill=\"C1_NM\",group=\"C1_NM\")) \n    + scale_y_continuous(limits=(0,6000),breaks= np.arange(0,22001,2000))\n    + geom_bar(stat='identity',position = position_dodge(width = 0.9)) \n    + theme_classic() \n    + ylab(\"인원 (천 명)\")\n    + xlab(\"유형 별\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(fill=\"연령별\")\n    + facet_wrap('C2_NM')\n    + geom_text(aes(label='DT'), position=dodge_text,size=10, va='bottom', format_string='{}') \n    + scale_fill_manual(values=(\"#4a4e4d\",\"#0e9aa7\" ,\"orange\",\"#f6cd61\",\"#f9caa7\"))\n    + ggtitle('임금 근로자 중 연령별 유연근무제 참여 인원 수 (2021)\\n(자료 출처: 통계청 경제활동인구조사)'))\n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762696667145)>\n\n\n\n\nd. 혼인상태별 유연근무제 활용현황\nlink_marriage_list=[]\nlink=\"https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/101/DT_1DE7104S/2/1/20211204164055&prdSe=M&startPrdDe=\"\nfor i in range(201508,202109,100):\n  link_marriage_list.append(link+str(i))\npj_marriage=pd.read_json(link_marriage_list[0])\nfor i in link_marriage_list[1:]:\n  pj_marriage = pj_marriage >> bind_rows(pd.read_json(i), join='outer')\nratio_marriage_total=(pj_marriage >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"계\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,4)*100,ratio_notuse=np.round(X.notused/X.계,4)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_marriage_no=(pj_marriage >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"미혼\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,4)*100,ratio_notuse=np.round(X.notused/X.계,4)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_marriage_yes=(pj_marriage >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.C1_NM==\"기혼\") >> select(~X.C1_NM) >> spread(X.C2_NM,X.DT) >> rename(used=\"활용하고 있음\",notused=\"활용하지 않음\")\n  >> mutate(ratio_use=np.round(X.used/X.계,4)*100,ratio_notuse=np.round(X.notused/X.계,4)*100) >> select(X.PRD_DE,X.ratio_use,X.ratio_notuse)) \nratio_marriage=pd.concat([ratio_marriage_total,ratio_marriage_yes,ratio_marriage_no], keys=[\"전체\",\"기혼\",\"미혼\"]).reset_index() >> select(~X.level_1) >> rename(결혼=\"level_0\") \nratio_marriage[\"ratio_use\"]=np.round(ratio_marriage[\"ratio_use\"].astype(np.float64),2)\n\nplt.figure()\npn.options.figure_size = (10,6)\n(ggplot(ratio_marriage, aes(x='factor(PRD_DE)', y=\"ratio_use\",group=\"결혼\",color=\"결혼\")) \n    + scale_y_continuous(limits=(0,18),breaks= np.arange(0,101,3))\n    + geom_line() \n    + geom_point(ratio_marriage, aes(x='factor(PRD_DE)', y=\"ratio_use\",group=\"결혼\",color=\"결혼\"))\n    + theme_classic() \n    + ylab(\"비율 (%)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"혼인 여부\")\n    + scale_color_manual(values=(\"#619CFF\",\"#F8766D\",\"gray\"))\n    + annotate(\"text\", x=6.5, y=17.91, label=\"17.91%\", size=12,color=\"black\")\n    + annotate(\"text\", x=6.5, y=16.93, label=\"16.93%\", size=12,color=\"black\")\n    + annotate(\"text\", x=6.5, y=16, label=\"16.35%\", size=12,color=\"black\")\n    + ggtitle('혼인 유형 별 임금근로자 대비 유연근무제 참여 인원 수\\n(자료 출처: 통계청 경제활동인구조사)'))   \n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762696204773)>\n\n\npj_marriage_2021=pj_marriage >> select(X.PRD_DE,X.C1_NM,X.C2_NM,X.DT) >> mask(X.PRD_DE==202108) >> mask(~X.C1_NM==\"계\")\n\nplt.figure()\npn.options.figure_size = (10,6)\ndodge_text = position_dodge(width=0.9)\n(ggplot(pj_marriage_2021,aes(x='C1_NM',y=\"DT\",fill=\"C1_NM\",group=\"C1_NM\")) \n    + scale_y_continuous(limits=(0,15000),breaks= np.arange(0,22001,2000))\n    + geom_bar(stat='identity',position = position_dodge(width = 0.9)) \n    + theme_classic() \n    + ylab(\"인원 (천 명)\")\n    + xlab(\"유형 별\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(fill=\"연령별\")\n    + facet_wrap('C2_NM')\n    + geom_text(aes(label='DT'), position=dodge_text,size=10, va='bottom', format_string='{}')\n    + scale_fill_manual(values=(\"#619CFF\",\"#F8766D\"))\n    + ggtitle('임금 근로자 중 성별 유연근무제 참여 인원 수 (2021)\\n(자료 출처: 통계청 경제활동인구조사)'))\n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762696952981)>\n\n\n\n\ne. 유연근무제 활용형태(복수응답)\nlink_type_list=[]\nlink=\"https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/101/DT_1DE7100S/2/1/20211204170759&prdSe=M&startPrdDe=\"\nfor i in range(201508,202109,100):\n  link_type_list.append(link+str(i))\npj_type=pd.read_json(link_type_list[0])\nfor i in link_type_list[1:]:\n  pj_type = pj_type >> bind_rows(pd.read_json(i), join='outer')\nratio_type=pj_type >> mask(X.ITM_NM_ENG==\"ratio\") >> select(X.PRD_DE,X.C1_NM,X.DT)\nratio_type['C1_NM']=pd.Categorical(ratio_type['C1_NM'], ordered=True,categories=['근로시간단축근무제','시차출퇴근제','선택적 근무시간제','재택 및 원격근무제','탄력적 근무제','기타유형(재량근무 등)'])\n\nplt.figure()\npn.options.figure_size = (10,6)\n(ggplot(ratio_type,aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\")) \n    + geom_line() \n    + scale_y_continuous(limits=(-1,50),breaks= np.arange(0,101,10))\n    + geom_point(ratio_type, aes(x='factor(PRD_DE)', y=\"DT\",color=\"C1_NM\"))\n    + theme_classic() \n    + ylab(\"비율 (%)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"유연근무 유형\")\n    + scale_color_manual(values=(\"#4a4e4d\",\"#0e9aa7\" ,\"#f9caa7\",\"red\",\"#f6cd61\",\"green\"))\n    + geom_text(aes(label=\"DT\"),nudge_x=0, nudge_y=+1,size=8,color=\"black\",format_string='{}%')\n    + geom_vline(xintercept=5+(4/12),linetype=\"dashed\")\n    + ggtitle('유연근무제 참여 유형별 비율\\n(자료 출처: 통계청 경제활동인구조사)'))   \n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762696647101)>\n\n\n\n\n유연근무제의 사용 현황 정리 (통계청 경제활동인구조사)\n\nCOVID-19과 상관 없이 인식 개선으로 유연근무제 사용 인원 수는 지속적으로 증가하여 왔음.\n예상했던 것 과는 달리 남성들이 유연근무제를 사용하는 비율이 여성이 사용하는 비율보다 높았음. (2021년 8월 기준 남성이 18.2%, 여성이 15.2%)\n유연근무제를 가장 많이 사용하는 계층은 30대 였으며 그 다음으로 40대 20대 50대 순이다. 60세 이상 집단의 경우 거의 사용하지 않았는데 50대 이상 집단과 비교하였을 때 큰 차이가 나타나고 있는 것을 확인할 수 있다.\nCOVID-19 이전까지 기혼집단이 유연근무제를 많이 사용하였으나, 이후로는 미혼집단이 오히려 더 많이 사용하고 있는 것으로 보인다.(2020년 8월 기준 미혼집단이 17.91%, 기혼집단이 16.35%)\nCOVID-19까지는 재택 및 원격 근무제(공간적 유연) 선택 비율이 가장 낮고 시차출퇴근 선택자들의 비율이 가장 높았으나, 2021년 기준 재택 및 원격 근무제 선택 비중이 가장 높은 것으로 확인된다. \n유연근무제가 원래 일 가정 갈등 정책의 하위 정책으로 분류되어진 상황에서 여성들에 비해 남성들이 더 많이 사용하고 있다는 점, 미혼 집단의 사용율이 오히려 높다는 점에서 초기의 정책 목표를 달성하였다고 보기 어려운 부분이 있다."
  },
  {
    "objectID": "data_analytics/FWA.html#공직생활실태조사-20172020",
    "href": "data_analytics/FWA.html#공직생활실태조사-20172020",
    "title": "Sangwon Ju's Personal Page",
    "section": "2. 공직생활실태조사 (2017~2020)",
    "text": "2. 공직생활실태조사 (2017~2020)\n\n지금부터의 분석은 2017~2020년 한국행정연구원이 (주)리서치앤리서치에 의뢰하여 실시한 5개년도의 ‘공직생활 실태조사’ 자료를 활용하여 분석한 것이다.  - 정부의 인적자원관리 현황과 공무원의 인식을 파악하기 위한 목적으로 조사시점기준 46개 중앙행정기관 및 17개 광역자치단체 소속 일반직 공무원을 대상으로 진행  층화 집락 추출 방식을 활용하여 부차모집단별 추출된 각 표본 과/팀에서 10명내외를 계통추출  - 표본의 크기는 각년도 말일 기준으로 모집단을 모비율 추정의 목표 오차(95% 신뢰수준 오차의 한계)인 2%∼3%를 만족하도록 구성  - 확률표본 수집 후 E-mail 웹 조사를 사용하였음.\n\n# 반복작업의 어려움으로 파이썬용 함수를 만들었음.\nlink=\"https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/417/DT_417002N_011/2/1/20211204203850&prdSe=Y&startPrdDe=\"\n\ndef kosis(link,a,b):\n  link_list=[]\n  for i in range(int(a),int(b)+1,1):\n    new_link=link+str(i)\n    link_list.append(new_link)\n  \n  df= pd.read_json(link_list[0])\n  if len(link_list)>=2:\n    for i in link_list[1:]:\n      df = df >> bind_rows(pd.read_json(i), join='outer')\n  result=df.reset_index(drop=True)    \n  return result  \npj_gov=kosis(link,2017,2020)\n\na. 성별 정부조직 유연근무제 사용 비율\npj_gov=pj_gov>>mask(X.C2_NM==\"있다\")\npj_gov_gender=pj_gov >> mask((X.C1_NM==\"남성\")|(X.C1_NM==\"여성\")|(X.C1_NM==\"전체\"))\n\nplt.figure()\npn.options.figure_size = (10,6)\n(ggplot(pj_gov_gender, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\")) \n    + scale_y_continuous(limits=(50,80),breaks= np.arange(0,101,5))\n    + geom_line() \n    + geom_point(pj_gov_gender, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\"))\n    + theme_classic() \n    + ylab(\"비율 (%)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"성별\")\n    + scale_color_manual(values=(\"#619CFF\",\"#F8766D\",\"gray\"))\n    + geom_text(aes(label=\"DT\"),nudge_x=.25, nudge_y=+.5,size=12,color=\"black\",format_string='{}%')\n    + ggtitle('성별 정부조직 공무원 유연근무제 참여 비율\\n(자료 출처: 한국행정연구원 공직생활실태조사)'))   \n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762697292525)>\n\n\n\n\nb. 연령 별 정부조직 유연근무제 사용 비율\npj_gov_age=pj_gov >> mask((X.C1_NM==\"20대\")|(X.C1_NM==\"30대\")|(X.C1_NM==\"40대\")|(X.C1_NM==\"50대 이상\")|(X.C1_NM==\"전체\"))\n\nplt.figure()\npn.options.figure_size = (10,6)\n(ggplot(pj_gov_age, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\")) \n    + scale_y_continuous(limits=(42,85),breaks= np.arange(0,101,5))\n    + geom_line() \n    + geom_point(pj_gov_age, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\"))\n    + theme_classic() \n    + ylab(\"비율 (%)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"연령대별\")\n    + geom_text(aes(label=\"DT\"),nudge_x=.25, nudge_y=+.5,size=12,color=\"black\",format_string='{}%')\n    + ggtitle('연령대별 정부조직 공무원 유연근무제 참여 비율\\n(자료 출처: 한국행정연구원 공직생활실태조사)'))   \n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762698177993)>\n\n\n\n\nc. 직급 별 정부조직 유연근무제 사용 비율\npj_gov_rank=pj_gov >> mask((X.C1_NM==\"1~4급\")|(X.C1_NM==\"5급\")|(X.C1_NM==\"6~7급\")|(X.C1_NM==\"8~9급\"))\n\nplt.figure()\npn.options.figure_size = (10,6)\n(ggplot(pj_gov_rank, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\")) \n    + scale_y_continuous(limits=(42,85),breaks= np.arange(0,101,5))\n    + geom_line() \n    + geom_point(pj_gov_rank, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\"))\n    + theme_classic() \n    + ylab(\"비율 (%)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"직급별\")\n    + geom_text(aes(label=\"DT\"),nudge_x=.25, nudge_y=+.5,size=12,color=\"black\",format_string='{}%')\n    + ggtitle('직급별 정부조직 공무원 유연근무제 참여 비율\\n(자료 출처: 한국행정연구원 공직생활실태조사)'))   \n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762697124449)>\n\n\n\n\nd. 소속조직 수준 별 정부조직 유연근무제 사용 비율\npj_gov_level=pj_gov >> mask((X.C1_NM==\"광역자치단체\")|(X.C1_NM==\"중앙행정기관\"))\n\nplt.figure()\npn.options.figure_size = (10,6)\n(ggplot(pj_gov_level, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\")) \n    + scale_y_continuous(limits=(42,85),breaks= np.arange(0,101,5))\n    + geom_line() \n    + geom_point(pj_gov_level, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\"))\n    + theme_classic() \n    + ylab(\"비율 (%)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"소속조직 수준별\")\n    + geom_text(aes(label=\"DT\"),nudge_x=.25, nudge_y=+.5,size=12,color=\"black\",format_string='{}%')\n    + ggtitle('소속조직 수준별 정부조직 공무원 유연근무제 참여 비율\\n(자료 출처: 한국행정연구원 공직생활실태조사)'))   \n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762696037269)>\n\n\n\n\ne. 재직기간별 유연근무제 사용 비율\npj_gov_length=pj_gov >> mask((X.C1_NM==\"5년 이하\")|(X.C1_NM==\"6~10년\")|(X.C1_NM==\"11~15년\")|(X.C1_NM==\"16~20년\")|(X.C1_NM==\"21~25년\")|(X.C1_NM==\"26년 이상\")  )\npj_gov_length[\"C1_NM\"]=pd.Categorical(pj_gov_length[\"C1_NM\"], ordered=True,categories=[\"5년 이하\",\"6~10년\",\"11~15년\",\"16~20년\",\"21~25년\",\"26년 이상\"])\n\nplt.figure()\npn.options.figure_size = (10,6)\n(ggplot(pj_gov_length, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\")) \n    + scale_y_continuous(limits=(42,80),breaks= np.arange(0,101,5))\n    + geom_line() \n    + geom_point(pj_gov_length, aes(x='factor(PRD_DE)', y=\"DT\",group=\"C1_NM\",color=\"C1_NM\"))\n    + theme_classic() \n    + ylab(\"비율 (%)\")\n    + xlab(\"시점\") \n    + theme(text=element_text(fontproperties=font))\n    + labs(colour=\"재직기간별\")\n    + geom_text(aes(label=\"DT\"),nudge_x=.25, nudge_y=+.5,size=12,color=\"black\",format_string='{}%')\n    + ggtitle('재직기간별 정부조직 공무원 유연근무제 참여 비율\\n(자료 출처: 한국행정연구원 공직생활실태조사)'))   \n\n/usr/local/lib/python3.7/dist-packages/plotnine/utils.py:1246: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n  if pdtypes.is_categorical(arr):\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\n\n\n<ggplot: (8762696138673)>\n\n\n\n\n정부조직 유연근무제의 특징 정리 (한국행정연구원 공직생활실태조사)\n\nCOVID-19이전까지 유연근무제의 사용이 꾸준히 감소하던 추세였다가, 발생 이후 급증함.\n전체기간에서 민간 및 공공기관 인구를 모두 포함해서 조사한 경제활동인구조사와 비교 시 정부조직 공무원들은 유연근무제를 더욱 약 2배 정도 많이 사용하고 있는 것으로 확인되었음.\n\n정부조직에서는 경제활동인구조사와는 달리 남성들이 유연근무제를 사용하는 비율이 여성이 사용하는 비율보다 낮았음. (2020년 기준 남성이 72.4%, 여성이 75.5%) 20대의 경우 정부조직에서 COVID-19 이전까지 유연근무제를 가장 적게 사용하던 연령대였으나, COVID-19이후 가장 많이 사용하는 연령대로 변화하였음. (2019년 47.5% 2020년 79.6%) 낮은 연령대의 공무원들이 유연근무제를 사용하지 못했던 원인에 대해서 깊이 있게 고찰해볼 필요가 존재함.(눈치가 보여서, 사용 못하였음… or 2015년 자체부서평가의 시행으로 잠시 올라갔다가 다시 떨어지는 추세)\n이러한 경향성은 직급별, 재직기간별 분석 자료를 통해 분석하였을 때 더욱 뚜렷하게 드러나는데, COVID-19이전까지는 하더라도 유연근무제가 재직기간이 길수록 직급이 높을 수록 훨씬 더 많이 사용하는 경향성이 있는 것으로 보였는데, 2020년 데이터에서는 직급 별 유연근무제 사용 비율이 큰 차이가 없었고, 재직기간이 5년 미만인 공무원들이 79%로 다른 세대에 비해서 월등하게 높은 유연근무제 사용율을 보이고 있는 것을 확인할 수 있었음.\n공공영역 유연근무제의 확산을 위해서는 유연근무제를 사용할 수 있는 조직적, 관리자적 지원이 필수적(Choi, 2017)이라는 이전 연구결과를 통해 미루어 보았을 때 유연근무제의 확산을 위해서 이후 소위 조직 내 입지가 적은 구성원들이 자유롭게 사용할 수 있는 분위기를 형성하기 위한 정책적 노력이 필요할 것으로 보인다."
  },
  {
    "objectID": "data_analytics/employees.html",
    "href": "data_analytics/employees.html",
    "title": "Analysis 1: Number of local government employees",
    "section": "",
    "text": "Data retrieved from KOSIS (Korean Statistical Information Service).\nAgenda1: examining trend of the total local government employee number to find out the impact of “The Transition of Fire Officals to National Position”.\nAgenda2: visualize the number of employees to separate the impact of transition from original fluctuation in number.\n\n\n\n\npacman::p_load(\"jsonlite\",\n               \"tidyverse\",\n               \"forecast\",\n               \"ggfortify\",\n               \"forecast\",\n               \"httr\",\n               \"sleekts\",\n               \"lubridate\",\n               \"stats\",\n               \"smooth\",\n               \"ghibli\",\n               \"plyr\",\n               \"scales\",\n               \"formattable\",\n               \"knitr\",\n               \"showtext\",\n               \"kableExtra\",\n               \"IRdisplay\",\n               \"glue\",\n               \"echarts4r\",\n               \"plotly\")\n\n\n\n\n\nfont_add_google(name=\"Lato\")\nshowtext_auto()"
  },
  {
    "objectID": "data_analytics/employees.html#importing-data",
    "href": "data_analytics/employees.html#importing-data",
    "title": "Analysis 1: Number of local government employees",
    "section": "- Importing data",
    "text": "- Importing data\n\n# auto inporting function\nkosis1 = function (a,b){\n    library(\"jsonlite\")\n    library(\"dplyr\")\n    i1=a\n    i2=b    \n    years=seq(i1+1,i2,1)\n    data= fromJSON(glue::glue(\"https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/101/DT_1YL2101E/2/1/20211111002533&prdSe=Y&startPrdDe={i1}&endPrdDe={i1}\"))\n    for(i in years) {\n        assign(paste(\"employee_\",i,sep=\"\"), \n               fromJSON(glue::glue(\"https://kosis.kr/openapi/statisticsData.do?method=getList&apiKey=YjNjZjJmNDI2NWE1N2U3NGRiZWE3ZmI3MmU4YjliNGU=&format=json&jsonVD=Y&userStatsId=jsw0641/101/DT_1YL2101E/2/1/20211111002533&prdSe=Y&startPrdDe={i}&endPrdDe={i}\")))\n        data %>% \n            full_join(get(paste(\"employee_\",i,sep=\"\"))) -> data\n        print(paste(\"employee_\",i,\" added\",sep=\"\"))\n    }\n    return(data)\n}\n\n# Importing Data\nemployee_data=kosis1(2008,2020)\n\n\nemployee_data %>% \n    glimpse()\n\nRows: 230\nColumns: 14\n$ TBL_NM      <chr> \"지방자치단체공무원 현원(시도)\", \"지방자치단체공무원 현원(…\n$ PRD_DE      <chr> \"2008\", \"2008\", \"2008\", \"2008\", \"2008\", \"2008\", \"2008\", \"2…\n$ TBL_ID      <chr> \"DT_1YL2101E\", \"DT_1YL2101E\", \"DT_1YL2101E\", \"DT_1YL2101E\"…\n$ ITM_NM      <chr> \"지방자치단체공무원 현원\", \"지방자치단체공무원 현원\", \"지…\n$ ITM_ID      <chr> \"16110T2009_036\", \"16110T2009_036\", \"16110T2009_036\", \"161…\n$ ORG_ID      <chr> \"101\", \"101\", \"101\", \"101\", \"101\", \"101\", \"101\", \"101\", \"1…\n$ UNIT_NM     <chr> \"명\", \"명\", \"명\", \"명\", \"명\", \"명\", \"명\", \"명\", \"명\", \"명\"…\n$ UNIT_NM_ENG <chr> \"In person\", \"In person\", \"In person\", \"In person\", \"In pe…\n$ C1_OBJ_NM   <chr> \"행정구역별\", \"행정구역별\", \"행정구역별\", \"행정구역별\", \"…\n$ DT          <chr> \"275231\", \"46270\", \"15752\", \"10799\", \"12964\", \"6473\", \"676…\n$ PRD_SE      <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\"…\n$ C1          <chr> \"15110SDB000\", \"15110SDB001\", \"15110SDB002\", \"15110SDB003\"…\n$ C1_NM       <chr> \"전국\", \"서울특별시\", \"부산광역시\", \"대구광역시\", \"인천광…\n$ C1_NM_ENG   <chr> \"Whole country\", \"Seoul\", \"Busan\", \"Daegu\", \"Incheon\", \"Gw…\n\n\n\n# Selected Provinces \nemployee_data$C1_NM_ENG %>% \n    unique() -> level\nlevel\n\n [1] \"Whole country\"     \"Seoul\"             \"Busan\"            \n [4] \"Daegu\"             \"Incheon\"           \"Gwangju\"          \n [7] \"Daejeon\"           \"Ulsan\"             \"Gyeonggi-do\"      \n[10] \"Gangwon-do\"        \"Chungcheongbuk-do\" \"Chungcheongnam-do\"\n[13] \"Jeollabuk-do\"      \"Jeollanam-do\"      \"Gyeongsangbuk-do\" \n[16] \"Gyeongsangnam-do\"  \"Jeju\"              \"Sejong\"           \n\n\nSouth Korea is made up of 17 first-tier administrative divisions: 6 metropolitan cities (gwangyeoksi 광역시/廣域市), 1 special city (teukbyeolsi 특별시/特別市), 1 special self-governing city (teukbyeol-jachisi 특별자치시/特別自治市), and 9 provinces (do 도/道), including one special self-governing province (teukbyeol jachido 특별자치도/特別自治道). (cited from Wikipedia)"
  },
  {
    "objectID": "data_analytics/employees.html#clensing-data",
    "href": "data_analytics/employees.html#clensing-data",
    "title": "Analysis 1: Number of local government employees",
    "section": "- Clensing data",
    "text": "- Clensing data\n\nemployee_data$DT=as.numeric(employee_data$DT)\nemployee_data=employee_data%>%\n    dplyr::rename(ad_division=C1_NM_ENG) \n\n\nemployee_data %>% \n    filter(PRD_DE==2018) %>% \n    select(ad_division,DT) %>% \n    dplyr::rename(employee_2018=\"DT\") -> employee_2018\n\nemployee_data %>% \n    filter(PRD_DE==2019) %>% \n    select(ad_division,DT) %>% \n    dplyr::rename(employee_2019=\"DT\") -> employee_2019\n\nemployee_data %>% \n    filter(PRD_DE==2020) %>% \n    select(ad_division,DT) %>% \n    dplyr::rename(employee_2020=\"DT\") -> employee_2020"
  },
  {
    "objectID": "data_analytics/employees.html#the-decrease-rate-of-the-number-of-employees-in-2020-compared-to-2018",
    "href": "data_analytics/employees.html#the-decrease-rate-of-the-number-of-employees-in-2020-compared-to-2018",
    "title": "Analysis 1: Number of local government employees",
    "section": "- The decrease rate of the number of employees in 2020 compared to 2018",
    "text": "- The decrease rate of the number of employees in 2020 compared to 2018\n\nemployee_2018 %>% \n    full_join(employee_2019) %>% \n    full_join(employee_2020) %>% \n    dplyr::rename(Local_Divisions=\"ad_division\") -> emp_num\n\nJoining, by = \"ad_division\"\nJoining, by = \"ad_division\"\n\nemp_num$Local_Divisions=factor(emp_num$Local_Divisions,levels=rev(level))\n\nknitr::kable(emp_num,format.args = list(big.mark = \",\"),\n            caption = \"The Number of local government employees (2018, 2019, 2020)\",\n            col.names = gsub(\"[_]\", \" \", names(emp_num))) %>% \n    kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"))\n\n\n\nThe Number of local government employees (2018, 2019, 2020)\n \n  \n    Local Divisions \n    employee 2018 \n    employee 2019 \n    employee 2020 \n  \n \n\n  \n    Whole country \n    322,862 \n    337,084 \n    292,182 \n  \n  \n    Seoul \n    50,599 \n    52,081 \n    45,826 \n  \n  \n    Busan \n    19,088 \n    19,294 \n    16,509 \n  \n  \n    Daegu \n    12,912 \n    13,321 \n    10,975 \n  \n  \n    Incheon \n    14,515 \n    15,662 \n    13,478 \n  \n  \n    Gwangju \n    7,956 \n    8,409 \n    7,377 \n  \n  \n    Daejeon \n    7,704 \n    7,981 \n    6,704 \n  \n  \n    Ulsan \n    6,409 \n    6,684 \n    5,644 \n  \n  \n    Sejong \n    1,906 \n    2,132 \n    1,767 \n  \n  \n    Gyeonggi-do \n    54,864 \n    58,293 \n    51,147 \n  \n  \n    Gangwon-do \n    18,599 \n    19,215 \n    16,047 \n  \n  \n    Chungcheongbuk-do \n    13,947 \n    14,661 \n    13,040 \n  \n  \n    Chungcheongnam-do \n    18,180 \n    19,313 \n    16,522 \n  \n  \n    Jeollabuk-do \n    17,042 \n    17,811 \n    15,639 \n  \n  \n    Jeollanam-do \n    21,698 \n    22,685 \n    20,247 \n  \n  \n    Gyeongsangbuk-do \n    26,745 \n    27,829 \n    24,047 \n  \n  \n    Gyeongsangnam-do \n    24,836 \n    25,690 \n    22,056 \n  \n  \n    Jeju \n    5,862 \n    6,023 \n    5,157 \n  \n\n\n\n\n\n\nemp_num %>% \n    mutate(Increase_Rate=formattable::percent((employee_2020-employee_2018)/employee_2018)) %>%\n    select(Local_Divisions,Increase_Rate) %>% \n    kbl(col.names = gsub(\"[_]\", \" \", names(.)),\n        caption = \"The decrease rate of the number of employees in 2020 compared to 2018\") %>% \n    kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"))\n\n\n\nThe decrease rate of the number of employees in 2020 compared to 2018\n \n  \n    Local Divisions \n    Increase Rate \n  \n \n\n  \n    Whole country \n    -9.50% \n  \n  \n    Seoul \n    -9.43% \n  \n  \n    Busan \n    -13.51% \n  \n  \n    Daegu \n    -15.00% \n  \n  \n    Incheon \n    -7.14% \n  \n  \n    Gwangju \n    -7.28% \n  \n  \n    Daejeon \n    -12.98% \n  \n  \n    Ulsan \n    -11.94% \n  \n  \n    Sejong \n    -7.29% \n  \n  \n    Gyeonggi-do \n    -6.77% \n  \n  \n    Gangwon-do \n    -13.72% \n  \n  \n    Chungcheongbuk-do \n    -6.50% \n  \n  \n    Chungcheongnam-do \n    -9.12% \n  \n  \n    Jeollabuk-do \n    -8.23% \n  \n  \n    Jeollanam-do \n    -6.69% \n  \n  \n    Gyeongsangbuk-do \n    -10.09% \n  \n  \n    Gyeongsangnam-do \n    -11.19% \n  \n  \n    Jeju \n    -12.03% \n  \n\n\n\n\n\n\nOverall, the number of employees in every local divisions decreased by around 6 to 15 percentage points."
  },
  {
    "objectID": "data_analytics/employees.html#increase-rate-of-the-number-of-employees-in-2019-compared-to-2018",
    "href": "data_analytics/employees.html#increase-rate-of-the-number-of-employees-in-2019-compared-to-2018",
    "title": "Analysis 1: Number of local government employees",
    "section": "- Increase rate of the number of employees in 2019 compared to 2018",
    "text": "- Increase rate of the number of employees in 2019 compared to 2018\n\nemp_num %>% \n    mutate(increase=round(((employee_2019-employee_2018)/employee_2018)*100,2)) %>%\n    select(Local_Divisions,increase) %>% \n    ggplot(aes(x=Local_Divisions,y=increase)) + \n    geom_bar(stat = \"identity\", position = \"dodge\") +\n    theme_classic() +\n    geom_text(aes(label= paste(sprintf(\"%2.2f\", increase),\"%\",sep=\"\")), size=3, position = position_dodge(width = 1))+\n  labs(x=\"17 first-tier administrative divisions\",\n       y=\"Increase Rate(%)\")+\n  scale_y_continuous(breaks=seq(0, 15, 1)) + \n  theme(text=element_text(family=\"Lato\",size=10),\n        plot.title = element_text(size = 5))+\n  coord_flip() -> p \n\nplotly::ggplotly(p, tooltip=\"text\") %>% \n    style(textposition = \"right\") %>% \n    layout(title = list(text = paste0(\n        'Increase rate of employees in 2019 (compared to 2018)',\n        '<br>',\n        '<sup>',\n        'Source: Ministry of Public Administration and Security (KOSIS)','</sup>'),\n        x = 0.1,\n        font=list(size=15)))"
  },
  {
    "objectID": "data_analytics/employees.html#increase-rate-of-the-number-of-employees-in-2020-compared-to-2018",
    "href": "data_analytics/employees.html#increase-rate-of-the-number-of-employees-in-2020-compared-to-2018",
    "title": "Analysis 1: Number of local government employees",
    "section": "- Increase rate of the number of employees in 2020 compared to 2018",
    "text": "- Increase rate of the number of employees in 2020 compared to 2018\n\nemp_num %>% \n    mutate(increase=round(((employee_2020-employee_2018)/employee_2018)*100,2)) %>%\n    select(Local_Divisions,increase) %>% \n    arrange(increase) %>% \n    ggplot(aes(x=Local_Divisions,y=increase)) + \n    geom_bar(stat = \"identity\", position = \"dodge\") +\n    theme_classic() +\n    geom_text(aes(label= paste(sprintf(\"%2.2f\", increase),\"%\",sep=\"\")), size=3, position = position_dodge(width = 1))+\n  labs(x=\"17 first-tier administrative divisions\",\n       y=\"Increase Rate(%)\")+\n  scale_y_continuous(breaks=seq(0, 15, 1)) + \n  theme(text=element_text(family=\"Lato\",size=10),\n        plot.title = element_text(size = 5)) +\n  coord_flip() -> p \n\nplotly::ggplotly(p, tooltip=\"text\") %>% \n    style(textposition = \"left\") %>% \n    layout(title = list(text = paste0(\n        'Decrease rate of employees in 2020 (compared to 2018)',\n        '<br>',\n        '<sup>',\n        'Source: Ministry of Public Administration and Security (KOSIS)','</sup>'),\n        x = 0.1,\n        font=list(size=15)))\n\n\n\n\n\n\nemp_num %>% \n    mutate(increase=round(((employee_2020-employee_2018)/employee_2018)*100,2)) %>%\n    select(Local_Divisions,increase) %>% \n    arrange(increase) %>% \n    ggplot(aes(x=factor(Local_Divisions,levels=rev(.$Local_Divisions)),y=increase)) + \n    geom_bar(stat = \"identity\", position = \"dodge\") +\n    theme_classic() +\n    geom_text(aes(label= paste(sprintf(\"%2.2f\", increase),\"%\",sep=\"\")), size=3, position = position_dodge(width = 1))+\n  labs(x=\"17 first-tier administrative divisions\",\n       y=\"Increase Rate(%)\")+\n  scale_y_continuous(breaks=seq(0, 15, 1)) + \n  theme(text=element_text(family=\"Lato\",size=10),\n        plot.title = element_text(size = 5)) +\n  coord_flip() -> p \n\nplotly::ggplotly(p, tooltip=\"text\") %>% \n    style(textposition = \"left\") %>% \n    layout(title = list(text = paste0(\n        'Decrease rate of employees in 2020 (compared to 2018)',\n        '<br>',\n        '<sup>',\n        'Source: Ministry of Public Administration and Security (KOSIS)','</sup>'),\n        x = 0.1,\n        font=list(size=15)))\n\nWarning: Use of `.$Local_Divisions` is discouraged. Use `Local_Divisions` instead.\nUse of `.$Local_Divisions` is discouraged. Use `Local_Divisions` instead."
  },
  {
    "objectID": "data_analytics/employees.html#trends-of-the-number-of-local-government-employees-from-2009-to-2020",
    "href": "data_analytics/employees.html#trends-of-the-number-of-local-government-employees-from-2009-to-2020",
    "title": "Analysis 1: Number of local government employees",
    "section": "- Trends of the number of local government employees from 2009 to 2020",
    "text": "- Trends of the number of local government employees from 2009 to 2020\n\nemployee_data %>% \n    filter(ad_division==\"Whole country\") %>%  \n    arrange(PRD_DE) %>% \n    transmute(year=(PRD_DE),number=DT) %>%\n    mutate_if(is.character,as.numeric) %>%\n    dplyr::mutate(Diff_growth = number - lag(number), \n    # Difference in route between years\n     Rate_percent = round((Diff_growth)/lag(number) * 100,2)) %>% \n    # growth rate in percent\n    filter(year>2008) %>% \n    mutate(year=factor(year)) -> employee3\n\n employee3 %>% \n    kbl(col.names = gsub(\"[_]\", \" \", names(.)),\n        caption = \"The decrease rate of the number of employees in 2020 compared to 2018\",\n        format.args = list(big.mark = \",\")) %>% \n    kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"))\n\n\n\nThe decrease rate of the number of employees in 2020 compared to 2018\n \n  \n    year \n    number \n    Diff growth \n    Rate percent \n  \n \n\n  \n    2009 \n    278,303 \n    3,072 \n    1.12 \n  \n  \n    2010 \n    279,636 \n    1,333 \n    0.48 \n  \n  \n    2011 \n    281,035 \n    1,399 \n    0.50 \n  \n  \n    2012 \n    284,355 \n    3,320 \n    1.18 \n  \n  \n    2013 \n    287,299 \n    2,944 \n    1.04 \n  \n  \n    2014 \n    289,914 \n    2,615 \n    0.91 \n  \n  \n    2015 \n    296,273 \n    6,359 \n    2.19 \n  \n  \n    2016 \n    303,401 \n    7,128 \n    2.41 \n  \n  \n    2017 \n    310,654 \n    7,253 \n    2.39 \n  \n  \n    2018 \n    322,862 \n    12,208 \n    3.93 \n  \n  \n    2019 \n    337,084 \n    14,222 \n    4.40 \n  \n  \n    2020 \n    292,182 \n    -44,902 \n    -13.32 \n  \n\n\n\n\n\n\nfont_add_google(name=\"Noto Serif\")\nemployee3  %>% \n  ggplot(aes(x=as.factor(year))) + \n  geom_bar(aes(fill=\"pink\",y=Diff_growth),stat = \"identity\") + \n  theme_classic()+\n  geom_text(aes(y=Diff_growth+sign(Diff_growth)*-15,label= scales::comma(Diff_growth)), size=5,position = position_dodge(width = 1))+\n  theme(text=element_text(family=\"Noto Serif\",size=12),legend.position = \"none\")+\n  scale_x_discrete(labels = c(2009:2020))+\n  scale_y_continuous(breaks =seq(-45000,15000,by=5000)) +\n  labs(x=\"17 first-tier administrative divisions\",\n       y=\"Increase Rate(%)\")-> p1\n\nplotly::ggplotly(p1, tooltip=\"text\") %>% \n    style(textposition = \"center\") %>% \n    layout(title = list(text = paste0(\n        'Trends of the number of local government employees from 2009 to 2020',\n        '<br>',\n        '<sup>',\n        'Source: Ministry of Public Administration and Security (KOSIS)','</sup>'),\n        x = 0.01,\n        font=list(size=16)))\n\n\n\n\n\n\nemployee3  %>% \n  ggplot(aes(x=as.factor(year))) + \n  geom_bar(aes(x = as.factor(year), y = Diff_growth), stat = \"identity\",fill=\"gray\",alpha=0.3)+\n  geom_line(aes(x = as.integer(1:12), y = Rate_percent*3500),color=\"orange\",size=1)+\n  geom_point(aes(x = as.factor(year), y = Rate_percent*3500),color=\"red\",size=2, alpha=0.7) +\n  geom_text(aes(x = as.factor(year),y=Rate_percent*3500,label= paste(sprintf(\"%2.2f\", Rate_percent),\"%\",sep=\"\")),color=\"black\",hjust=-0.1,vjust=-2.3, size=8,position = position_dodge(width = 2))+\n  theme_classic()+\n  scale_y_continuous(sec.axis = sec_axis(~./3500, name = paste(\"Increase Rate  (%)\",\"\\n\"),breaks = seq(-15,10,5)),breaks =comma(seq(-50000,25000,by=5000),format = \"d\") )+\n  scale_x_discrete(labels = as.factor(c(2009:2020)))+\n  coord_cartesian(ylim=c(-50000,25000))+\n  labs(x=\"17 first-tier administrative divisions\",\n       y=\"Change in # of employees\",\n       title=\"Trends of the number of local government employees from 2009 to 2020\",\n       subtitle=\"Source: Ministry of Public Administration and Security (KOSIS)\") +\n  theme(text=element_text(family=\"Noto Serif\",size=25))\n\nWarning: position_dodge requires non-overlapping x intervals"
  }
]