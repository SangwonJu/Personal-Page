{
  "hash": "c87aa857e34e2d9a392e6eb36a3d0a59",
  "result": {
    "markdown": "---\ntitle: \"EDA Assignment 6: Chapter 8\"\nauthor: \"Sangwon Ju, Yonsei Public Administration\"\ndate: 'may/26/2021'\npage-layout: full\nformat: \n    html\ncategories: \n    \"Exploratory Data Analysis (2021 Spring) [in Korean]\"\nimage: \"image.png\"\n---\n\n\n8장. 시계열 자료의 탐색\n\n## 1번\n\nFRIDAY.DAT 자료는 영국에서 1986년 금요일에 발생한 자동차 사고 사망자 수이다. 첫 열은 하루를 24시간으로 표시한 것이고, 두 번째 열은 사망자 수이다. 시간에 따른 사망자 수를 평활하고 시간과 사망자 수의 관계를 서술하여라.\n\n데이터를 불러오고,첫번째 줄에 있는 데이터를 0시부터 23시로 변경하여 Time-series Plot을 그릴 때 보다 가독성을 좋게 만들고자 하였다. Time은 시작시간을 기준으로 한시간의 데이터를 포함하며 시작시간은 당일 0시부터 끝나는 시간은 익일 0시까지이다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\"haven\",\"sleekts\")\nfriday=data.frame(\n  stringsAsFactors = FALSE,\n                V1 = c(\"0-1\",\"1-2\",\"2-3\",\"3-4\",\n                       \"4-5\",\"5-6\",\"6-7\",\"7-8\",\"8-9\",\"9-10\",\"10-11\",\"11-12\",\n                       \"12-13\",\"13-14\",\"14-15\",\"15-16\",\"16-17\",\"17-18\",\n                       \"18-19\",\"19-20\",\"20-21\",\"21-22\",\"22-23\",\"23-0\"),\n                V2 = c(938L,621L,455L,207L,138L,\n                       215L,526L,1933L,3377L,2045L,2078L,2351L,3015L,\n                       2966L,2912L,4305L,4923L,4427L,3164L,2950L,2601L,2420L,\n                       2557L,4319L)\n)\nnames(friday)=c(\"Time\", \"Deaths\")\nfriday$Time=0:23\nfriday\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Time Deaths\n1     0    938\n2     1    621\n3     2    455\n4     3    207\n5     4    138\n6     5    215\n7     6    526\n8     7   1933\n9     8   3377\n10    9   2045\n11   10   2078\n12   11   2351\n13   12   3015\n14   13   2966\n15   14   2912\n16   15   4305\n17   16   4923\n18   17   4427\n19   18   3164\n20   19   2950\n21   20   2601\n22   21   2420\n23   22   2557\n24   23   4319\n```\n:::\n:::\n\n\n결측치를 확인하고 Box plot을 활용해서 Outlier가 존재하는지를 확인한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(friday)) # 0 결측치는 존재하지 않음.\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n\n```{.r .cell-code}\nboxplot(friday$Deaths,main= \"Checking Outlier of Deaths Data\") \n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#outlier는 존재하지 않는 것이 확인되어진다. \n```\n:::\n\n\nBoxplot을 통해 확인 할 경우 outlier는 확인되어지지는 않으나 Whisker의 길이가 길게 뻗어 있는 것이 확인되어 진다. Whisker의 길이와 median의 위치를 고려해볼 때, 자료가 완벽하게 대칭적이지는 않은 것으로 확인되어 진다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstem(friday$Deaths)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  The decimal point is 3 digit(s) to the right of the |\n\n  0 | 1225569\n  1 | 9\n  2 | 0144669\n  3 | 00024\n  4 | 3349\n```\n:::\n\n```{.r .cell-code}\nstem(friday$Deaths,2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  The decimal point is 3 digit(s) to the right of the |\n\n  0 | 122\n  0 | 5569\n  1 | \n  1 | 9\n  2 | 0144\n  2 | 669\n  3 | 00024\n  3 | \n  4 | 334\n  4 | 9\n```\n:::\n:::\n\n\nStem and Leaf Plot을 통해 데이터를 분석할 경우 데이터의 특성을 분석하려고 하였으나 어떠한 특징을 보이고 있는 것으로 보이지는 않는다. 다만, Stem Plot의 Scale을 약간 조정할 경우 Gap이 있는 것으로 보이는데 세개의 그룹으로 나누어지는 것 처럼 보인다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskewness = function(x) {\n  hl=fivenum(x)[2]\n  median=fivenum(x)[3]\n  hu=fivenum(x)[4]\n  skew=((hu-median)-(median-hl))/((hu-median)+(median-hl))\n  return(skew)\n}\nskewness(friday$Deaths)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.4796537\n```\n:::\n:::\n\n\n데이터의 Skewness를 고려해 볼 떄 Box plot에서 확인되였던 것 처럼, 해당 데이터는 Skewed to the left되어 있다는 사실을 확인할 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskewness(log(friday$Deaths))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.6903753\n```\n:::\n\n```{.r .cell-code}\nskewness(sqrt(friday$Deaths))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.5900806\n```\n:::\n\n```{.r .cell-code}\nskewness(-1/(friday$Deaths))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.8456372\n```\n:::\n\n```{.r .cell-code}\nskewness(-1/sqrt(friday$Deaths))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.7763614\n```\n:::\n\n```{.r .cell-code}\n# 변환을 하면 오히려 skewness가 더 커지고 있다.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# letter value display\nsource(\"http://mgimond.github.io/ES218/es218.R\")\n(lvd=lsum(friday$Deaths,6)) # mid 값이 점차 커지는 중\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  letter depth  lower     mid  upper spread\n1      M  12.5 2488.5 2488.50 2488.5    0.0\n2      H   6.5  779.5 1934.50 3089.5 2310.0\n3      E   3.5  335.0 2323.50 4312.0 3977.0\n4      D   2.0  207.0 2317.00 4427.0 4220.0\n5      C   1.5  172.5 2423.75 4675.0 4502.5\n6      B   1.0  138.0 2530.50 4923.0 4785.0\n```\n:::\n\n```{.r .cell-code}\n# Kurtosis (E-spread / H-spread - 1.705)\n(lvd[3,5]-lvd[3,3])/(lvd[2,5]-lvd[2,3]) -1.705 # more peaked than normal\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.01664502\n```\n:::\n:::\n\n\n-   데이터의 Five Numbers와 요약 지표\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfivenum(friday$Deaths)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  138.0  779.5 2488.5 3089.5 4923.0\n```\n:::\n\n```{.r .cell-code}\nsummary(friday$Deaths)# Median, Mean이 큰 차이가 없다.\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  138.0   858.8  2488.5  2310.1  3052.2  4923.0 \n```\n:::\n\n```{.r .cell-code}\nas.numeric(summary(friday$Deaths)[6]-summary(friday$Deaths)[1]) # 최고점과 최저점 사이의 차이는 4785\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4785\n```\n:::\n:::\n\n\n최고값의 경우 4923회의 사고 / 최소값의 경우 138회의 사고 / 평균적으로 2370회의 사고가 발생하였다.\n\n정규성을 따르는가?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqqnorm(friday$Deaths, ylab=\"Death quantiles\");qqline(friday$Deaths, col='red',lty=2)\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfiv=fivenum(friday$Deaths)\n(pseudosigma = (fiv[4]-fiv[2])/1.34)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1723.881\n```\n:::\n\n```{.r .cell-code}\nsd(friday$Deaths)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1447.733\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nqqnorm(friday$Deaths, ylab=\"Death quantiles\");qqline(friday$Deaths, col='red',lty=2)\nabline(fiv[3],pseudosigma,col=\"blue\",lty=2)\ntitle(sub=\"intercept=2488.5 (median); slope=1723.9 (pseudo-sigma) blue line\")\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\npseudo-sigma와 sigma가 큰 차이가 없고 자료들이 어느정도 직선을 따르고 있는 것을 보인다. (완벽히 직선을 이루는 것은 아니나 - 중간에 곡선형태를 보임 - 직선위에 있는 것처럼 ) 다만 위에서 Stem-Leaf Plot을 그리면서 언급하였던 것 처럼 세개의 cluster가 나타나고 있는 것이 확인되어 진다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nfriday2=friday\n((friday2$Deaths)/sum(friday2$Deaths))*100\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 1.6918276 1.1200693 0.8206627 0.3733564 0.2489043 0.3877857 0.9487221\n [8] 3.4864636 6.0909402 3.6884728 3.7479934 4.2403910 5.4380174 5.3496384\n[15] 5.2522410 7.7647313 8.8793896 7.9847772 5.7067619 5.3207799 4.6913046\n[22] 4.3648432 4.6119438 7.7899825\n```\n:::\n\n```{.r .cell-code}\nggplot(friday,aes(x=Deaths))+\n    geom_histogram(aes(y = stat(count) / sum(count)),binwidth=400, fill = \"pink\", colour = \"black\")+\n    labs(title=\"Histogram of deaths in friday\", x =\"# of Deaths\", y = \"Density\")+ \n    theme(plot.title = element_text(hjust = 0.5))+ \n    scale_y_continuous(labels = scales::percent)+\n    theme_minimal()+\n    ggeasy::easy_center_title()\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nCluster를 재확인 할 수 있음. \\# K-means Clustering 사용하여 세개의 군집분류\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkmeans(friday$Deaths, 3) # 13개, 4개, 7개\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nK-means clustering with 3 clusters of sizes 13, 7, 4\n\nCluster means:\n       [,1]\n1 2643.7692\n2  442.8571\n3 4493.5000\n\nClustering vector:\n [1] 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 3 3 3 1 1 1 1 1 3\n\nWithin cluster sum of squares by cluster:\n[1] 2544594.3  484446.9  254875.0\n (between_SS / total_SS =  93.2 %)\n\nAvailable components:\n\n[1] \"cluster\"      \"centers\"      \"totss\"        \"withinss\"     \"tot.withinss\"\n[6] \"betweenss\"    \"size\"         \"iter\"         \"ifault\"      \n```\n:::\n:::\n\n\n군집분류를 할 경우 세개의 군집이 나타나는데 0시부터 \\~ 6까지의 첫번째 Cluster는 심야시간대의 사고로 인한 사망이므로 수가 많지 않은 편이다. 반면, 두번째 Cluster는 일과시간대인 7시부터 15시, 퇴근시간 이후인 18시부터 23시의 경우 사망건수가 중간수준으로 나타나고, 15시부터 18시 사이와 23시부터 24시 사이의 3번째 Cluster에서 사망건수가 가장 많이 나타난다. 퇴근 시간대보다 일과시간대에서 사고가 더 많이 확인되는 것이 확인된다. 특이시간대는 23\\~24시 사이 구간인데, 음주를 하거나 모임을 가질 때 보통 23시 이후 집에 귀가를 많이 하는데 귀가 과정에서 음주운전 사고가 발생한 것으로 추측되어지지만 확실하지 않다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_cluster=cbind(friday,as.factor(kmeans(friday$Deaths, 3)$cluster))\nnames(ts_cluster)=c(\"Time\",\"Deaths\",\"Cluster\")\nts_cluster\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Time Deaths Cluster\n1     0    938       3\n2     1    621       3\n3     2    455       3\n4     3    207       3\n5     4    138       3\n6     5    215       3\n7     6    526       3\n8     7   1933       1\n9     8   3377       1\n10    9   2045       1\n11   10   2078       1\n12   11   2351       1\n13   12   3015       1\n14   13   2966       1\n15   14   2912       1\n16   15   4305       2\n17   16   4923       2\n18   17   4427       2\n19   18   3164       1\n20   19   2950       1\n21   20   2601       1\n22   21   2420       1\n23   22   2557       1\n24   23   4319       2\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=ts_cluster,aes(x=Time, y=Deaths, colour=Cluster)) + \n   geom_point(shape=19, size=4) + \n   geom_text(label=ts_cluster$Time,hjust=0, vjust=-1)+\n   ggtitle(\"Scatter Plot of Deaths' K-means clusters\")+\n   theme_bw()\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\nts.plot(friday,main=\"Timeseries plot of deaths\")\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-13-2.png){width=672}\n:::\n:::\n\n\n교통사고 사망자 수를 평활하기 위해서 수업시간에 교수님께서 Recommend 하신 3RSSH Twice방법과 4253H Twice방법을 활용하고자 한다.\n\nRecommend 해주신 방법들을 사용하기에 앞서 3RSS방법과 3RS3R방법으로 평활을 진행해 보았다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts.plot(friday,main=\"Default, 3RSS twice, 3RS3R twice\",ylab=\"Deaths\",lty=2)\nlines(ts(smooth(friday$Deaths, kind=\"3RSS\",twiceit=T)),col=\"red\")\nlines(ts(smooth(friday$Deaths, kind=\"3RS3R\",twiceit=T)),col=\"blue\")\nlegend(x = 1.5, y = 5000, c(\"Default\", \"3RSS Twice\",\"3RS3R Twice\"), \n      lty=c(2,1,1),lwd=2,col = c(\"black\",\"red\",\"blue\"))\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nHanning을 적용하기 전 데이터이다. 23시부터 24시 구간의 이상치가 어느정도 완화된 것을 확인할 수 있다. (다만 그 정도가 커보이기 때문에 조정이 필요할 것으로 보인다.) 또한, 8시 부근의 뾰족한 지점이 어느정도 완화되었고, 다른 Cluster 3에 해당하던 값들의 크기도 다소 작아진 것이 확인되어진다. 다만, 평평한 부분이 연속적으로 존재하는 것이 확인되어지기에 Hanning의 적용이 필요할 것으로 보인다. (전반적으로 3RSS(split 두번)나 3RS3R(Repeated 3 두번)에서는 큰 차이가 나타나고 있지는 않은 것으로 보인다.)\n\n다음으로는, 3RSSH, twice방식을 적용한 평활을 적용하였다.\n\n다만, smoothing 함수에 3RSSH twice 방식의 평활을 지원하지 않기 때문에 함수를 만들어 smooting을 진행해야 할 것으로 보인다. https://blog.daum.net/wonil2480/13 의 방식을 참고하여 함수를 형성하였음.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmooth_3RSSH=function(data){\n    smooth3RSS=smooth(data, kind=\"3RSS\")\n    \n    n=length(data)\n    smooth3RSSH=smooth3RSS\n    \n    \n    for (i in 2:(n-1)) {smooth3RSSH[i] <- smooth3RSS[i-1]/4 + smooth3RSS[i]/2 + smooth3RSS[i+1]/4}\n    smooth3RSSH[1] <- smooth3RSS[1]; smooth3RSSH[n] <- smooth3RSS[n]\n    rough=data-smooth3RSSH\n    roughH=rough\n    \n    smooth3RSS2=smooth(rough,kind=\"3RSS\")\n    \n    for (i in 2:(n-1)) roughH[i] <- smooth3RSS2[i-1]/4 + smooth3RSS2[i]/2 + smooth3RSS2[i+1]/4\n    roughH[1] <- smooth3RSS2[1]; roughH[n] <- smooth3RSS2[n]\n    out=smooth3RSSH+roughH\n    out=as.vector(out)\n    return(out)}\n\n#install.packages(\"LearnEDA\")\n#library(LearnEDA)\n\n#smooth.3RSSH.twice=function(data)\n#{\n#SMOOTH=han(smooth(attend,kind=”3RSS”)) # 3RSSH smooth\n#ROUGH=data-SMOOTH                      # computes the rough\n#SMOOTH+han(smooth(ROUGH,kind=”3RSS”)) \n\n#원래 있는 패키지를 활용한 방식과도 비교하였으나 차이가 없었다. \n#(CRAN에서 현재 삭제되어 이전 패키지를 다운받아 사용하였음)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nts.plot(friday,main=\"Default, 3RSSH Twice\",ylab=\"Deaths\",lty=2)\nlines(ts(smooth_3RSSH(friday$Deaths)),col=\"goldenrod4\")\nlegend(x = 1.5, y = 5000, c(\"Default\", \"3RSSH Twice\"), \n      lty=c(2,1),lwd=2,col = c(\"black\",\"goldenrod4\"))\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n3RSS나 3RS3R와 전반적인 추세선은 크게 다르지 않은 것으로 보인다. 다만 Cluster 3 (15시부터 18시 사이와 23시부터 24시 사이)에 해당하는 크기가 큰 자료들이 3RSSH자료에서 조금 더 잘 드러나고 있다. 동일하게 8시부터 9시 부근에 형성된 뾰족한 Outlier로 보이는 자료는 Smoothing 된것으로 확인된다.\n\n마지막으로 4253H, Twice 방식으로 평활한 데이터를 만들고자 한다. Sleekts 패키지의 sleek 활용하여 4253H, Twice 평활을 진행할 것이다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"sleekts\")\nlibrary(sleekts)\nsleek(friday$Death)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  902.6289  609.1992  462.4844  345.0000  268.0039  230.3789  454.5977\n [8]  974.8359 1599.0742 2027.2812 2178.5938 2281.4062 2448.0938 2668.3320\n[15] 2987.7344 3400.8086 3741.2070 3926.9414 3626.9219 3201.0547 2775.1875\n[22] 2649.3398 3092.6641 3092.6641\n```\n:::\n\n```{.r .cell-code}\nts.plot(friday,main=\"Default, 4253H Twice\",ylab=\"Deaths\",lty=2)\nlines(ts(sleek(friday$Death)),col=\"cyan3\")\n\nlegend(x = 1.5, y = 5000, c(\"Default\", \"4253H Twice\"), \n      lty=c(2,1),lwd=2,col = c(\"black\",\"cyan3\"))\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n4253H 방식의 평활은 다른 방식들에 비해서 곡선의 형태가 부드럽게 나타나는 것이 확인된다. 또한 각 Cluster들 별로 특성이 명확하게 드러나고 있다. Cluster 3 (15시부터 18시 사이와 23시부터 24시 사이)에 해당하는 값들이 부드럽게 시계열 그래프 안에서 표현되고 있는 것을 확인할 수 있다. Raw Data에 존재하지 않는 값을 활용해서 양끝값을 극단치에 영향을 최소화한 형태로 표현했고, Hanning을 통해서 평평한 지점들을 보다 부드러운 곡선 형태로 만들었다는 점에서 다른 평활법에 비해서 더 잘 표현되어 있다고 볼 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts.plot(friday,main=\"ALL\",ylab=\"Deaths\",lty=2)\nlines(ts(smooth(friday$Deaths, kind=\"3RSS\")),col=\"red\")\nlines(ts(smooth(friday$Deaths, kind=\"3RS3R\")),col=\"blue\")\nlines(ts(smooth_3RSSH(friday$Deaths)),col=\"goldenrod4\")\nlines(ts(sleek(friday$Death)),col=\"cyan3\")\nlegend(x = 1.5, y = 5000, c(\"Default\",\"3RSS Twice\",\"3RS3R Twice\",\"3RSSH Twice\",\"4253H Twice\"), \n      lty=c(2,1,1,1,1),lwd=2,col = c(\"black\",\"red\",\"blue\",\"goldenrod4\",\"cyan3\"))\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n모든 평활법을 비교할경우 다음과 같은 그래프를 그릴 수 있다. 앞에서 언급하였듯이 4253H, Twice 평활법이 가장 적절한 방법이라고 생각된다. 8시부터 9시 사이의 값, 16시 부터 17시 사이의 값 그리고 23시부터 24시 사이의 값이 변환전 자료에 비해 많이 감소되었다. 앞의 두 시간대는 출퇴근 시간이기 때문에 교통량이 많으므로 교통사고가 날 확률이 높아지고 사망사고가 발생할 확률도 다른 시간대에 비해서 높다고 볼 수 있다. 또한 23시부터 24시 시간대의 경우 앞에서 언급한 것과 같이 모든 평활법에서 실제 데이터보다 낮게 평활이 나타났는데, 전체적인 곡선을 고려할 때 이질적인 데이터이므로 그 원인에 대해서 심도있게 고민해볼 필요가 존재한다. Raw Data 기준으로 새벽시간대에는 교통량이 적어 사망사고건수도 적은 편에 비해서 일과시간대와 퇴근시간대에는 사망사고 건수가 많이 나타나고 있고 일과시간대에 퇴근시간대에 비해서 더 많은 사망사고가 발생한다는 것을 확인할 수 있다. 반면 평활된 데이터의 경우 퇴근시간대에 더 많은 사망사고가 발생하는 것으로 보여주고 있는데 평활된 데이터를 해석할 떄는 Raw Data를 유의해서 해석하는 것이 필요하다는 것을 확인할 수 있다.\n\nhttps://www.ncbi.nlm.nih.gov/pmc/articles/PMC2564438/ 한 보고서에 따르면 사고가 발생하는 원인을 세가지를 제시하였는데 A credible physiological explanation for the importance of good lighting for road safety is provided; low luminance, low contrast images are processed slowly by the visual apparatus, due mainly to the limited temporal characteristics of the rod photoreceptors.\n\nthe rod photoreceptors의 제한된 시간적 특성은 야간의 낮은 불빛, 낮은 이미지의 대비로 인해서 시신경의 피로를 불러 일으키고 그 결과 높은 사망사고율로 이어졌음을 제시하였다.\n\n전날 심야시간대에 사망사고 발생건수가 낮은 것에 비해 토요일 0시에 사망사고 발생건수가 높아 진 것은 주말에 앞서 사람들이 밤 늦게 까지 돌아다녀서 그런 것으로 추측되어지기도 하다. 시계열데이터의 왼쪽과 오른쪽이 대칭적이지 않은 이유는 금요일 0시와 토요일 0시(금요일 24시)가 사람들의 시각에서 질적으로 다르기 때문이라고 생각한다. 띠라서 데이터를 더 잘 이해하기 위해서는 목요일과 토요일의 시계열 자료를 확인하는 것이 필요할 것으로 보인다. (요일적 요인의 고려)\n\n#2번 R의 datasets에 있는 sunspot.year 자료를 평활하고 그 패턴을 기술하라. 주기가 있는지? 많아지는 \"속도\"와 줄어드는 \"속도\"도 주목하여라.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsunspot.year=tibble::tribble(\n    ~time, ~value,\n    1700L,      5,\n    1701L,     11,\n    1702L,     16,\n    1703L,     23,\n    1704L,     36,\n    1705L,     58,\n    1706L,     29,\n    1707L,     20,\n    1708L,     10,\n    1709L,      8,\n    1710L,      3,\n    1711L,      0,\n    1712L,      0,\n    1713L,      2,\n    1714L,     11,\n    1715L,     27,\n    1716L,     47,\n    1717L,     63,\n    1718L,     60,\n    1719L,     39,\n    1720L,     28,\n    1721L,     26,\n    1722L,     22,\n    1723L,     11,\n    1724L,     21,\n    1725L,     40,\n    1726L,     78,\n    1727L,    122,\n    1728L,    103,\n    1729L,     73,\n    1730L,     47,\n    1731L,     35,\n    1732L,     11,\n    1733L,      5,\n    1734L,     16,\n    1735L,     34,\n    1736L,     70,\n    1737L,     81,\n    1738L,    111,\n    1739L,    101,\n    1740L,     73,\n    1741L,     40,\n    1742L,     20,\n    1743L,     16,\n    1744L,      5,\n    1745L,     11,\n    1746L,     22,\n    1747L,     40,\n    1748L,     60,\n    1749L,   80.9,\n    1750L,   83.4,\n    1751L,   47.7,\n    1752L,   47.8,\n    1753L,   30.7,\n    1754L,   12.2,\n    1755L,    9.6,\n    1756L,   10.2,\n    1757L,   32.4,\n    1758L,   47.6,\n    1759L,     54,\n    1760L,   62.9,\n    1761L,   85.9,\n    1762L,   61.2,\n    1763L,   45.1,\n    1764L,   36.4,\n    1765L,   20.9,\n    1766L,   11.4,\n    1767L,   37.8,\n    1768L,   69.8,\n    1769L,  106.1,\n    1770L,  100.8,\n    1771L,   81.6,\n    1772L,   66.5,\n    1773L,   34.8,\n    1774L,   30.6,\n    1775L,      7,\n    1776L,   19.8,\n    1777L,   92.5,\n    1778L,  154.4,\n    1779L,  125.9,\n    1780L,   84.8,\n    1781L,   68.1,\n    1782L,   38.5,\n    1783L,   22.8,\n    1784L,   10.2,\n    1785L,   24.1,\n    1786L,   82.9,\n    1787L,    132,\n    1788L,  130.9,\n    1789L,  118.1,\n    1790L,   89.9,\n    1791L,   66.6,\n    1792L,     60,\n    1793L,   46.9,\n    1794L,     41,\n    1795L,   21.3,\n    1796L,     16,\n    1797L,    6.4,\n    1798L,    4.1,\n    1799L,    6.8,\n    1800L,   14.5,\n    1801L,     34,\n    1802L,     45,\n    1803L,   43.1,\n    1804L,   47.5,\n    1805L,   42.2,\n    1806L,   28.1,\n    1807L,   10.1,\n    1808L,    8.1,\n    1809L,    2.5,\n    1810L,      0,\n    1811L,    1.4,\n    1812L,      5,\n    1813L,   12.2,\n    1814L,   13.9,\n    1815L,   35.4,\n    1816L,   45.8,\n    1817L,   41.1,\n    1818L,   30.1,\n    1819L,   23.9,\n    1820L,   15.6,\n    1821L,    6.6,\n    1822L,      4,\n    1823L,    1.8,\n    1824L,    8.5,\n    1825L,   16.6,\n    1826L,   36.3,\n    1827L,   49.6,\n    1828L,   64.2,\n    1829L,     67,\n    1830L,   70.9,\n    1831L,   47.8,\n    1832L,   27.5,\n    1833L,    8.5,\n    1834L,   13.2,\n    1835L,   56.9,\n    1836L,  121.5,\n    1837L,  138.3,\n    1838L,  103.2,\n    1839L,   85.7,\n    1840L,   64.6,\n    1841L,   36.7,\n    1842L,   24.2,\n    1843L,   10.7,\n    1844L,     15,\n    1845L,   40.1,\n    1846L,   61.5,\n    1847L,   98.5,\n    1848L,  124.7,\n    1849L,   96.3,\n    1850L,   66.6,\n    1851L,   64.5,\n    1852L,   54.1,\n    1853L,     39,\n    1854L,   20.6,\n    1855L,    6.7,\n    1856L,    4.3,\n    1857L,   22.7,\n    1858L,   54.8,\n    1859L,   93.8,\n    1860L,   95.8,\n    1861L,   77.2,\n    1862L,   59.1,\n    1863L,     44,\n    1864L,     47,\n    1865L,   30.5,\n    1866L,   16.3,\n    1867L,    7.3,\n    1868L,   37.6,\n    1869L,     74,\n    1870L,    139,\n    1871L,  111.2,\n    1872L,  101.6,\n    1873L,   66.2,\n    1874L,   44.7,\n    1875L,     17,\n    1876L,   11.3,\n    1877L,   12.4,\n    1878L,    3.4,\n    1879L,      6,\n    1880L,   32.3,\n    1881L,   54.3,\n    1882L,   59.7,\n    1883L,   63.7,\n    1884L,   63.5,\n    1885L,   52.2,\n    1886L,   25.4,\n    1887L,   13.1,\n    1888L,    6.8,\n    1889L,    6.3,\n    1890L,    7.1,\n    1891L,   35.6,\n    1892L,     73,\n    1893L,   85.1,\n    1894L,     78,\n    1895L,     64,\n    1896L,   41.8,\n    1897L,   26.2,\n    1898L,   26.7,\n    1899L,   12.1,\n    1900L,    9.5,\n    1901L,    2.7,\n    1902L,      5,\n    1903L,   24.4,\n    1904L,     42,\n    1905L,   63.5,\n    1906L,   53.8,\n    1907L,     62,\n    1908L,   48.5,\n    1909L,   43.9,\n    1910L,   18.6,\n    1911L,    5.7,\n    1912L,    3.6,\n    1913L,    1.4,\n    1914L,    9.6,\n    1915L,   47.4,\n    1916L,   57.1,\n    1917L,  103.9,\n    1918L,   80.6,\n    1919L,   63.6,\n    1920L,   37.6,\n    1921L,   26.1,\n    1922L,   14.2,\n    1923L,    5.8,\n    1924L,   16.7,\n    1925L,   44.3,\n    1926L,   63.9,\n    1927L,     69,\n    1928L,   77.8,\n    1929L,   64.9,\n    1930L,   35.7,\n    1931L,   21.2,\n    1932L,   11.1,\n    1933L,    5.7,\n    1934L,    8.7,\n    1935L,   36.1,\n    1936L,   79.7,\n    1937L,  114.4,\n    1938L,  109.6,\n    1939L,   88.8,\n    1940L,   67.8,\n    1941L,   47.5,\n    1942L,   30.6,\n    1943L,   16.3,\n    1944L,    9.6,\n    1945L,   33.2,\n    1946L,   92.6,\n    1947L,  151.6,\n    1948L,  136.3,\n    1949L,  134.7,\n    1950L,   83.9,\n    1951L,   69.4,\n    1952L,   31.5,\n    1953L,   13.9,\n    1954L,    4.4,\n    1955L,     38,\n    1956L,  141.7,\n    1957L,  190.2,\n    1958L,  184.8,\n    1959L,    159,\n    1960L,  112.3,\n    1961L,   53.9,\n    1962L,   37.5,\n    1963L,   27.9,\n    1964L,   10.2,\n    1965L,   15.1,\n    1966L,     47,\n    1967L,   93.8,\n    1968L,  105.9,\n    1969L,  105.5,\n    1970L,  104.5,\n    1971L,   66.6,\n    1972L,   68.9,\n    1973L,     38,\n    1974L,   34.5,\n    1975L,   15.5,\n    1976L,   12.6,\n    1977L,   27.5,\n    1978L,   92.5,\n    1979L,  155.4,\n    1980L,  154.7,\n    1981L,  140.5,\n    1982L,  115.9,\n    1983L,   66.6,\n    1984L,   45.9,\n    1985L,   17.9,\n    1986L,   13.4,\n    1987L,   29.2,\n    1988L,  100.2\n    )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(sunspot.year)=c(\"Time\", \"Value\")\nhead(sunspot.year,5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n   Time Value\n  <int> <dbl>\n1  1700     5\n2  1701    11\n3  1702    16\n4  1703    23\n5  1704    36\n```\n:::\n:::\n\n\nBoxplot을 그려서 Outlier 존재 여부를 확인하고, 결측치의 존재여부를 확인한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot(sunspot.year$Value) # Outer Fence 밖의 값들이 다수 존재하는 것으로 보인다.\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsum(is.na(sunspot.year$Value)) # 0이라 결측치가 존재하지 않는다.\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(boxplot(sunspot.year$Value))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$stats\n      [,1]\n[1,]   0.0\n[2,]  15.6\n[3,]  39.0\n[4,]  68.9\n[5,] 141.7\n\n$n\n[1] 289\n\n$conf\n         [,1]\n[1,] 34.04624\n[2,] 43.95376\n\n$out\n[1] 154.4 151.6 190.2 184.8 159.0 155.4 154.7\n\n$group\n[1] 1 1 1 1 1 1 1\n\n$names\n[1] \"1\"\n```\n:::\n\n```{.r .cell-code}\nlength((boxplot(sunspot.year$Value))$out) # 총 7개의 Outlier가 존재한다. \n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 7\n```\n:::\n\n```{.r .cell-code}\n# upper outer fence의 값은 141.7이다.\nsubset(sunspot.year,sunspot.year$Value>141.7) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 2\n   Time Value\n  <int> <dbl>\n1  1778  154.\n2  1947  152.\n3  1957  190.\n4  1958  185.\n5  1959  159 \n6  1979  155.\n7  1980  155.\n```\n:::\n:::\n\n\n1778년, 1947년, 1957년, 1958년, 1959년, 1979년, 1980년 데이터가 outer fence 밖에서 발견되며 1950년대 후반에 3년 연속으로, 1979\\~1980년 2년 연속 outlier를 보였다는 점을 염두에 두고 데이터 분석을 진행해야 할 것으로 보인다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstem(sunspot.year$Value,1) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  The decimal point is 1 digit(s) to the right of the |\n\n   0 | 000112233334444455555666666777777788999\n   1 | 000000000111111111222233334445556666666677789\n   2 | 000111112233344445666778888899\n   3 | 0111122234455556666667888888999\n   4 | 0000112223444555667777778888889\n   5 | 024444457789\n   6 | 0000122334444444555677777788999\n   7 | 00133347888\n   8 | 0111233455669\n   9 | 033344669\n  10 | 01123345666\n  11 | 0112468\n  12 | 2256\n  13 | 125689\n  14 | 12\n  15 | 24559\n  16 | \n  17 | \n  18 | 5\n  19 | 0\n```\n:::\n:::\n\n\n앞에서 언급하엿었던 것 처럼 총 7개의 outlier를 확인할 수 있고, 전반적으로 skewed되어있는 데이터인 것으로 확인된다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskewness = function(x) {\n  hl=fivenum(x)[2]\n  median=fivenum(x)[3]\n  hu=fivenum(x)[4]\n  skew=((hu-median)-(median-hl))/((hu-median)+(median-hl))\n  return(skew)\n}\nskewness(sunspot.year$Value)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1219512\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nskewness(log(sunspot.year$Value))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.2337415\n```\n:::\n\n```{.r .cell-code}\nskewness(sqrt(sunspot.year$Value))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.05509413\n```\n:::\n\n```{.r .cell-code}\nskewness(-1/(sunspot.year$Value))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.5512195\n```\n:::\n\n```{.r .cell-code}\nskewness(-1/sqrt(sunspot.year$Value))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.4023891\n```\n:::\n\n```{.r .cell-code}\n# sqrt 변환을 skewness가 최소화 되는 것으로 보인다.\n```\n:::\n\n\nskewness를 계산할 경우 자료가 정규분포에 비해 skewed to the right 라는 사실을 확인할 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstem(sqrt(sunspot.year$Value)) # 자료의 비대칭성이 다소 개선 된 것으로 보인다.\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  The decimal point is at the |\n\n   0 | 000\n   1 | 223466789\n   2 | 001122222444455666667788999\n   3 | 1111222223333333445555566777889999\n   4 | 0000001112345556666778889999\n   5 | 0111222233344555556778889999\n   6 | 0000001111122222333344555666777788899999999999\n   7 | 0023334445667777788999\n   8 | 0000000001122222223333444555688889\n   9 | 000011222334566677889\n  10 | 000112223335556789\n  11 | 002245678899\n  12 | 34456\n  13 | 68\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# letter value display\nsource(\"http://mgimond.github.io/ES218/es218.R\")\n(lvd2=lsum(sunspot.year$Value,9)) # mid 값이 점차 커지는 중\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  letter depth lower    mid  upper spread\n1      M 145.0  39.0 39.000  39.00   0.00\n2      H  73.0  15.6 42.250  68.90  53.30\n3      E  37.0   8.5 54.350 100.20  91.70\n4      D  19.0   5.0 63.250 121.50 116.50\n5      C  10.0   3.0 71.000 139.00 136.00\n6      B   5.5   1.6 78.075 154.55 152.95\n7      A   3.0   0.0 79.500 159.00 159.00\n8      Z   2.0   0.0 92.400 184.80 184.80\n9      Y   1.5   0.0 93.750 187.50 187.50\n```\n:::\n\n```{.r .cell-code}\n# Kurtosis (E-spread / H-spread )- 1.705\n(lvd2[3,5]-lvd2[3,3])/(lvd2[2,5]-lvd2[2,3])-1.705 # more peaked than normal\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.01545028\n```\n:::\n:::\n\n\n데이터의 Five Numbers와 요약 지표\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfivenum(sunspot.year$Value)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]   0.0  15.6  39.0  68.9 190.2\n```\n:::\n\n```{.r .cell-code}\nsummary(sunspot.year$Value)# Median, Mean이 큰 차이가 없다.\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00   15.60   39.00   48.61   68.90  190.20 \n```\n:::\n\n```{.r .cell-code}\nas.numeric(summary(sunspot.year$Value)[6]-summary(sunspot.year$Value)[1]) # 최고점과 최저점 사이의 차이는 190.20\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 190.2\n```\n:::\n:::\n\n\n데이터의 최고점과 최저점 사이의 차이는 190.2정도인 것으로 확인된다. Median과 Mean값 사이의 차이가 꽤 크다는 점에서 skewed to the right 되었다는 사실을 어느정도 확인할 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqqnorm(sunspot.year$Value, ylab=\"Sunspots quantiles\");qqline(sunspot.year$Value, col='red',lty=2)\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfiv=fivenum(sunspot.year$Value)\n(pseudosigma = (fiv[4]-fiv[2])/1.34)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 39.77612\n```\n:::\n\n```{.r .cell-code}\nsd(sunspot.year$Value) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 39.4741\n```\n:::\n:::\n\n\npsudosigma와 실제 표준편차 사이에 큰 차이가 없는 것이 확인된다. 다만 qqplot에서 데이터가 직선을 따르기 보다는 Convex한 곡선을 따르고 있는 것처럼 보인다. (정규분포는 아니다)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqqnorm(sunspot.year$Value, ylab=\"Sunspots quantiles\");qqline(sunspot.year$Value, col='red',lty=2)\nabline(fiv[3],pseudosigma,col=\"blue\",lty=2)\ntitle(sub=\"intercept=39.00(median); slope=39.776 (pseudo-sigma) blue line\")\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nqqnorm(sqrt(sunspot.year$Value), ylab=\"Sqrt Sunspots quantiles\");qqline(sqrt(sunspot.year$Value), col='red',lty=2)\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# 변환 이전의 데이터에 비해서 정규분포를 상대적으로 잘 따르고 있는 것으로 보인다. \n```\n:::\n\n\n데이터가 감마분포를 따르는가?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSunspot.sort <- sort(sunspot.year$Value)\n(n.Sunspot<- length(sunspot.year$Value))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 289\n```\n:::\n\n```{.r .cell-code}\ni <- 1:n.Sunspot\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(mean.Sunspot <- mean(sunspot.year$Value))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 48.61349\n```\n:::\n\n```{.r .cell-code}\n(var.Sunspot <- var(sunspot.year$Value))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1558.205\n```\n:::\n\n```{.r .cell-code}\n(shape.Sunspot <- mean.Sunspot^2/var.Sunspot)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.516663\n```\n:::\n\n```{.r .cell-code}\n(scale.Sunspot <- mean.Sunspot/var.Sunspot)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.0311984\n```\n:::\n\n```{.r .cell-code}\nq.gamma.Sunspot <- qgamma((i-0.5)/n.Sunspot, shape.Sunspot, scale.Sunspot)\nplot(q.gamma.Sunspot, Sunspot.sort, main=\"Gamma prob plot\")\nline(q.gamma.Sunspot, Sunspot.sort)[2]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$coefficients\n[1] -4.149998  1.111070\n```\n:::\n\n```{.r .cell-code}\nabline(a=-4.14999766208764,b=1.11107022976103,col=\"red\",lwd=2) # 위에서 7개의 Outlier들을 제외하면 대부분의 데이터들이 직선 위에 존재하고 있는 것으로 보인다.\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\n데이터들이 Outlier들을 제외하면 감마분포를 잘 따르고 있는 것으로 보인다. 다만 데이터들이 0 근처에 Dense하게 몰려있는 것으로 보아 3승근 변환을 통해서 그러한 경향성을 완화하고자 한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(q.gamma.Sunspot^(1/3), Sunspot.sort^(1/3), main=\"Gamma prob plot\")\nline(q.gamma.Sunspot^(1/3), Sunspot.sort^(1/3))[2]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$coefficients\n[1] -0.5476324  1.1517409\n```\n:::\n\n```{.r .cell-code}\nabline(a=-0.547632367221911,b=1.15174089923436,col=\"red\",lwd=2)\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\n삼승근 변환 후의 데이터들이 직선위에 잘 모여있는 것으로 보아 시계열 데이터들이 감마분포를 잘 다르고 있다고 볼 수 있다.\n\n## 정리\n\n데이터가 현재 정규분포가 아닌 감마분포를 따르고 있는 것으로 보인다. 데이터의 정규성을 확보하기 위해서, sqrt 변환이나 Box Cox Transformation을 활용해 분석을 추가로 진행하고자 한다.\n\n평활을 진행하기 전 데이터가 어떤 경향을 가지고 있는지 Raw data와 차분 데이터에 대한 Plot을 그려 확인한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"forecast\")\nlibrary(forecast)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n```\n:::\n\n```{.r .cell-code}\nsunspot.year=ts(sunspot.year$Value,start=1700)\nts.plot(sunspot.year, main = \"Sunspot.year Time-Series Plot\",xlim=c(1700,2000))\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlambda <- forecast::BoxCox.lambda(sunspot.year+1e-07)\nsunspot.year_new <- forecast::BoxCox(sunspot.year, lambda)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(sunspot.year_new, main = \"Box-Cox : Sunspot.year\",xlim=c(1700,2000))\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(diff(sunspot.year_new), main = \"Difference & Box-Cox : sunspot.year\",xlim=c(1700,2000))\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-37-2.png){width=672}\n:::\n:::\n\n\nBox-Cox Transformation을 통해서 데이터를 변환하였다. 다만, 0인 값이 있어 매우 작은 수를 더해 경향성 만을 확인할 수 있도록 변환하였다. (변환을 적용하기 적합하지 않음)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlambda <- forecast::BoxCox.lambda(sunspot.year+1e-07)\nsunspot.year_new <- forecast::BoxCox(sunspot.year, lambda)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nts.plot(sunspot.year_new, main = \"Box-Cox : Sunspot.year\",xlim=c(1700,2000))\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\n변환전 그래프와 변환 후 그래프를 비교할 경우 차분된 데이터를 확인하면 원자료에서는 분산이 증가하는 경향성이 있었는데 두 변환을 사용할 경우 그 경향성이 다소 완화된 것이 확인되어 진다. 순서대로 원자료에 대한 평활 / Box-Cox Transforamtion에 대한 평활 / Sqrt 변환에 대한 평활을 진행하고자 한다. (3RSSH Twice,4253H Twice)\n\n원자료 3RSSH Twice\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmooth_3RSSH=function(data){\n    smooth3RSS=smooth(data, kind=\"3RSS\")\n    \n    n=length(data)\n    smooth3RSSH=smooth3RSS\n    \n    \n    for (i in 2:(n-1)) {smooth3RSSH[i] <- smooth3RSS[i-1]/4 + smooth3RSS[i]/2 + smooth3RSS[i+1]/4}\n    smooth3RSSH[1] <- smooth3RSS[1]; smooth3RSSH[n] <- smooth3RSS[n]\n    rough=data-smooth3RSSH\n    roughH=rough\n    \n    smooth3RSS2=smooth(rough,kind=\"3RSS\")\n    \n    for (i in 2:(n-1)) roughH[i] <- smooth3RSS2[i-1]/4 + smooth3RSS2[i]/2 + smooth3RSS2[i+1]/4\n    roughH[1] <- smooth3RSS2[1]; roughH[n] <- smooth3RSS2[n]\n    out=smooth3RSSH+roughH\n    out=as.vector(out)\n    return(out)\n  }\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nts.plot(sunspot.year,main=\"Raw Data: Default, 3RSSH Twice\",ylab=\"Spots\",lty=2,xlim=c(1700,2000))\nlines(ts(smooth_3RSSH(sunspot.year),start=1700,end=1988),col=\"red\")\nlegend(x = 1700, y = 190, c(\"Default\", \"3RSSH Twice\"), \n      lty=c(2,1),lwd=2,col = c(\"black\",\"red\"))\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n\n원자료 4253H Twice\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts.plot(sunspot.year,main=\"Raw Data: Default, 4253H Twice\",ylab=\"Spots\",lty=2,xlim=c(1700,2000))\nlines(ts(sleek(sunspot.year),start=1700,end=1988),col=\"blue\")\nlegend(x = 1700, y = 190, c(\"Default\", \"4253H Twice\"), \n      lty=c(2,1),lwd=2,col = c(\"black\",\"blue\"))\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n\nBoxcox 3RSSH Twice\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts.plot(sunspot.year_new,main=\"Box-Cox Transformed Data: Default, 3RSSH Twice\",ylab=\"Spots\",lty=2,xlim=c(1700,2000))\n\nlines(ts(smooth_3RSSH(sunspot.year_new),start=1700,end=1988),col=\"red\")\n\nlegend(x = 1850, y = 0, c(\"Default\", \"3RSSH Twice\"), \n       lty=c(2,1),lwd=2,col = c(\"black\",\"red\"))\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n:::\n\n\nBoxcox 4253H Twice\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts.plot(sunspot.year_new,main=\"Box-Cox Transformed Data: Default, 4253H Twice\",ylab=\"Spots\",lty=2,xlim=c(1700,2000))\nlines(ts(sleek(sunspot.year_new),start=1700,end=1988),col=\"red\")\nlegend(x = 1850, y = 0, c(\"Default\", \"4253H Twice\"), \n       lty=c(2,1),lwd=2,col = c(\"black\",\"blue\"))\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n:::\n\n\nSqrt 3RSSH Twice\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts.plot(sqrt(sunspot.year),main=\"Sqrt Transformed Data: Default, 3RSSH Twice\",ylab=\"Spots\",lty=2,xlim=c(1700,2000))\nlines(ts(smooth_3RSSH(sqrt(sunspot.year)),start=1700,end=1988),col=\"red\")\nlegend(x = 1700, y = 14, c(\"Default\", \"3RSSH Twice\"), \n       lty=c(2,1),lwd=2,col = c(\"black\",\"red\"))\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n\nSqrt 4253H Twice\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts.plot(sqrt(sunspot.year),main=\"Sqrt Transformed Data: Default, 4253H Twice\",ylab=\"Spots\",lty=2,xlim=c(1700,2000))\nlines(ts(sleek(sqrt(sunspot.year)),start=1700,end=1988),col=\"blue\")\nlegend(x = 1700, y = 14, c(\"Default\", \"4253H Twice\"), \n       lty=c(2,1),lwd=2,col = c(\"black\",\"blue\"))\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\n\n평활된 자료를 비교하기\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts.plot(sunspot.year,main=\"Raw Data:All\",ylab=\"Spots\",lty=2,xlim=c(1700,2000))\nlines(ts(smooth_3RSSH(sunspot.year),start=1700,end=1988),col=\"red\")\nlines(ts(sleek(sunspot.year),start=1700,end=1988),col=\"blue\")\nlines(ts(smooth(sunspot.year, kind=\"3RS3R\",twiceit=T),start=1700,end=1988),col=\"darkgreen\")\nlegend(x = 1700, y = 190, c(\"Default\", \"3RSSH Twice\",\"4253H Twice\",\"3RS3R Twice\"), \n      lty=c(2,1,1,1),lwd=2,col = c(\"black\",\"red\",\"blue\",\"darkgreen\"))\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n:::\n\n\n-   총 289년간 26번의 Fluctuation이 있는 것으로 보아 대략 11년마다 주기가 반복되어지는 것이 확인된다.\n-   각 주기별 Fluctuation에서 늘어나는 속도와 줄어드는 속도는 대체로 대칭적인 것으로 확인되어 진다.\n-   3RSSH twice 기법에 비해 4253H twice에서의 시계열 데이터가 조금 더 이 Fluctuation의 크기가 줄어든 것이 확인되어 진다.\n-   3RSSH Twice,4253H Twice 두 기법 모두 Hanning을 사용하여 3RS3R Twice 기법에 비해 평평한 지접이 나타나지 않는다.\n-   3RS3R Twice --\\> 3RSSH Twice --\\> 4253H Twice 순으로 극단값에 민감 한 것으로 보인다. 다만, 앞에서 언급하였던 1778년, 1947년, 1957년, 1958년, 1959년, 1979년, 1980년 자료들의 값들을 4253H Twice 기법이 다른 Smoothing 기법에 비해서 많이 깎아냈기 때문에 해석에 유의가 필요할 것으로 보인다.\n-   평활법을 사용하면 양 끝값을 실제 데이터를 활용하지 않고 인접 데이터들을 활용해 계산하기 때문에 실제 데이터에 비해서 덜 늘어나는 경향이 있다. 1988년도 실제 데이터는 더 늘어나고 있다는 점을 유의하여 해석해야 할 것이다.\n-   1950년대후반\\~1960년대초반에 Fluctuaition의 크기가 가장 큰 것으로 확인되고 1800년대 초반의 Fluctuation의 크기가 상대적으로 작은 것으로 보인다.\n-   봉우리의 Cycle은 앞에서 언급하였던 것 처럼 11년 정도이고 이 봉우리의 크기 또한 Fluctuate하는데 약 50년\\~60년 정도 마다 늘어나고 줄어드는 속도 또한 늘어나고 줄어드는 것으로 보인다. (ex, 1800s년대 초반 3주기 까지는 봉우리의 크기가 작다가 1840년이후의 3\\~4주기 정도는 봉우리의 크기가 늘어나고 그 이후 3주기 정도는 다시 그 크기가 줄어들고 있다.) (각 봉우리들의 크기 또한 주기성에 따라 움직이고 있는 것이 확인되어 진다.)\n-   이 분석에서는 주기성에 의미를 부여하기 위해서 3RSSH Twice Smoothing 기법이 다른 기법들에 비해서 해석에 도움이 될 것으로 보인다. 4253H Twice 기법을 사용할 경우 봉우리들의 크기 변화를 포착하기 어렵기 때문이다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts.plot(sunspot.year_new,main=\"Box-Cox Transformed Data:All\",ylab=\"Spots\",lty=2,xlim=c(1700,2000))\nlines(ts(smooth_3RSSH(sunspot.year_new),start=1700,end=1988),col=\"red\")\nlines(ts(sleek(sunspot.year_new),start=1700,end=1988),col=\"blue\")\nlegend(x=1880, y = 0, c(\"Default\", \"3RSSH Twice\",\"4253H Twice\"), \n       lty=c(2,1,1),lwd=2,col = c(\"black\",\"red\",\"blue\"))\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nts.plot(sqrt(sunspot.year),main=\"Sqrt Transformed Data:All\",ylab=\"Spots\",lty=2,xlim=c(1700,2000))\nlines(ts(smooth_3RSSH(sqrt(sunspot.year)),start=1700,end=1988),col=\"red\")\nlines(ts(sleek(sqrt(sunspot.year)),start=1700,end=1988),col=\"blue\")\nlegend(x = 1700, y = 14, c(\"Default\", \"3RSSH Twice\",\"4253H Twice\"), \n       lty=c(2,1,1),lwd=2,col = c(\"black\",\"red\",\"blue\"))\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-49-1.png){width=672}\n:::\n:::\n\n\n-   자료를 변환하고 Smoothing을 적용할 경우 각 봉우리들의 변화 크기가 정규화 되는 장점은 있으나 각 봉우리들의 크기 변화를 포착하기 어려워 지는 단점이 있다.\n-   흑점의 수가 0인 지접이 있는데, 0일 경우에 Box-Cox Transformation을 사용하는 것은 부적절한 변환 방법이다. 따라서 주기성에 집중하기 위해서는 다른 변환 방법을 사용해야 할 것이다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naTSA::adf.test(sunspot.year, nlag = NULL, output = TRUE) # p-value<=0.01 귀무가설을 기각하여 정상시계열\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAugmented Dickey-Fuller Test \nalternative: stationary \n \nType 1: no drift no trend \n     lag   ADF p.value\n[1,]   0 -3.07  0.0100\n[2,]   1 -6.03  0.0100\n[3,]   2 -4.82  0.0100\n[4,]   3 -3.41  0.0100\n[5,]   4 -2.80  0.0100\n[6,]   5 -1.92  0.0546\nType 2: with drift no trend \n     lag    ADF p.value\n[1,]   0  -5.32    0.01\n[2,]   1 -11.57    0.01\n[3,]   2 -10.62    0.01\n[4,]   3  -8.40    0.01\n[5,]   4  -7.57    0.01\n[6,]   5  -5.61    0.01\nType 3: with drift and trend \n     lag    ADF p.value\n[1,]   0  -5.44    0.01\n[2,]   1 -12.04    0.01\n[3,]   2 -11.22    0.01\n[4,]   3  -9.00    0.01\n[5,]   4  -8.25    0.01\n[6,]   5  -6.22    0.01\n---- \nNote: in fact, p.value = 0.01 means p.value <= 0.01 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nforecast(arima(sunspot.year,order=c(9,0,0)),h=10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Point Forecast      Lo 80     Hi 80      Lo 95     Hi 95\n1989      140.83009 121.740253 159.91992 111.634707 170.02546\n1990      155.71030 126.109440 185.31116 110.439691 200.98091\n1991      142.43541 107.370583 177.50023  88.808386 196.06243\n1992      113.77752  77.425429 150.12961  58.181795 169.37324\n1993       77.79994  41.309958 114.28993  21.993327 133.60656\n1994       44.01103   7.475744  80.54632 -11.864870  99.88694\n1995       20.34908 -16.382092  57.08025 -35.826399  76.52455\n1996       11.45779 -25.473329  48.38891 -45.023484  67.93907\n1997       27.81698  -9.226678  64.86064 -28.836406  84.47036\n1998       60.68808  23.577875  97.79829   3.932919 117.44325\n```\n:::\n\n```{.r .cell-code}\nplot(forecast(arima(sunspot.year,order=c(9,0,0)),h=10)) # Arima를 통해 미래 데이터가 어떻게 변할지 예측\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-51-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 실제 2014년까지의 흑점 데이터와 예측된 데이터의 추이를 비교할 경우 \nnew=ts(read.table(\"https://raw.githubusercontent.com/SangwonJu/data/main/solar.txt\")$V2,start=1988)\nplot(forecast(arima(sunspot.year,order=c(9,0,0)),h=26))\nlines(new,col=\"red\",lwd=2)\nlegend(x = 1700, y = 220, c(\"Forecasted Data\", \"Actual Data\"), \n       lty=c(1,1),lwd=2,col = c(\"#2297E6\",\"red\"),cex=0.7)\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-52-1.png){width=672}\n:::\n:::\n\n\n2000년대 초반까지의 흑점수의 변화는 거의 정확하게 예측된 것으로 보인다. 그 이후의 데이터는 다소 차이를 보이나 전반적인 추세는 유사한 것으로 보인다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(forecast(auto.arima(sunspot.year),h=26))\nlines(new,col=\"red\",lwd=2)\nlegend(x = 1700, y = 220, c(\"Forecasted Data\", \"Actual Data\"), \n       lty=c(1,1),lwd=2,col = c(\"#2297E6\",\"red\"),cex=0.7)\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-53-1.png){width=672}\n:::\n:::\n\n\n# 3번\n\nR의 fdeaths 자료를 평활하고 분석하여라\n\nMonthly Deaths from Lung Diseases in the UK Three time series giving the monthly deaths from bronchitis, emphysema and asthma in the UK, 1974--1979, both sexes (ldeaths), males (mdeaths) and females (fdeaths).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyr <- floor(tt <- time(mdeaths))\nplot(mdeaths, fdeaths,\n     xy.labels = paste(month.abb[12*(tt - yr)], yr-1900, sep = \"'\"))\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-54-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfdeaths_ts=ts(fdeaths,frequency = 12,start = c(1974,1))\nfdeaths_ts\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Jan  Feb  Mar  Apr  May  Jun  Jul  Aug  Sep  Oct  Nov  Dec\n1974  901  689  827  677  522  406  441  393  387  582  578  666\n1975  830  752  785  664  467  438  421  412  343  440  531  771\n1976  767 1141  896  532  447  420  376  330  357  445  546  764\n1977  862  660  663  643  502  392  411  348  387  385  411  638\n1978  796  853  737  546  530  446  431  362  387  430  425  679\n1979  821  785  727  612  478  429  405  379  393  411  487  574\n```\n:::\n:::\n\n\n결측치와 outlier의 존재여부를 체크하고자 한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot(fdeaths_ts, main=\"Number of Female Deaths\")\n(boxplot(fdeaths_ts, main=\"Number of Female Deaths\")) # Outlier는 한개 존재한다.\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-56-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n$stats\n     [,1]\n[1,]  330\n[2,]  411\n[3,]  512\n[4,]  684\n[5,]  901\n\n$n\n[1] 72\n\n$conf\n         [,1]\n[1,] 461.1661\n[2,] 562.8339\n\n$out\n[1] 1141\n\n$group\n[1] 1\n\n$names\n[1] \"\"\n```\n:::\n\n```{.r .cell-code}\nsubset(fdeaths,fdeaths>901) # 1976년 2월 자료가 Fence 밖의 Outlier 인 것으로 확인된다.\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1141\n```\n:::\n\n```{.r .cell-code}\nsum(is.na(fdeaths_ts)) #결측치는 없음\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n\nStem and Leaf Plot을 활용해 자료의 분포를 예측해보자 한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstem(fdeaths_ts,1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  The decimal point is 2 digit(s) to the right of the |\n\n   3 | 34566889999999\n   4 | 111111223333444555789\n   5 | 0233355788\n   6 | 1446667889\n   7 | 34567799\n   8 | 023356\n   9 | 00\n  10 | \n  11 | 4\n```\n:::\n\n```{.r .cell-code}\nstem(fdeaths_ts,2) # Skewd to the right 된 자료 인 것으로 보인다. 위에서 Boxplot을 통해 확인했던 Outlier를 재확인 할 수 있었다. Stem 4를 축으로 해서 데이터들이 잘 Cluster 되어 있는 것이 확인되어 진다.\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  The decimal point is 2 digit(s) to the right of the |\n\n   3 | 34\n   3 | 566889999999\n   4 | 111111223333444\n   4 | 555789\n   5 | 02333\n   5 | 55788\n   6 | 144\n   6 | 6667889\n   7 | 34\n   7 | 567799\n   8 | 0233\n   8 | 56\n   9 | 00\n   9 | \n  10 | \n  10 | \n  11 | 4\n```\n:::\n:::\n\n\nSkewness와 Kurtosis의 분석\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskewness = function(x) {\n  hl=fivenum(x)[2]\n  median=fivenum(x)[3]\n  hu=fivenum(x)[4]\n  skew=((hu-median)-(median-hl))/((hu-median)+(median-hl))\n  return(skew)\n}\nskewness(fdeaths_ts) #Skewed to the Right 되어 있는 것을 확인할 수 있다. \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.2600733\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nskewness(log(fdeaths_ts))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1379373\n```\n:::\n\n```{.r .cell-code}\nskewness(sqrt(fdeaths_ts))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1996023\n```\n:::\n\n```{.r .cell-code}\nskewness(-1/(fdeaths_ts)) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.01295976\n```\n:::\n\n```{.r .cell-code}\nskewness(-1/sqrt(fdeaths_ts))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.07555799\n```\n:::\n\n```{.r .cell-code}\n# Minus Inverse 변환에서 Skewness가 최소화 되는 것으로 보인다.\n```\n:::\n\n\nskewness를 계산할 경우 자료가 정규분포에 비해 skewed to the right 라는 사실을 확인할 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstem(log(fdeaths_ts))  # 자료의 비대칭성이 다소 개선 된 것으로 보인다.\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  The decimal point is 1 digit(s) to the left of the |\n\n  56 | \n  58 | 04589345666777\n  60 | 012222445667899000579\n  62 | 2677800567\n  64 | 26790002249\n  66 | 0244577812256\n  68 | 00\n  70 | 4\n```\n:::\n\n```{.r .cell-code}\nstem(-1/(fdeaths_ts))  \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  The decimal point is 4 digit(s) to the left of the |\n\n  -30 | 3\n  -28 | 270\n  -26 | 6640\n  -24 | 888544763333\n  -22 | 885332877544\n  -20 | 495\n  -18 | 9298833\n  -16 | 4323\n  -14 | 762110875\n  -12 | 863100776210\n  -10 | 7621\n   -8 | 8\n```\n:::\n\n```{.r .cell-code}\n# 단봉 분포가 아니라 쌍봉분포 인 것으로 보인다. stem (-24,-22)와 stem -12를 중심으로 하는 두개의 Cluster가 있는 것으로 보인다.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# letter value display\nsource(\"http://mgimond.github.io/ES218/es218.R\")\n(lvd3=lsum(fdeaths_ts,9)) # mid 값이 점차 커지는 중\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  letter depth lower    mid  upper spread\n1      M  36.5 512.0 512.00  512.0    0.0\n2      H  18.5 411.0 547.50  684.0  273.0\n3      E   9.5 387.0 588.75  790.5  403.5\n4      D   5.0 362.0 607.50  853.0  491.0\n5      C   3.0 348.0 622.00  896.0  548.0\n6      B   2.0 343.0 622.00  901.0  558.0\n7      A   1.5 336.5 678.75 1021.0  684.5\n8      Z   1.0 330.0 735.50 1141.0  811.0\n```\n:::\n\n```{.r .cell-code}\n# Kurtosis (E-spread) / (H-spread) - 1.705\n(lvd3[3,5]-lvd3[3,3])/(lvd3[2,5]-lvd3[2,3])-1.705 # flatter than normal\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.226978\n```\n:::\n:::\n\n\n데이터의 Five Numbers와 요약 지표\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfivenum(fdeaths_ts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  330  411  512  684 1141\n```\n:::\n\n```{.r .cell-code}\nsummary(fdeaths_ts)# Median, Mean이 큰 차이가 없다.\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  330.0   411.0   512.0   560.7   681.5  1141.0 \n```\n:::\n\n```{.r .cell-code}\nas.numeric(summary(fdeaths_ts)[6]-summary(fdeaths_ts)[1]) # 최고점과 최저점 사이의 차이는 811명\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 811\n```\n:::\n:::\n\n\n데이터의 최고점과 최저점 사이의 차이는 811 정도인 것으로 확인된다. Median과 Mean값 사이의 차이가 50명 내외로 나타나고 있는 것이 확인되어 진다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqqnorm(fdeaths_ts, ylab=\"Sunspots quantiles\");qqline(fdeaths_ts, col='red',lty=2)\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-63-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfiv=fivenum(fdeaths_ts)\n(pseudosigma = (fiv[4]-fiv[2])/1.34)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 203.7313\n```\n:::\n\n```{.r .cell-code}\nsd(fdeaths_ts) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 179.72\n```\n:::\n:::\n\n\npsudosigma와 실제 표준편차 사이에 30정도의 차이가 확인된다. 그러나 qqplot에서 데이터가 직선을 따르기 보다는 역S자의 곡선을 이루고 있는 것으로 보인다. (Sample 분포가 정규분포는 아니다)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqqnorm(fdeaths_ts, ylab=\"Female Deaths quantiles\");qqline(fdeaths_ts, col='red',lty=2)\nabline(fiv[3],pseudosigma,col=\"blue\",lty=2)\ntitle(sub=\"intercept=512(median); slope=203.7313 (pseudo-sigma) blue line\")\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-64-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nqqnorm(-1/fdeaths_ts, ylab=\"Minus Inverse Sunspots quantiles\");qqline(-1/fdeaths_ts, col='red',lty=2)\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-65-1.png){width=672}\n:::\n\n```{.r .cell-code}\nqqnorm(log(fdeaths_ts), ylab=\"Log Sunspots quantiles\");qqline(log(fdeaths_ts), col='red',lty=2)\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-65-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# 변환을 적용하더라도 qqplot에서 데이터의 역S자적 경향은 완화되지 않는다. \n```\n:::\n\n\n데이터가 감마분포를 따르는가?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfdeaths.sort <- sort(fdeaths_ts)\n(n.fdeaths<- length(fdeaths_ts))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 72\n```\n:::\n\n```{.r .cell-code}\ni <- 1:n.fdeaths\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(mean.fdeaths <- mean(fdeaths_ts))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 560.6806\n```\n:::\n\n```{.r .cell-code}\n(var.fdeaths <- var(fdeaths_ts))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 32299.29\n```\n:::\n\n```{.r .cell-code}\n(shape.fdeaths <- mean.fdeaths^2/var.fdeaths)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 9.732805\n```\n:::\n\n```{.r .cell-code}\n(scale.fdeaths <- mean.fdeaths/var.fdeaths)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.01735891\n```\n:::\n\n```{.r .cell-code}\nq.gamma.fdeaths <- qgamma((i-0.5)/n.fdeaths, shape.fdeaths, scale.fdeaths)\nplot(q.gamma.fdeaths, fdeaths.sort, main=\"Gamma prob plot\")\nline(q.gamma.fdeaths, fdeaths.sort)[2]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$coefficients\n[1] -57.897347   1.101421\n```\n:::\n\n```{.r .cell-code}\nabline(a=-4.14999766208764,b=1.11107022976103,col=\"red\",lwd=2) \n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-67-1.png){width=672}\n:::\n:::\n\n\n여전히 Probability Plot에서 역 S자적 성질이 사라지지 않고 있기 때문에 데이터는 혼합 분포에서 추출 된 것으로 추측된다. Minus Inverse 변환을 통해서 예측하였던 것이 재 확인되고 있다.\n\n## 정리\n\n해당 데이터는 정규분포를 따르고 있지 않다. (정규성x)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(forecast)\nts.plot(fdeaths_ts, main = \"Female Deaths from Lung Diseases Time-Series Plot\") #시계열 자료의 계절성을 확인할 수 있다.\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-68-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# 1976년을 제외하면 데이터의 Fluctuation이 일정하게 유지되고 있다.\nplot(diff(fdeaths_ts), main = \"Difference : Female Deaths from Lung Diseases\") # 차분데이터를 확인할 경우 동일하게 1976년 자료를 제외하면 분산의 증가 없이 일정하게 변동성이 유지 되는 것으로 볼 수 있다.\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-68-2.png){width=672}\n:::\n:::\n\n\nBox-Cox Transformation을 통해서 데이터를 변환하였다. (계절변동을 확인하기 위해서 데이터의 정규성을 개선하기 위해)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlambda <- forecast::BoxCox.lambda(fdeaths_ts)\nfdeaths_ts_new <- forecast::BoxCox(fdeaths_ts, lambda)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(fdeaths_ts_new, main = \"Box-Cox : Female Deaths from lung diseases\") # 1976년의 데이터의 이질성이 다소 완화되었다.\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-70-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(diff(fdeaths_ts_new), main = \"Difference & Box-Cox : Female Deaths from lung diseases\")\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-70-2.png){width=672}\n:::\n:::\n\n\nfdeaths 데이터 - 분해 시계열\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 계절요인 분해시계열\n \nfdeaths.decompose <- decompose(fdeaths)       # 데이터에서 4가지 요인을 분해\nfdeaths.decompose$seasonal                     # 계절요인으로 분해된 부분이다.\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            Jan        Feb        Mar        Apr        May        Jun\n1974  253.30417  276.72083  200.18750   39.36250  -73.05417 -131.32917\n1975  253.30417  276.72083  200.18750   39.36250  -73.05417 -131.32917\n1976  253.30417  276.72083  200.18750   39.36250  -73.05417 -131.32917\n1977  253.30417  276.72083  200.18750   39.36250  -73.05417 -131.32917\n1978  253.30417  276.72083  200.18750   39.36250  -73.05417 -131.32917\n1979  253.30417  276.72083  200.18750   39.36250  -73.05417 -131.32917\n            Jul        Aug        Sep        Oct        Nov        Dec\n1974 -148.36250 -195.49583 -192.26250 -106.68750  -63.97917  141.59583\n1975 -148.36250 -195.49583 -192.26250 -106.68750  -63.97917  141.59583\n1976 -148.36250 -195.49583 -192.26250 -106.68750  -63.97917  141.59583\n1977 -148.36250 -195.49583 -192.26250 -106.68750  -63.97917  141.59583\n1978 -148.36250 -195.49583 -192.26250 -106.68750  -63.97917  141.59583\n1979 -148.36250 -195.49583 -192.26250 -106.68750  -63.97917  141.59583\n```\n:::\n\n```{.r .cell-code}\nplot(fdeaths.decompose)\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-71-1.png){width=672}\n:::\n\n```{.r .cell-code}\nts.plot(fdeaths.decompose$seasonal,main=\"The Plot of Seasoal Decomposition\")\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-71-2.png){width=672}\n:::\n:::\n\n\n계절 요인을 제외한 나머지 변화 확인\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 계절요인 제외시키기\nfdeaths.decompose_new <- fdeaths - fdeaths.decompose$seasonal\nts.plot(fdeaths.decompose_new, main=\"Time-Series without Seasonal Effect\")\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-72-1.png){width=672}\n:::\n:::\n\n\n계절성을 제외한 나머지 요인들을 분석할 경우 1976년도의 Random한 요인에 의해서 데이터가 늘어난 것을 확인 할 수 있다. 1977년도 초반의 Random한 요인 또한 시계열에서 1\\~2월 데이터를 각 년도 동기에 비해서 다소 낮은 수준으로 유지하게 만들었다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfdeaths_1974=ts(fdeaths_ts[1:12],start=1)\nfdeaths_1975=ts(fdeaths_ts[13:24],start=1)\nfdeaths_1976=ts(fdeaths_ts[25:36],start=1)\nfdeaths_1977=ts(fdeaths_ts[37:48],start=1)  \nfdeaths_1978=ts(fdeaths_ts[49:60],start=1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfdeaths_1979=ts(fdeaths_ts[61:72],start=1)  \nyr=paste(\"fdeaths\",\"_\",1974:1979,sep=\"\")\n\nxat=seq(0,12,by=1)\npar(mfrow=c(2,3))\nfor (i in yr) {ts.plot(as.name(i),main=i,ylab=\"Female Deaths by lung cancer\")\n               axis(side=1,at=xat)}\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-74-1.png){width=672}\n:::\n:::\n\n\n각 년도별 계절성을 비교하기 위해서 이런식으로 그래프를 연도별로 쪼개서 그렸다. 연도별로 그러한 경향성이 비슷하게 드러나고 있는 것으로 보인다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"ghibli\")\nlibrary(\"ghibli\")\npal=ghibli_palette(\"PonyoLight\",n=6)\nas.character(pal)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"#A6A0A0FF\" \"#ADB7C0FF\" \"#94C5CCFF\" \"#F4ADB3FF\" \"#EEBCB1FF\" \"#ECD89DFF\"\n```\n:::\n\n```{.r .cell-code}\npar(mfrow=c(1,1))\n\nts.plot(fdeaths_1974,main=\"Female Deaths by lung diseases in UK\",xlab=\"Month\",ylab=\"# of Deaths\",col=\"#A6A0A0FF\",lwd=2,ylim=c(300,1200))\naxis(side=1,at=xat)\nlines(fdeaths_1975,lwd=2,col=\"#ADB7C0FF\")\nlines(fdeaths_1976,lwd=2,col=\"#94C5CCFF\")\nlines(fdeaths_1977,lwd=2,col=\"#F4ADB3FF\")\nlines(fdeaths_1978,lwd=2,col=\"#EEBCB1FF\")\nlines(fdeaths_1979,lwd=2,col=\"#ECD89DFF\")\n\nlegend(x = 10, y = 1200, c(1974:1979), \n          lty=c(rep(1,6)),lwd=2,col = c(as.character(pal)),cex=0.6)\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-75-1.png){width=672}\n:::\n:::\n\n\n전체데이터와 월별데이터에 평활을 진행하고자 한다. 평활법은 교수님께서 추천하셨던 3RSSH Twice, 4253H Twice에 더해 Hanning이 이루어지기 전 평활법인 3RS3R Twice를 추가하고자 한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sleekts)\npal2=as.vector(ghibli_palette(\"MononokeMedium\")[c(1,3,5,7)])\nts.plot(fdeaths_ts,main=\"Raw Data:All\",ylab=\"# of Female deaths\",lty=2,col=pal2[1])\nlines(ts(smooth(fdeaths_ts, kind=\"3RS3R\",twiceit=T),frequency = 12,start=c(1974,1),end=c(1979,12)),col=pal2[2],lwd=2)\nlines(ts(smooth_3RSSH(fdeaths_ts),frequency = 12,start=c(1974,1),end=c(1979,12)),col=pal2[3],lwd=2)\nlines(ts(sleek(fdeaths_ts),frequency = 12,start=c(1974,1),end=c(1979,12)),col=pal2[4],lwd=2)\n\nlegend(x =1978.7, y = 1100, c(\"Default\", \"3RS3R Twice\", \"3RSSH Twice\",\"4253H Twice\"), \n       lty=c(2,1,1,1),lwd=2,col = pal2,cex=0.5)\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-76-1.png){width=672}\n:::\n:::\n\n\n평활법을 적용하여 확인할 경우 원 자료에 비해 최댓값과 최솟값의 폭이 많이 줄어들었음을 확인할 수 있다. 작은 값에서는 크게 변화가 없지만 값이 큰 자료들의 경우 많이 깎여나갔다. 시계열을 확인하는데 있어서 그 계절성을 확인하기 좋은 형태로 평활이 된 것은 사실이지만, 위에서 언급한 1976년도의 특이값이 사라지게 되었고 그 특이값을 해석하는데 있어서 주의를 기울여야 할 것으로 보인다. 3RS3R Twice 기법의 경우 Hanning이 진행되지 않았기 때문에 다소 각진 부분이 남아있지만, 전반적으로 계절성이 나타나는 형태로 데이터를 변화시켰다. 나머지 Hanning을 사용한 2가지 평활법의 차이를 분석하면 4253H방법에서 큰 값들의 감소폭이 크게 나타나고 있다. 3가지 평활법의 양 끝자료의 경우 실제 존재하는 데이터를 가지고 만든 것이 아니기 때문에 그 추세를 해석하는데 있어서 용이하지만 실제 데이터와 차이가 있으므로 해석에 유의해야 할 것이다.\n\n앞에서 시계열 Decompose를 통해서 그렸던 계절성 그래프의 모양과 4253H Twice의 그래프가 상당히 유사한 것으로 보인다. 1년을 주기로 폐질환 사망자수가 Fluctuate 하고 있는데 겨울철에 전반적으로 증가하고 여름철에 감소하는 경향성을 가지는 것이 확인된다. 각 주기는 거의 대칭적으로 증감을 반복하고 있으며 1976, 1977년도를 제외하면 사망건수는 거의 비슷하게 유지 되는 것을 확인할 수 있다. 따라서 시계열 자료를 해석할 때 1976년도와 1977년도 자료는 유의해서 해석해야 할 것으로 보인다.\n\nhttps://premium.weatherweb.net/weather-in-history-1975-to-1999-ad/ For England and Wales (using the Met Office EWR/EWP series), it was one of the six DRIEST winters in the previous 100 years, and the third consecutive season with less rain than usual: summer and autumn 1975 were also dry. Winter 1975/76 had around 61% of average rainfall over England and Wales. It was this persistence of low precipitation, particularly throughout the winter 're-charge' season, that led to the severe DROUGHT problems encountered in 1976 (q.v.) 1976년도의 특이 값에 대한 원인을 분석할 때 해당 년도의 겨울이 100년중 6번째로 건조한 겨울이었다는 점을 고려해야 할 것으로 보인다. 가뭄 문제를 걱정할 정도로 겨울이 건조하였다는 사실은 해당 년도에 사람들이 호흡기 질환을 걸릴 가능성이 상당히 높았음을 예측할 수 있다.\n\n##Raw Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts.plot(fdeaths_1974,main=\"Female Deaths by lung diseases in UK\",xlab=\"Month\",ylab=\"# of Deaths\",col=\"#A6A0A0FF\",lwd=2,ylim=c(300,1200))\naxis(side=1,at=xat)\nlines(fdeaths_1975,lwd=2,col=\"#ADB7C0FF\")\nlines(fdeaths_1976,lwd=2,col=\"#94C5CCFF\")\nlines(fdeaths_1977,lwd=2,col=\"#F4ADB3FF\")\nlines(fdeaths_1978,lwd=2,col=\"#EEBCB1FF\")\nlines(fdeaths_1979,lwd=2,col=\"#ECD89DFF\")\n\nlegend(x = 10, y = 1200, c(1974:1979), \n          lty=c(rep(1,6)),lwd=2,col = c(as.character(pal)),cex=0.6)\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-77-1.png){width=672}\n:::\n:::\n\n\n## 3RS3R Twice\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts.plot(ts(smooth(fdeaths_1974, kind=\"3RS3R\",twiceit=T),start=1, end=12),main=\"3RS3R Twice: Female Deaths by lung diseases in UK\",xlab=\"Month\",ylab=\"# of Deaths\",col=pal[1],lwd=2,ylim=c(300,1200))\naxis(side=1,at=xat)\nlines(ts(smooth(fdeaths_1975, kind=\"3RS3R\",twiceit=T),start=1, end=12),lwd=2,col=pal[2])\nlines(ts(smooth(fdeaths_1976, kind=\"3RS3R\",twiceit=T),start=1, end=12),lwd=2,col=pal[3])\nlines(ts(smooth(fdeaths_1977, kind=\"3RS3R\",twiceit=T),start=1, end=12),lwd=2,col=pal[4])\nlines(ts(smooth(fdeaths_1978, kind=\"3RS3R\",twiceit=T),start=1, end=12),lwd=2,col=pal[5])\nlines(ts(smooth(fdeaths_1979, kind=\"3RS3R\",twiceit=T),start=1, end=12),lwd=2,col=pal[6])\nlegend(x = 10, y = 1200, c(1974:1979), \n          lty=c(rep(1,6)),lwd=2,col = c(as.character(pal)),cex=0.6)\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-78-1.png){width=672}\n:::\n:::\n\n\n## 3RSSH Twice\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts.plot(ts(smooth_3RSSH(fdeaths_1974),start=1, end=12),main=\"3RSSH Twice: Female Deaths by lung diseases in UK\",xlab=\"Month\",ylab=\"# of Deaths\",col=pal[1],lwd=2,ylim=c(300,1200))\naxis(side=1,at=xat)\nlines(ts(smooth_3RSSH(fdeaths_1975),start=1, end=12),lwd=2,col=pal[2])\nlines(ts(smooth_3RSSH(fdeaths_1976),start=1, end=12),lwd=2,col=pal[3])\nlines(ts(smooth_3RSSH(fdeaths_1977),start=1, end=12),lwd=2,col=pal[4])\nlines(ts(smooth_3RSSH(fdeaths_1978),start=1, end=12),lwd=2,col=pal[5])\nlines(ts(smooth_3RSSH(fdeaths_1979),start=1, end=12),lwd=2,col=pal[6])\nlegend(x = 10, y = 1200, c(1974:1979), \n          lty=c(rep(1,6)),lwd=2,col = c(as.character(pal)),cex=0.6)\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-79-1.png){width=672}\n:::\n:::\n\n\n## 4253H Twice\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts.plot(ts(sleek(fdeaths_1974),start=1, end=12),main=\"4253H Twice: Female Deaths by lung diseases in UK\",xlab=\"Month\",ylab=\"# of Deaths\",col=pal[1],lwd=2,ylim=c(300,1200))\naxis(side=1,at=xat)\nlines(ts(sleek(fdeaths_1975),start=1, end=12),lwd=2,col=pal[2])\nlines(ts(sleek(fdeaths_1976),start=1, end=12),lwd=2,col=pal[3])\nlines(ts(sleek(fdeaths_1977),start=1, end=12),lwd=2,col=pal[4])\nlines(ts(sleek(fdeaths_1978),start=1, end=12),lwd=2,col=pal[5])\nlines(ts(sleek(fdeaths_1979),start=1, end=12),lwd=2,col=pal[6])\nlegend(x = 10, y = 1200, c(1974:1979), \n       lty=c(rep(1,6)),lwd=2,col = c(as.character(pal)),cex=0.6)\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-80-1.png){width=672}\n:::\n:::\n\n\n원자료 --\\> 3RS3R Twice --\\> 3RSSH Twice--\\> 4253H Twice순으로 시계열의 추세가 유사해지고 있는것을 확인할 수 있다. Hanning을 사용하여 3RSSH Twice, 4253H Twice는 평평한 구간 없이 부드럽게 넘어가고 있으며 1976년도 평활법을 통해서 최대값이 줄어들어 다른 년도와 유사한 계절성을 확인할 수 있게 되었다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(forecast)\naTSA::adf.test(fdeaths, nlag = NULL, output = TRUE) # p-value<=0.01 귀무가설을 기각하여 정상시계열\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAugmented Dickey-Fuller Test \nalternative: stationary \n \nType 1: no drift no trend \n     lag   ADF p.value\n[1,]   0 -1.29   0.214\n[2,]   1 -1.14   0.269\n[3,]   2 -1.42   0.169\n[4,]   3 -1.13   0.273\nType 2: with drift no trend \n     lag   ADF p.value\n[1,]   0 -3.48  0.0131\n[2,]   1 -4.34  0.0100\n[3,]   2 -5.73  0.0100\n[4,]   3 -6.61  0.0100\nType 3: with drift and trend \n     lag   ADF p.value\n[1,]   0 -3.40  0.0628\n[2,]   1 -4.36  0.0100\n[3,]   2 -5.69  0.0100\n[4,]   3 -6.68  0.0100\n---- \nNote: in fact, p.value = 0.01 means p.value <= 0.01 \n```\n:::\n\n```{.r .cell-code}\nfit <- auto.arima(fdeaths)\nplot(forecast(fit, level=c(80, 95), h=12)) \n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-81-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# 다음 1년간의 변화를 예측할 경우 이전의 자료들과 비슷한 추세를 가지고 있는 것이 확인되어 진다.\n```\n:::\n\n\n# 4번\n\nR의 lynx 자료를 평활하고 분석하여라.\n\nAnnual numbers of lynx trappings for 1821--1934 in Canada. Taken from Brockwell & Davis (1991), this appears to be the series considered by Campbell & Walker (1977).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(lynx)\nboxplot(lynx,main=\"Boxplot of lynx data\") \n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-82-1.png){width=672}\n:::\n:::\n\n\nBoxplot을 통해서 확인했더니 총 4개의 Outlier가 확인되어 진다. Median이 Box 안의 밑에 위치하고 있는 것으로 보아 Skewed to the Right 한 자료일 가능성이 높다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot(lynx)$stats[5,] # upper fence의 값은 4950이고\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4950\n```\n:::\n\n```{.r .cell-code}\nboxplot(lynx)$out #5943, 6721, 6991, 6313 4개의 자료가 Fence의 밖에 존재한다.\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-83-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5943 6721 6991 6313\n```\n:::\n:::\n\n\nStem and leaf plot을 통해서 해당 데이터의 분포를 추측해본다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstem(lynx) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  The decimal point is 3 digit(s) to the right of the |\n\n  0 | 0001111111122222222222333333344444444444\n  0 | 55555566677777788889\n  1 | 00013344\n  1 | 556666788\n  2 | 011334\n  2 | 55677778899\n  3 | 01344\n  3 | 5568889\n  4 | 034\n  4 | \n  5 | 0\n  5 | 9\n  6 | 3\n  6 | 7\n  7 | 0\n```\n:::\n:::\n\n\nBox plot을 통해서 확인하였던 5개의 Outlier를 확인하였다. 0 stem들에 자료들이 많이 몰려있고 점차 줄어드는 것을 확인할 수 있다. Skewed to the right 되어 있는 분포를 따르고 있는 것으로 추측되어진다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskewness = function(x) {\n  hl=fivenum(x)[2]\n  median=fivenum(x)[3]\n  hu=fivenum(x)[4]\n  skew=((hu-median)-(median-hl))/((hu-median)+(median-hl))\n  return(skew)\n}\nskewness(lynx)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.6182796\n```\n:::\n:::\n\n\n데이터의 Skewness를 고려해 볼 떄 Box plot에서 확인되였던 것 처럼, 해당 데이터는 Skewed to the right되어 있다는 사실을 확인할 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskewness(log(lynx))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.2003311\n```\n:::\n\n```{.r .cell-code}\nskewness(sqrt(lynx))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.4289078\n```\n:::\n\n```{.r .cell-code}\nskewness(-1/(lynx))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.2755733\n```\n:::\n\n```{.r .cell-code}\nskewness(-1/sqrt(lynx)) # Minus inverse sqrt 변환이 Skewness를 가장 줄여 주는 것이 확인되어진다.\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.04397301\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# letter value display\nsource(\"http://mgimond.github.io/ES218/es218.R\")\n(lvd=lsum(lynx,8)) # mid 값이 점차 커지는 중\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  letter depth lower    mid  upper spread\n1      M  57.5 771.0  771.0  771.0      0\n2      H  29.0 345.0 1461.0 2577.0   2232\n3      E  15.0 188.0 1826.5 3465.0   3277\n4      D   8.0  81.0 2056.0 4031.0   3950\n5      C   4.5  63.5 2755.0 5446.5   5383\n6      B   2.5  47.0 3282.0 6517.0   6470\n7      A   1.5  42.0 3449.0 6856.0   6814\n8      Z   1.0  39.0 3515.0 6991.0   6952\n```\n:::\n\n```{.r .cell-code}\n# Kurtosis (E-spread / H-spread - 1.705)\n(lvd[3,5]-lvd[3,3])/(lvd[2,5]-lvd[2,3]) -1.705 # flatter than normal\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.23681\n```\n:::\n:::\n\n\n-   데이터의 Five Numbers와 요약 지표\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfivenum(lynx)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]   39  345  771 2577 6991\n```\n:::\n\n```{.r .cell-code}\nsummary(lynx)# Median, Mean이 차이가 크다 (767): skewed 되어있는 정도가 크다.\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   39.0   348.2   771.0  1538.0  2566.8  6991.0 \n```\n:::\n\n```{.r .cell-code}\nas.numeric(summary(lynx)[6]-summary(lynx)[1]) # 최고점과 최저점 사이의 차이는 6952\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6952\n```\n:::\n:::\n\n\n최고값의 경우 6991마리 / 최소값의 경우 39마리 / 평균적으로 1538마리가 잡혔다.\n\n정규성을 따르는가?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqqnorm(lynx, ylab=\"Lynx quantiles\"); qqline(lynx, col='red',lty=2)\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-89-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfiv=fivenum(lynx)\n(pseudosigma = (fiv[4]-fiv[2])/1.34)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1665.672\n```\n:::\n\n```{.r .cell-code}\nsd(lynx)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1585.844\n```\n:::\n\n```{.r .cell-code}\nqqnorm(lynx, ylab=\"Lynx quantiles\");qqline(lynx, col='red',lty=2)\nabline(fiv[3],pseudosigma,col=\"blue\",lty=2)\ntitle(sub=\"intercept=771 (median); slope=1665.672 (pseudo-sigma) blue line\")\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-89-2.png){width=672}\n:::\n:::\n\n\npseudo-sigma와 sigma가 차이가 80 정도로 다소 있다. 또한 Sample 자료들이 qqplot 상에서 직선을 따르고 있지 않은 것으로 보인다. 위의 문제에서 처럼 자료들이 역 S자 곡선을 그리고 있는 것으로 보인다.\n\n데이터가 지수분포를 따르는가?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- length(lynx)\nlynx.sort=(sort(lynx))\ni <- 1:n\nq.exp.lynx <- -log(1-(i-0.5)/n) # exponential quantile\nplot(q.exp.lynx , lynx.sort, main=\"Exponential prob plot\") \nline(q.exp.lynx , lynx.sort)[2]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$coefficients\n[1] -141.5597 1744.9693\n```\n:::\n\n```{.r .cell-code}\nabline(line(q.exp.lynx , lynx.sort)[2],col=\"red\",lty=2) \n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-90-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Outlier을 제외하면 직선을 잘 따르고 있는 것으로 보이나 왼쪽에 데이터가 몰려있는 것으로 보여 삼승근 변환을 통해 데이터를 분산시켜보고자 한다.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(q.exp.lynx^(1/3) , lynx.sort^(1/3), main=\"Exponential prob plot\")\nline(q.exp.lynx^(1/3) , lynx.sort^(1/3))[2]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$coefficients\n[1] -1.379257 12.915730\n```\n:::\n\n```{.r .cell-code}\nabline(line(q.exp.lynx^(1/3) , lynx.sort^(1/3))[2],col=\"red\",lty=2)\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-91-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# 직선을 잘 따르고 있는 것으로 보이나, 데이터들이 곡선을 따르고 있는 것 처럼 보이기도 하다.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 와이블 분포\nq.weibull.lynx <- log(q.exp.lynx)\nplot(q.weibull.lynx, log(lynx.sort), main=\"Weibull prob plot\")\nline(q.weibull.lynx, log(lynx.sort))[2]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$coefficients\n[1] 7.301571 1.131025\n```\n:::\n\n```{.r .cell-code}\nabline(line(q.weibull.lynx, log(lynx.sort))[2],col=\"red\",lty=2)\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-92-1.png){width=672}\n:::\n:::\n\n\n두 Plot을 비교할 경우 지수 분포에 더 적합한 것으로 보인다. (lynx data는 정규성이 확보되지는 못한 것으로 볼 수 있다.)\n\n잡힌 Lynx 수를 평활하기 위해서 수업시간에 교수님께서 Recommend 하신 3RSSH Twice방법과 4253H Twice방법에 더해 3RS3R Twice 활용하고자 한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(forecast)\nts.plot(lynx,main=\"Time series plot of lynx caught\",ylab= \"# of Caught\", xlab=\"Year\",xlim=c(1820,1940)) \n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-93-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# 시계열 자료의 주기성을 확인할 수 있다.\n# 1828년, 1866년, 1904년을 중심으로 하는 봉우리 주기들이 다른 주기들에 비해서 그 늘어나는 강도가 더 큰 것으로 확인되어 진다. 반면 1875년을 중심으로 하는 주기의 경우 다른 봉우리들에 비해서 그 늘어나는 강도가 부족 한 것으로 보인다.\n# 111년동안 12번의 봉우리 주기가 돌아왔으므로 9~10년 주기로 늘어났다가 줄어들었다를 반복하는 것을 확인할 수 있다. Lynx가 늘어나는 속도와 줄어드는 속도는 일치하는 것으로 확인되어 진다. \nts.plot(diff(lynx),main=\"Difference :  lynx caught\",ylab= \"# of Caught\", xlab=\"Year\",xlim=c(1820,1940)) \n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-93-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# 차분데이터를 확인할 경우 위에서 언급한 특이점들을 제외하면 분산의 증가 없이 일정하게 변동성이 유지 되는 것으로 볼 수 있다.\n```\n:::\n\n\nBox-Cox Transformation을 통해서 데이터를 변환하였다. (데이터의 정규성을 개선하기 위해)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlambda2 <- BoxCox.lambda(lynx)\nlynx_new <- BoxCox(lynx, lambda2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(lynx_new, main=\"Box Cox: Time series plot of lynx caught\",ylab= \"# of Caught\", xlab=\"Year\",xlim=c(1820,1940))\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-95-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(diff(lynx_new), main = \"Difference & Box-Cox : Time series plot of lynx caught\",ylab= \"# of Caught\", xlab=\"Year\",xlim=c(1820,1940) )\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-95-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"ggpmisc\")\nlibrary(ggpmisc)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: ggpp\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'ggpp'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:ggplot2':\n\n    annotate\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nggplot(lynx, as.numeric = F) + \n   geom_line()+\n   theme_bw()+\n   stat_peaks(colour = \"red\")+\n   stat_valleys(colour = \"blue\")+\n   stat_peaks(geom = \"text\", colour = \"red\", vjust = -0.5, x.label.fmt = \"%Y\") +\n   stat_valleys(geom = \"text\", colour = \"blue\", angle = 45, vjust = 1.5, hjust = 1, x.label.fmt = \"%Y\")+\n   scale_y_continuous(limits = c(-1000, 8000))+\n   ggtitle(\"Lynx Caught Data\")+\n   xlab(\"year\")+\n   ylab(\"# of Lynx caught\")\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-96-1.png){width=672}\n:::\n:::\n\n\n전체데이터와 월별데이터에 평활을 진행하고자 한다. 평활법은 교수님께서 추천하셨던 3RSSH Twice, 4253H Twice에 더해 Hanning이 이루어지기 전 평활법인 3RS3R Twice를 추가하고자 한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sleekts)\npal3=as.vector(ghibli_palette(\"PonyoMedium\")[c(1,2,4,7)])\n\nts.plot(lynx,main=\"Raw Data:All\",ylab= \"# of Caught\", xlab=\"Year\",xlim=c(1820,1940),lty=2,col=pal3[1])\nlines(ts(smooth(lynx, kind=\"3RS3R\",twiceit=T),start=1821,end=1934),col=pal3[2],lwd=2)\nlines(ts(smooth_3RSSH(lynx),start=1821,end=1934),col=pal3[3],lwd=2)\nlines(ts(sleek(lynx),start=1821,end=1934),col=pal3[4],lwd=2)\nlegend(x =1910, y = 6800, c(\"Default\", \"3RS3R Twice\", \"3RSSH Twice\",\"4253H Twice\"), \n       lty=c(2,1,1,1),lwd=2,col = pal3,cex=0.5)\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-97-1.png){width=672}\n:::\n:::\n\n\nLynx의 포획 수는 약 10년마다 증가하고 감소하는 패턴을 확인할 수 있다. 덫에 걸리는 Lynx들의 수는 자연의 Lynx 개체수와 비례한다고 볼 때, 10년 주기로 총 개체수가 줄어들고 늘어난다고 볼 수 있다. (단, 설치된 Trap의 수가 매 시기별로 어느정도 동일하다는 조건이 붙어야 한다.)\n\n평활법 적용으로 인해 원 자료에 비해 최댓값과 최솟값의 폭이 많이 줄어들었다. 작은 값에서는 크게 변화가 없지만 값이 큰 자료들이 많이 줄어들었다.\n\n앞에서 언급하였던, 1828년, 1866년, 1904년의 특이 봉우리 들이 평활 이후에는 상당히 낮아졌다. 1866년 봉우리의 경우 3가지 평활법에서 모두 거의 절반 가량을 깎아냈다. 또한 1913년, 1916년의 경우 봉우리가 연속적으로 존재하였는데 평활 이후에는 이러한 봉우리가 하나의 봉우리로 합쳐지게 되었다. 평활로 인해 깎아진 봉우리들을 적절하게 해석하기 위해서는 원 데이터들을 반드시 고려해야 할 것이다. (원 데이터에 발생한 특이값들이 특정한 요인에 의해서 발생했다면 그 요인을 정확히 파악하는 것이 시계열 데이터의 올바른 이해를 위해서 필요할 것이라고 보인다.)\n\n3가지 평활법 모두 양 끝자료를 실재하는 자료가 아닌 대체된 자료를 활용하였음에도 불구하고 실제 자료랑 큰 차이지 보이지 않고 있다. 4253H Twice 기법이 다른 두 기법에 비해서 큰 값들을 많이 깎아내는데 이를 해석하는데 있어서 상당히 유의해야 할 것으로 보인다.\n\nLynx 개체수의 10년의 주기성을 확인하기 위해서는 4253H Twice 기법을 사용하는 것이 적절해 보이고, 각 Local 봉우리별 크기의 변화에 집중하기 위해서는 3RSSH Twice를 사용하는 것이 적절해 보인다.\n\n-   1866년, 1904년의 봉우리 다음 봉우리들은 상당히 Peak의 높이가 낮아졌는데 그 원인을 이전 봉우리에서 생성된 많은 개체들이 서식지를 파괴한 것이 아닐까 라고 추측해볼 수 있으나 확실하지 않다.\n\n##미래에 Lynx의 숫자는 어떻게 변할까?\n\n\n::: {.cell}\n\n```{.r .cell-code}\naTSA::adf.test(lynx, nlag = NULL, output = TRUE) # p-value<=0.01 귀무가설을 기각하여 정상시계열\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAugmented Dickey-Fuller Test \nalternative: stationary \n \nType 1: no drift no trend \n     lag   ADF p.value\n[1,]   0 -2.75  0.0100\n[2,]   1 -4.63  0.0100\n[3,]   2 -3.33  0.0100\n[4,]   3 -3.17  0.0100\n[5,]   4 -2.48  0.0148\nType 2: with drift no trend \n     lag   ADF p.value\n[1,]   0 -4.22    0.01\n[2,]   1 -7.86    0.01\n[3,]   2 -6.40    0.01\n[4,]   3 -7.05    0.01\n[5,]   4 -6.31    0.01\nType 3: with drift and trend \n     lag   ADF p.value\n[1,]   0 -4.22    0.01\n[2,]   1 -7.85    0.01\n[3,]   2 -6.39    0.01\n[4,]   3 -7.04    0.01\n[5,]   4 -6.31    0.01\n---- \nNote: in fact, p.value = 0.01 means p.value <= 0.01 \n```\n:::\n\n```{.r .cell-code}\nfit <- auto.arima(lynx)\nplot(forecast(fit, level=c(80, 95), h=10))  #미래 데이터가 어떻게 이동할지 예측\n```\n\n::: {.cell-output-display}\n![](과제6_files/figure-html/unnamed-chunk-98-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "과제6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}